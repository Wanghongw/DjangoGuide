{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Django\u4f7f\u7528\u6307\u5357 \u672c\u6559\u7a0b\u662f\u4f5c\u8005\u5728\u5de5\u4f5c\u4e0e\u5b66\u4e60\u4f7f\u7528Django\u7684\u8fc7\u7a0b\u4e2d\u5bf9\u9047\u5230\u7684\u95ee\u9898\u4ee5\u53ca\u5e73\u65f6\u603b\u7ed3\u7684\u4e00\u4e9b\u96f6\u788e\u77e5\u8bc6\u70b9\u7684\u6c47\u603b\u6587\u6863\uff0c\u5e0c\u671b\u80fd\u5e2e\u52a9\u521a\u5165\u95e8web\u5f00\u53d1\u7684\u4eba\u58eb\u901a\u8fc7\u81ea\u5b66\u5feb\u901f\u4e0a\u624b\u7f51\u7ad9\u670d\u52a1\u7aef\u7684\u5f00\u53d1\u3002\u5f53\u7136\u5982\u679c\u4f60\u662f\u4e00\u540d\u7ecf\u9a8c\u4e30\u5bcc\u7684Python\u540e\u7aef\u5de5\u7a0b\u5e08\uff0c\u4f60\u4e5f\u53ef\u4ee5\u628a\u672c\u6559\u7a0b\u5f53\u4f5c\u662f\u4e00\u672c\u53c2\u8003\u624b\u518c\u4f7f\u7528\uff0c\u6bd5\u7adf\u201c\u597d\u8bb0\u6027\u4e0d\u5982 \u70c2\u7b14\u5934 (\u597d\u6587\u6863)\u201d\u3002 Django\u6846\u67b6\u5165\u95e8 Django\u6846\u67b6\u5165\u95e8 Django\u6838\u5fc3\u77e5\u8bc6\u70b9\u8bb2\u89e3 01 \u8def\u7531\u63a7\u5236 02 \u89c6\u56fe\u7cfb\u7edf 03 \u6a21\u578b\u5c421-ORM\u4ecb\u7ecd\u53ca\u5355\u8868\u64cd\u4f5c 03 \u6a21\u578b\u5c422-ORM\u591a\u8868\u64cd\u4f5c 05 \u6a21\u677f\u5c42 06 \u4e2d\u95f4\u4ef6 Django\u5e38\u7528\u7684\u7ec4\u4ef6\u4ecb\u7ecd Django\u8fdb\u9636\u53ca\u5176\u4ed6\u77e5\u8bc6\u70b9\u6c47\u603b DRF\u76f8\u5173 \u6700\u540e\uff0c\u5982\u679c\u60a8\u89c9\u5f97\u672c\u6559\u7a0b\u6307\u5357\u5bf9\u60a8\u6709\u5e2e\u52a9\u7684\u8bdd\uff0c\u6b22\u8fce\u4e3a\u7b14\u8005\u6253\u8d4f\uff0c\u611f\u8c22\u60a8\u7684\u652f\u6301\uff01","title":"Home"},{"location":"#django","text":"\u672c\u6559\u7a0b\u662f\u4f5c\u8005\u5728\u5de5\u4f5c\u4e0e\u5b66\u4e60\u4f7f\u7528Django\u7684\u8fc7\u7a0b\u4e2d\u5bf9\u9047\u5230\u7684\u95ee\u9898\u4ee5\u53ca\u5e73\u65f6\u603b\u7ed3\u7684\u4e00\u4e9b\u96f6\u788e\u77e5\u8bc6\u70b9\u7684\u6c47\u603b\u6587\u6863\uff0c\u5e0c\u671b\u80fd\u5e2e\u52a9\u521a\u5165\u95e8web\u5f00\u53d1\u7684\u4eba\u58eb\u901a\u8fc7\u81ea\u5b66\u5feb\u901f\u4e0a\u624b\u7f51\u7ad9\u670d\u52a1\u7aef\u7684\u5f00\u53d1\u3002\u5f53\u7136\u5982\u679c\u4f60\u662f\u4e00\u540d\u7ecf\u9a8c\u4e30\u5bcc\u7684Python\u540e\u7aef\u5de5\u7a0b\u5e08\uff0c\u4f60\u4e5f\u53ef\u4ee5\u628a\u672c\u6559\u7a0b\u5f53\u4f5c\u662f\u4e00\u672c\u53c2\u8003\u624b\u518c\u4f7f\u7528\uff0c\u6bd5\u7adf\u201c\u597d\u8bb0\u6027\u4e0d\u5982 \u70c2\u7b14\u5934 (\u597d\u6587\u6863)\u201d\u3002","title":"Django\u4f7f\u7528\u6307\u5357"},{"location":"#django_1","text":"Django\u6846\u67b6\u5165\u95e8","title":"Django\u6846\u67b6\u5165\u95e8"},{"location":"#django_2","text":"01 \u8def\u7531\u63a7\u5236 02 \u89c6\u56fe\u7cfb\u7edf 03 \u6a21\u578b\u5c421-ORM\u4ecb\u7ecd\u53ca\u5355\u8868\u64cd\u4f5c 03 \u6a21\u578b\u5c422-ORM\u591a\u8868\u64cd\u4f5c 05 \u6a21\u677f\u5c42 06 \u4e2d\u95f4\u4ef6","title":"Django\u6838\u5fc3\u77e5\u8bc6\u70b9\u8bb2\u89e3"},{"location":"#django_3","text":"","title":"Django\u5e38\u7528\u7684\u7ec4\u4ef6\u4ecb\u7ecd"},{"location":"#django_4","text":"","title":"Django\u8fdb\u9636\u53ca\u5176\u4ed6\u77e5\u8bc6\u70b9\u6c47\u603b"},{"location":"#drf","text":"\u6700\u540e\uff0c\u5982\u679c\u60a8\u89c9\u5f97\u672c\u6559\u7a0b\u6307\u5357\u5bf9\u60a8\u6709\u5e2e\u52a9\u7684\u8bdd\uff0c\u6b22\u8fce\u4e3a\u7b14\u8005\u6253\u8d4f\uff0c\u611f\u8c22\u60a8\u7684\u652f\u6301\uff01","title":"DRF\u76f8\u5173"},{"location":"123/","text":"666","title":123},{"location":"Django\u6846\u67b6\u5165\u95e8/","text":"Notice Python\u89e3\u91ca\u5668\u7248\u672c\uff1a 3.6.8 Django\u7248\u672c\uff1a 2.2.10 \u5982\u679c\u4f60\u662f\u4e00\u540d\u521d\u5b66\u8005\uff0c\u5f3a\u70c8\u5efa\u8bae\u4f60\u5c06\u672c\u7ae0\u8282\u7684\u5185\u5bb9\u770b\u5b8c\u5e76\u4e14\u5728\u81ea\u5df1\u7684\u672c\u5730\u73af\u5883\u4eb2\u624b\u5b9e\u73b0\u4e0b\u9762\u7684\u5b9e\u4f8b\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5bf9\u4f60\u719f\u6089Django\u9879\u76ee\u5e2e\u52a9\u5f88\u5927\uff0c\u800c\u4e14\u4e5f\u80fd\u5e2e\u52a9\u4f60\u66f4\u597d\u7684\u7406\u89e3\u540e\u7eed\u7ae0\u8282\u4e2d\u7684\u8be6\u7ec6\u77e5\u8bc6\u70b9\u3002 \u53e6\u5916\uff0c\u672c\u6587\u521b\u5efa\u76ee\u5f55\u4e0e\u6587\u4ef6\u90fd\u662f\u4f7f\u7528\u7684linux\u547d\u4ee4\uff0c\u5bf9\u4e8e\u4f7f\u7528windows\u7684\u5c0f\u4f19\u4f34\u6765\u8bf4\u53ef\u80fd\u4e0d\u592a\u53cb\u597d\u2014\u2014\u5728windows\u7cfb\u7edf\u4e2d\u4f60\u53ef\u4ee5\u70b9\u51fb\u53f3\u952e\u65b0\u5efa\u76ee\u5f55\u6216\u8005\u6587\u4ef6\u5373\u53ef\u3002 \u5982\u679c\u4f60\u8fd8\u4e0d\u719f\u6089 \u865a\u62df\u73af\u5883 \u7684\u4f7f\u7528\uff0c\u5728\u672c\u5730\u5b89\u88c5\u597dpython\u89e3\u91ca\u5668\u540e\uff0c \u53ef\u4ee5\u8df3\u8fc7QuickStart\u4e2d\u7684\u524d2\u4e2a\u6b65\u9aa4 \u3002\u6211\u4e4b\u524d\u603b\u7ed3\u7684\u4e0b\u9762\u8fd9\u51e0\u7bc7\u6587\u7ae0\u4e5f\u8bb8\u4f1a\u5bf9\u4f60\u4f7f\u7528\u865a\u62df\u73af\u5883\u8d77\u5230\u4e00\u5b9a\u7684\u5e2e\u52a9\uff1a pipenv\uff1apython\u865a\u62df\u73af\u5883\u4e0e\u5305\u7ba1\u7406\u5de5\u5177\u4ecb\u7ecd windows\u4e0emac\u4e0bvirtualenv\u4e0ePycharm\u7684\u7ed3\u5408\u4f7f\u7528 linux\u4e0b\u865a\u62df\u73af\u5883\u6a21\u5757virtualenv\u53ca\u7ba1\u7406\u5de5\u5177virtualenvwrapper\u7684\u4f7f\u7528 QuickStart 1\u3001\u9996\u5148\u6211\u4eec\u5728\u672c\u673a\u521b\u5efa\u4e00\u4e2a\u4e13\u95e8\u8fd0\u884cDjango\u7684\u865a\u62df\u73af\u5883\uff08\u672c\u6587\u4f7f\u7528\u7684\u662fvirtualenv\uff09: mkvirtualenv django_test 2\u3001\u7136\u540e\u8fdb\u5165\u65b0\u521b\u5efa\u597d\u7684\u865a\u62df\u73af\u5883: workon django_test 3\u3001\u7136\u540e\u5728\u8fd9\u4e2a\u865a\u62df\u73af\u5883\u4e2d\u5b89\u88c5\u6307\u5b9a\u7248\u672c\u7684Django: pip3 install django==2.2.10 4\u3001\u5b89\u88c5\u597dDjango\u540e\u65b0\u5efa\u4e00\u4e2aDjango\u9879\u76ee: django-admin startproject whwDjTest \u5982\u4e0a\u6240\u793a\uff1a\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3awhwDjTest\u7684\u9879\u76ee\u3002 5\u3001\u7136\u540e\u6211\u4eec\u8fdb\u5165whwDjTest\u8fd9\u4e2a\u9879\u76ee\u76ee\u5f55\u6765\u770b\u770b \u9ed8\u8ba4\u521b\u5efa \u7684Django\u9879\u76ee\u7684\u76ee\u5f55\u7ed3\u6784: ~/Desktop/whwDjTest # \u9879\u76ee\u76ee\u5f55 \u251c\u2500\u2500 manage.py # \u542f\u52a8\u4e0e\u7ba1\u7406Django\u9879\u76ee\u7684\u6a21\u5757 \u2514\u2500\u2500 whwDjTest # \u4e0e\u9879\u76ee\u540c\u540d\u7684\u76ee\u5f55 \u251c\u2500\u2500 __init__.py \u251c\u2500\u2500 settings.py # \u9879\u76ee\u7684\u672c\u5730\u914d\u7f6e \u251c\u2500\u2500 urls.py # \u9879\u76ee\u7684\u4e3b\u8def\u7531 \u2514\u2500\u2500 wsgi.py # \u57fa\u4e8eWSGI\u7684socket server 6\u3001\u7136\u540e\u5728 \u9879\u76ee\u76ee\u5f55 \u4e2d\u65b0\u5efa\u4e00\u4e2a\u540d\u4e3a views.py \u7684\u6a21\u5757: touch views.py \u65b0\u7684\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b: ~/Desktop/whwDjTest \u251c\u2500\u2500 manage.py \u251c\u2500\u2500 views.py # \u65b0\u7684\u89c6\u56fe\u51fd\u6570 \u2514\u2500\u2500 whwDjTest \u251c\u2500\u2500 __init__.py \u251c\u2500\u2500 settings.py \u251c\u2500\u2500 urls.py \u2514\u2500\u2500 wsgi.py \u5e76\u4e14\u5728views.py\u6587\u4ef6\u4e2d\u52a0\u5165\u4e0b\u9762\u4ee3\u7801: # -*- coding:utf-8 -*- from django.shortcuts import HttpResponse def index(request): if request.method == \"GET\": return HttpResponse(\"Hello Django!\") 7\u3001\u5728urls\u4e2d\u65b0\u52a0\u4e00\u6761\u8def\u7531,\u5e76\u4e14\u65b0\u7684\u8def\u7531\u4ea4\u7ed9\u4e0a\u9762\u5199\u597d\u7684views.py\u4e2d\u7684index\u65b9\u6cd5\u53bb\u5904\u7406\uff1a from django.contrib import admin from django.urls import path # \u5904\u7406\u89c6\u56fe\u7684\u6a21\u5757 import views urlpatterns = [ path('admin/', admin.site.urls), # \u65b0\u8def\u7531 path('index/',views.index) ] 8\u3001\u6700\u540e\uff0c\u5728\u9879\u76ee\u76ee\u5f55\u4e0b\u542f\u52a8Django\u7a0b\u5e8f: python3 manage.py runserver 127.0.0.1:9001 9\u3001\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://127.0.0.1:9001/index/ \u5373\u53ef\u770b\u5230\u9875\u9762\u6253\u5370\u51fa\u7684\u7ed3\u679c: Hello Django! Django\u7684\u8bf7\u6c42\u751f\u547d\u5468\u671f \u505aweb\u5f00\u53d1\u5fc5\u987b\u5148\u641e\u660e\u767d\u524d\u7aef\u6d4f\u89c8\u5668\u53d1\u51fa\u8bf7\u6c42\u540e\u670d\u52a1\u7aef\u7684\u5177\u4f53\u5904\u7406\u6d41\u7a0b\u4ee5\u53ca\u540e\u7aef\u5982\u4f55\u5904\u7406\u8bf7\u6c42\u3001\u8fd4\u56de\u54cd\u5e94\u3002\u5bf9\u4e8eDjango\u6846\u67b6\u6765\u8bf4\u5f04\u660e\u767dDjango\u7684\u8bf7\u6c42\u751f\u547d\u5468\u671f\u662f\u641e\u5b9a\u4e00\u5207\u7684\u57fa\u7840\u3002 \u4e0b\u56fe\u662fDjango\u7684\u8bf7\u6c42\u751f\u547d\u5468\u671f\uff0c\u4e5f\u5c31\u662f\u4ece\u7528\u6237\u53d1\u51fa\u8bf7\u6c42\u540e\u670d\u52a1\u7aef\u8fd4\u56de\u54cd\u5e94\u7684\u5177\u4f53\u8fc7\u7a0b: \u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u7528\u6237\u8bf7\u6c42\u5230\u8fbeDjango\u670d\u52a1\u7aef\u540e\uff0c\u8bf7\u6c42\u7ecf\u8fc7\u4e86\u4e0b\u9762\u6b65\u9aa4\u7684\u5904\u7406: \u9996\u5148django\u6846\u67b6\u4f7f\u7528\u4e86\u57fa\u4e8e WSGI \u534f\u8bae\u7684\u4e00\u4e2asocket\u670d\u52a1\u7aef\u6a21\u5757\u5c06\u7528\u6237\u7684\u8bf7\u6c42\u8fdb\u884c\u5c01\u88c5(\u901a\u5e38\u90fd\u4f1a\u4f7f\u7528 request \u53d8\u91cf\u540d\u6765\u83b7\u53d6\u8fd9\u4e2a\u8bf7\u6c42\u5bf9\u8c61)\uff1b \u63a5\u7740\u5c01\u88c5\u540e\u7684 request\u8bf7\u6c42\u5bf9\u8c61 \u7ecf\u8fc7 \u4e2d\u95f4\u4ef6 \u8fdb\u884c\u8def\u7531\u5206\u53d1\u524d\u7684\u9884\u5904\u7406(\u4f8b\u5982session\u3001csrf\u6821\u9a8c\u3001\u6743\u9650\u7684\u6821\u9a8c\u7b49\u7b49)\uff1b \u7136\u540e\u6839\u636e\u8fd9\u4e2a request\u8bf7\u6c42\u5bf9\u8c61 \u4e2d\u7684url\u8fdb\u884c \u8def\u7531\u5339\u914d \u4e0e \u8def\u7531\u5206\u53d1 \uff0c\u5c06\u4e0d\u540c\u7684url\u5206\u53d1\u7ed9\u5bf9\u5e94\u7684 \u89c6\u56fe\u51fd\u6570 \u53bb\u5904\u7406\uff1b \u89c6\u56fe\u51fd\u6570 \u6839\u636e\u4e1a\u52a1\u9700\u6c42\u8fdb\u884c\u4e1a\u52a1\u903b\u8f91\u7684\u64cd\u4f5c\uff1b \u5728\u89c6\u56fe\u51fd\u6570\u5904\u7406\u4e1a\u52a1\u903b\u8f91\u65f6\u4f7f\u7528 ORM \u4e0e\u6570\u636e\u5e93\u8fdb\u884c\u4ea4\u4e92\uff1b \u89c6\u56fe\u51fd\u6570\u5904\u7406\u5b8c\u6bd5\u540e\uff0c\u518d\u7ecf\u8fc7Django\u7684\u4e2d\u95f4\u4ef6\u4e0esocket\u670d\u52a1\u7aef\u5c06\u7ed3\u679c\u8fd4\u56de\u7ed9\u7528\u6237\uff08\u524d\u540e\u7aef\u4e0d\u5206\u79bb\u7684\u9879\u76ee\u8fdb\u884c\u6a21\u7248\u6e32\u67d3\u6216\u8005\u4ea4\u7ed9\u524d\u7aef\u6846\u67b6\u8fdb\u884c\u8fdb\u4e00\u6b65\u5904\u7406\uff09 \u7531\u4e8eDjango\u4f7f\u7528\u7684\u662f\u7b2c\u4e09\u65b9\u7684web socket\u7684\u670d\u52a1\u7aef(Django\u81ea\u5e26\u7684\u662fwsgiref\u6a21\u5757\uff0c\u7ebf\u4e0a\u90e8\u7f72\u4f7f\u7528\u7684\u662fuwsgi\u6a21\u5757)\uff1b\u8fd8\u6709Django\u7684\u4e2d\u95f4\u4ef6\u5c5e\u4e8e\u6bd4\u8f83\u8fdb\u9636\u7684\u5185\u5bb9\uff0c\u56e0\u6b64 \u6982\u89c8 \u8fd9\u91cc\u5c31\u4e0d\u4ecb\u7ecd\u4e2d\u95f4\u4ef6\u4e86\u3002\u672c\u6587\u4e3b\u8981\u4e3a\u5927\u5bb6\u8bb2\u4e00\u4e0bDjango\u7684\u8def\u7531\u5339\u914d\u4e0e\u5206\u53d1\u3001\u89c6\u56fe\u7cfb\u7edf\u3001\u6a21\u578b\u5c42(ORM)\u3001\u6a21\u677f\u5c42\u53ca\u9759\u6001\u6587\u4ef6\u7684\u914d\u7f6e\u57fa\u7840\u3002 \u5f53\u7136\u5728\u6b64\u4e4b\u524d\u8fd8\u5f97\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u4e00\u4e0b\u6784\u6210django\u9879\u76ee\u7684\u5341\u5206\u5173\u952e\u7684\u90e8\u5206\u2014\u2014 \u5e94\u7528 \u3002 Django\u4e2d\u7684\u5e94\u7528(application) Django\u9879\u76ee\u662f \u6a21\u5757\u5316 \u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u9879\u76ee\u4e2d\u7684\u4e0d\u540c\u6a21\u5757\u521b\u5efa\u76f8\u5e94\u7684\u5e94\u7528\uff0c\u8fd9\u6837\u53ef\u4ee5\u4f7f\u9879\u76ee\u66f4\u5bb9\u6613\u7ef4\u62a4\u5e76\u4e14\u63d0\u5347\u5f00\u53d1\u7684\u6548\u7387\u3002 \u6bd4\u5982\u8bf4\uff0c\u73b0\u5728\u6211\u4eec\u9700\u8981\u4e3a\u9879\u76ee\u521b\u5efa2\u4e2a\u6a21\u5757\uff0c\u4e00\u4e2a\u662f\u4eba\u5458\u7ba1\u7406\u7684 user \u6a21\u5757\uff0c\u53e6\u5916\u4e00\u4e2a\u662f\u56fe\u4e66\u9986\u91cc\u7684 book \u6a21\u5757\uff1a 1\u3001\u4e3a\u9879\u76ee\u521b\u5efa\u5e94\u7528 \u5728\u4e0e manage.py \u540c\u7ea7\u76ee\u5f55\u4e0b\u8f93\u5165\u547d\u4ee4\u521b\u5efa\u8fd9\u4e24\u4e2a\u5e94\u7528\uff1a python3 manage.py startapp user python3 manage.py startapp book \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5728\u9879\u76ee\u4e2d\u591a\u4e862\u4e2a\u76ee\u5f55\uff1auser\u4e0ebook\uff1a ~/Desktop/whwDjTest \u251c\u2500\u2500 book # \u65b0\u521b\u5efa\u7684\u5e94\u7528\u7684\u76ee\u5f55 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 admin.py \u2502 \u251c\u2500\u2500 apps.py \u2502 \u251c\u2500\u2500 migrations \u2502 \u2502 \u2514\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 models.py \u2502 \u251c\u2500\u2500 tests.py \u2502 \u2514\u2500\u2500 views.py \u251c\u2500\u2500 manage.py \u251c\u2500\u2500 user # \u65b0\u521b\u5efa\u7684\u5e94\u7528\u7684\u76ee\u5f55 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 admin.py \u2502 \u251c\u2500\u2500 apps.py \u2502 \u251c\u2500\u2500 migrations \u2502 \u2502 \u2514\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 models.py \u2502 \u251c\u2500\u2500 tests.py \u2502 \u2514\u2500\u2500 views.py \u251c\u2500\u2500 views.py \u2514\u2500\u2500 whwDjTest \u251c\u2500\u2500 __init__.py \u251c\u2500\u2500 settings.py \u251c\u2500\u2500 urls.py \u2514\u2500\u2500 wsgi.py 2\u3001\u5728Django\u4e2d \u6ce8\u518c \u65b0\u521b\u5efa\u7684\u5e94\u7528 \u65b0\u521b\u5efa\u7684\u5e94\u7528\u76ee\u5f55\u5fc5\u987b\u5728 settings.py \u4e2d\u6ce8\u518c\u540e\u624d\u80fd\u6b63\u5e38\u4f7f\u7528\u3002 \u5728 \u4e0e\u9879\u76ee\u540c\u540d\u7684\u76ee\u5f55 \u4e0b\u7684 settings.py \u6587\u4ef6\u4e2d\uff0c\u627e\u5230 INSTALLED_APPS \u8fd9\u4e2a\u5217\u8868\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0bDjango\u5df2\u7ecf\u6ce8\u518c\u4e866\u4e2a\u5e94\u7528\uff0c\u540e\u9762\u7684\u7ae0\u8282\u6211\u4f1a\u62ff\u51fa\u51e0\u4e2a\u91cd\u8981\u7684\u7ed9\u5927\u5bb6\u505a\u5355\u72ec\u7684\u8bb2\u89e3\u3002 \u6211\u4eec\u9700\u8981\u5c06\u81ea\u5df1\u521a\u521a\u521b\u5efa\u597d\u7684\u5e94\u7528\u6ce8\u518c\u5230\u8fd9\u4e2a\u5217\u8868\u4e2d\uff1a INSTALLED_APPS = [ 'django.contrib.admin', 'django.contrib.auth', 'django.contrib.contenttypes', 'django.contrib.sessions', 'django.contrib.messages', 'django.contrib.staticfiles', # \u81ea\u5df1\u7684\u5e94\u7528 'book.apps.BookConfig', 'user.apps.UserConfig', ] \u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u4e86\uff1a\u5efa\u8bae\u5927\u5bb6\u4f7f\u7528\u4e0a\u9762\u7684\u65b9\u6cd5\uff08book.apps.BookConfig'\u800c\u4e0d\u662f\u53ea\u5199'book'\uff09\u53bb\u6ce8\u518c\u5e94\u7528\uff01 Django\u7684\u8def\u7531\u5339\u914d\u4e0e\u5206\u53d1 \u4e00\u3001\u8def\u7531\u5339\u914d \u5f53\u8bf7\u6c42\u5230\u8fbe\u8def\u7531\u8fd9\u91cc\u65f6\uff0cDjango\u4f1a\u9ed8\u8ba4\u53bb \u4e0e\u9879\u76ee\u540c\u540d\u7684\u76ee\u5f55\u4e0b\u7684urls.py \u6587\u4ef6\u4e2d\u5339\u914d\u8def\u7531\u3002 \u50cf Quick Start \u91cc\u9762\u8def\u7531\u7684\u5199\u6cd5\u5982\u4e0b(\u8fd9\u91cc\u591a\u52a0\u51e0\u4e2a\u8fdb\u884c\u8bf4\u660e)\uff1a from django.contrib import admin from django.urls import path,re_path # \u5904\u7406\u89c6\u56fe\u7684\u6a21\u5757 import views urlpatterns = [ path('admin/', admin.site.urls), # \u65b0\u8def\u7531 path('index/',views.index) ] \u9ed8\u8ba4\u7684\u4e00\u6761\u8def\u7531\u662f path('admin/', admin.site.urls), Django\u7684\u540e\u53f0\u7ba1\u7406\u9875\u9762\u7684\u8def\u7531\uff0c\u5148\u4e0d\u7528\u7ba1\u8fd9\u4e2a\u3002 \u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u4e86\u4e00\u6761\u8def\u7531 index/ (\u8fd9\u91cc\u7701\u7565\u4e86\u57df\u540d\u4e0e\u7aef\u53e3)\uff0cpath\u540e\u9762\u7684\u662f \u5904\u7406\u8fd9\u6761\u8def\u7531\u7684\u89c6\u56fe \uff0c\u5173\u4e8e\u89c6\u56fe\u6211\u4eec\u540e\u9762\u505a\u4ecb\u7ecd\u3002 \u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0cDjango2\u7248\u672c\u7684\u8def\u7531\u5f15\u5165\u4e86path\u65b9\u6cd5\u8fdb\u884c\u8def\u7531\u5339\u914d\uff0c\u5982\u679c\u4f60\u4e4b\u524d\u63a5\u89e6\u8fc7Django1\u7248\u672c\u7684\u9879\u76ee\uff0c\u5b83\u7528\u7684\u662f url \u65b9\u6cd5\u505a\u7684\u8def\u7531\u5339\u914d\u2014\u2014url\u65b9\u6cd5\u505a\u7684\u662f\u6b63\u5219\u5339\u914d\u3002 Django2\u7248\u672c\u6709\u53e6\u5916\u4e00\u4e2a\u65b9\u6cd5 re_path \u4e0e\u4e4b\u524d\u7684url\u65b9\u6cd5\u5bf9\u5e94\uff0c\u4e0a\u9762\u7684\u65b0\u8def\u7531\u6211\u4eec\u4e5f\u53ef\u4ee5\u5199\u6210\u8fd9\u6837\u7684\u6b63\u5219\u5339\u914d\u7684\u5f62\u5f0f\uff1a re_path('^index/$',views.index), \u5173\u4e8epath\u65b9\u6cd5\u540e\u9762\u8fdb\u9636\u7684\u4ecb\u7ecd\u4f1a\u63d0\u5230\u3002 \u4e8c\u3001\u8def\u7531\u5206\u53d1 \u5f53\u7136\u806a\u660e\u7684\u4f60\u770b\u5230\u8fd9\u91cc\u4e5f\u8bb8\u4f1a\u53d1\u73b0\u4e00\u4e2a\u95ee\u9898\uff1a\u65e2\u7136Django\u53ef\u4ee5\u6ce8\u518c\u591a\u4e2aapp\uff0c\u90a3\u4e48\u6bcf\u4e2aapp\u5fc5\u7136\u4f1a\u6709\u8bb8\u591a\u8def\u7531\uff0c\u628a\u8fd9\u4e9b\u8def\u7531\u90fd\u653e\u5728\u4e00\u5757\u73a9\u4e00\u641e\u6df7\u4e86\u600e\u4e48\u529e\u5462\uff1f Django\u4f7f\u7528\u8def\u7531\u5206\u53d1\u6765\u89e3\u51b3\u591a\u5e94\u7528\u8def\u7531\u53ef\u80fd\u9020\u6210\u7684\u6df7\u4e71\u95ee\u9898\u3002 1\u3001\u4ee5user\u4e3a\u4f8b\uff0c\u4e0a\u9762\u6211\u4eec\u521b\u5efa\u4e862\u4e2a\u5e94\u7528\u4f46\u662f\u91cc\u9762\u6ca1\u6709\u8def\u7531\u7684\u6587\u4ef6\uff0c\u6211\u4eec\u81ea\u5df1\u5728\u4e24\u4e2a\u5e94\u7528\u4e2d\u5206\u522b\u521b\u5efa urls.py\u6587\u4ef6 \u5f53\u4f5c\u662f \u5e94\u7528\u4e13\u5c5e\u7684\u8def\u7531\u5904\u7406\u6587\u4ef6 : cd user touch urls.py 2\u3001\u4ee5user\u4e3a\u4f8b\uff0c\u7136\u540e\u6211\u4eec\u5728 \u8ddf\u9879\u76ee\u540c\u540d\u7684urls.py\u6587\u4ef6\u4e2d\u52a0\u5165\u8def\u7531\u5206\u53d1\u7684\u903b\u8f91 \uff1a from django.contrib import admin from django.urls import path,re_path,include # \u5904\u7406\u89c6\u56fe\u7684\u6a21\u5757 import views urlpatterns = [ path('admin/', admin.site.urls), # \u65b0\u8def\u7531 re_path('^index/$',views.index), # \u8def\u7531\u5206\u53d1 re_path('^user/',include('user.urls')) ] 3\u3001\u4ee5user\u4e3a\u4f8b\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8bbf\u95eeuser\u76f8\u5173\u7684url\uff0c\u8fd9\u4e2aurl\u662f\u8fd9\u4e48\u8bbe\u8ba1\u7684\uff1a user/home \u3002 \u6211\u4eec\u5728 user\u5e94\u7528\u4e0b\u7684urls.py\u6587\u4ef6\u4e2d\u52a0\u5165\u8def\u7531\u5339\u914d\u7684\u4ee3\u7801 : from django.urls import re_path # \u81ea\u5df1\u5904\u7406\u89c6\u56fe\u7684\u6a21\u5757 from user import views urlpatterns = [ re_path('^home/$',views.home), ] user\u7684views.py\u6587\u4ef6\u4e2d\u52a0\u4e0a\u89c6\u56fe\u7684\u5904\u7406\u903b\u8f91\uff1a from django.shortcuts import HttpResponse def home(request): if request.method == \"GET\": return HttpResponse(\"user home!\") 4\u3001\u6700\u540e\u6211\u4eec\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee\uff1a http://127.0.0.1:9001/user/home/ \u5c31\u53ef\u4ee5\u770b\u5230\u6d4f\u89c8\u5668\u6253\u5370\u51fa\u4e86\uff1a user home! Django\u7684\u89c6\u56fe\u7cfb\u7edf\u7b80\u4ecb \u4e0a\u9762\u5728\u4ecb\u7ecd\u8def\u7531\u7cfb\u7edf\u7684\u65f6\u5019\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8def\u7531\u90fd\u6709\u4e00\u4e2a\u51fd\u6570(\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7c7b)\u53bb\u5904\u7406\uff0c\u8fd9\u4e2a\u51fd\u6570(\u540e\u9762\u4f1a\u4ecb\u7ecd\u7c7b)\u6216\u8005\u7c7b\u5c31\u662fDjango\u7684\u89c6\u56fe\u51fd\u6570(\u6216\u8005\u53eb\u89c6\u56fe\u7c7b)\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0cDjango\u7684\u89c6\u56fe\u7cfb\u7edf\u662f\u5728\u8def\u7531\u5339\u914d\u6210\u529f\u4e4b\u540e\u8fdb\u884c\u7684\u540e\u6bb5\u903b\u8f91\u5904\u7406\u7684\u5730\u65b9\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u6bcf\u4e00\u4e2a\u89c6\u56fe\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u662f \u8bf7\u6c42\u5bf9\u8c61request ,\u8fd9\u4e2arequest\u5bf9\u8c61\u5c31\u662fWSGI\u670d\u52a1\u7aef\u4e0e\u4e2d\u95f4\u4ef6\u5904\u7406\u5b8c\u6bd5\u540e\u7684\u8bf7\u6c42\u5bf9\u8c61\uff0c\u91cc\u9762\u5c01\u88c5\u4e86\u8bb8\u591a\u5c5e\u6027\u4e0e\u65b9\u6cd5\u3002\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684\u89c6\u56fe\u8fd4\u56de\u7684\u90fd\u662fHttpResponse\u5bf9\u8c61(\u5b9e\u9645\u4e0a\u53ef\u4ee5\u8fd4\u56de3\u4e2a\u54cd\u5e94\u5bf9\u8c61)\u3002 \u5173\u4e8erequest\u4e0eresponse\u5bf9\u8c61\u7684\u5c5e\u6027\u4e0e\u65b9\u6cd5\u4f1a\u5728\u540e\u7eed\u7ae0\u8282\u4e2d\u8be6\u7ec6\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u3002\u5927\u5bb6\u53ea\u9700\u8981\u7262\u8bb0\u4e00\u70b9\uff1a\u89c6\u56fe\u7cfb\u7edf\u662f\u5904\u7406\u540e\u6bb5\u4e1a\u52a1\u7684\u6838\u5fc3\u6240\u5728\u5730\uff0c\u6211\u4eec\u5e38\u5e38\u8bf4\u7684 CV\u5de5\u7a0b\u5e08 \u3001 CURD\u642c\u8fd0\u5de5 \u6240\u6d89\u53ca\u5230\u7684\u4ee3\u7801\u7edd\u5927\u90e8\u5206\u90fd\u662f\u5728\u8fd9\u91cc\u5b8c\u6210\u7684\uff01 \u4e2a\u4eba\u8ba4\u4e3aDjango\u7684\u89c6\u56fe\u7cfb\u7edf\u8d77\u5230\u4e86\u4e00\u4e2a \u627f\u4e0a\u542f\u4e0b \u7684\u4f5c\u7528\uff0c\u5728\u8fd9\u91cc\u62ff\u5230\u5c01\u88c5\u540e\u7684\u8bf7\u6c42\u5bf9\u8c61\uff0c\u7ecf\u8fc7\u4e1a\u52a1\u903b\u8f91\u5904\u7406\u5c06\u5904\u7406\u540e\u7684\u54cd\u5e94\u5bf9\u8c61\u8fd4\u56de\u7ed9\u524d\u7aef\u8fdb\u884c\u6a21\u677f\u6e32\u67d3\u6216\u8005\u8fdb\u884c\u5176\u4ed6\u7684\u5904\u7406\u3002 \u89c6\u56fe\u7cfb\u7edf\u4e4bFBV\u4e0eCBV\u7b80\u4ecb \u8bf4\u767d\u4e86\uff0cFBV\u5c31\u662f\u89c6\u56fe\u4e2d\u4ee5\u51fd\u6570\u7684\u65b9\u5f0f\u5904\u7406\u8bf7\u6c42\uff0cCBV\u5c31\u662f\u4ee5\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u5f0f\u5904\u7406\u8bf7\u6c42\u3002 \u4e0a\u9762\u7ed9\u5927\u5bb6\u4ecb\u7ecd\u7684\u662fFBV\u7684\u5199\u6cd5\uff0c\u4e0b\u9762\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0bCBV\u7684\u5199\u6cd5\uff1a 1\u3001\u8fd8\u62ff\u7b2c\u4e00\u4e2aindex\u8def\u7531\u4e3e\u4f8b\uff0c\u5728views.py\u4e2d\u52a0\u5165CBV\u5904\u7406\u7684\u903b\u8f91\uff1a # -*- coding:utf-8 -*- from django.shortcuts import HttpResponse from django.views import View class Index(View): def get(self,request): return HttpResponse(\"Hello Django!\") 2\u3001\u8fd9\u65f6\u8def\u7531\u7684\u5199\u6cd5\u9700\u8981\u6539\u6210\u8fd9\u79cd\u5f62\u5f0f\uff1a from django.contrib import admin from django.urls import path,re_path,include # \u5904\u7406\u89c6\u56fe\u7684\u6a21\u5757 import views urlpatterns = [ path('admin/', admin.site.urls), # \u65b0\u8def\u7531 \u2014\u2014 CBV\u7684\u5199\u6cd5 re_path('^index/$',views.Index.as_view()), ] \u7136\u540e\u50cf\u4e0a\u9762\u90a3\u6837\u8bbf\u95eeindex\u9875\u9762\u5c31\u597d\u4e86\u3002 Django\u4e0eMySQL\u7684\u4ea4\u4e92 \u4e0eFlask\u7b49\u5176\u4ed6Python\u6846\u67b6\u4e0d\u540c\u7684\u662f\uff0cDjango\u7684\u6a21\u578b\u5c42\u4e0e\u6570\u636e\u5e93\u4ea4\u4e92\u7528\u7684\u662f\u81ea\u5df1\u7684ORM\u6846\u67b6\u3002 \u672c\u6587\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0bDjango\u4e0eMySQL\u6570\u636e\u5e93\u4ea4\u4e92\u7684\u8fc7\u7a0b\u4ee5\u53caORM\u7684\u57fa\u672c\u4f7f\u7528\uff0c\u540e\u7eed\u7ae0\u8282\u4f1a\u8be6\u7ec6\u5c55\u5f00\u8bf4\u660e\u3002 \u4e00\u3001\u521b\u5efa\u6570\u636e\u5e93 \u5728MySQL\u4e2d\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a test \u7684\u6570\u636e\u5e93\u5f53\u4f5c\u662f\u6d4b\u8bd5\u7684\u6570\u636e\u5e93\u3002 mysql -uroot -p mysql> create database test; Query OK, 1 row affected (0.01 sec) mysql> show databases; +--------------------+ | Database | +--------------------+ | xxx | | xxxx | | xxxxx | | xxxxxx | | xx123 | | test | +--------------------+ \u4e8c\u3001\u521b\u5efa\u6a21\u578bModel \u4ee5\u4e0a\u9762\u521b\u5efa\u7684 user \u5e94\u7528\u4e3a\u4f8b\uff0c\u5728 user/models.py \u6587\u4ef6\u4e2d\u52a0\u5165\u521b\u5efa\u7684\u6570\u636e\u6a21\u578b\uff1a from django.db import models # Create your models here. class User(models.Model): id = models.AutoField(primary_key=True) name = models.CharField(max_length=22) age = models.IntegerField() def __str__(self): return self.name \u53ef\u4ee5\u770b\u5230\uff1a\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2auser\u6a21\u578b\uff0c\u91cc\u9762\u67093\u4e2a\u5c5e\u6027\uff1aid(\u4e3b\u952e)\u3001name\u3001age\u3002 \u4e09\u3001\u5728settings\u4e2d\u914d\u7f6e\u6570\u636e\u5e93\u7684\u8fde\u63a5 \u5728\u4e0e\u9879\u76ee\u540c\u540d\u7684\u76ee\u5f55\u4e2d\u7684settings.py\u6587\u4ef6\u4e2d\u627e\u5230 DATABASES \u8fd9\u4e2a\u5b57\u5178\uff0c\u5c06\u91cc\u9762\u7684\u914d\u7f6e\u6539\u6210MySQL\u7684\u8fde\u63a5\u914d\u7f6e\uff1a DATABASES = { 'default': { 'ENGINE': 'django.db.backends.mysql',#\u5f15\u64ce\uff0c\u9009mysql 'NAME':'test',#\u8981\u8fde\u63a5\u7684\u6570\u636e\u5e93\uff0c\u8fde\u63a5\u524d\u9700\u8981\u521b\u5efa\u597d 'USER':'root',#\u8fde\u63a5\u6570\u636e\u5e93\u7684\u7528\u6237\u540d 'PASSWORD':'123',#\u8fde\u63a5\u6570\u636e\u5e93\u7684\u5bc6\u7801 'HOST':'127.0.0.1',#\u8fde\u63a5\u4e3b\u673a\uff0c\u9ed8\u8ba4\u672c\u673a 'PORT':3306,#\u7aef\u53e3 \u9ed8\u8ba43306 #Django\u4e2d\u8bbe\u7f6e\u6570\u636e\u5e93\u7684\u4e25\u683c\u6a21\u5f0f 'OPTIONS':{ 'init_command':\"set sql_mode='STRICT_TRANS_TABLES' \", } } } \u5982\u679c\u6b64\u65f6\u5c31\u542f\u52a8\u9879\u76ee\u4f1a\u62a5\u9519\uff1a django.core.exceptions.ImproperlyConfigured: Error loading MySQLdb module. Did you install mysqlclient? \u63d0\u793a\u6211\u4eec\u6ca1\u6709\u5b89\u88c5mysql\u5ba2\u6237\u7aef\uff0cMySQLdb\u5bf9\u4e8epy3\u6709\u5f88\u5927\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u7684\u9a71\u52a8\u662fpymysql\u3002 \u56db\u3001\u5728\u4e0e\u9879\u76ee\u540c\u540d\u7684\u76ee\u5f55\u4e2d\u7684 __init__.py \u6587\u4ef6\u4e2d\u5bfc\u5165pymysql\u6a21\u5757\u5e76\u52a0\u5165MySQLdb \u7531\u4e8e\u65b0\u521b\u5efa\u7684\u865a\u62df\u73af\u5883\u4e2d\u6ca1\u6709pymysql\u6a21\u5757\uff0c\u6211\u4eec\u9700\u8981\u5148\u5b89\u88c5\u4e00\u4e0b\uff1a pip3 install pymysql \u7136\u540e\u52a0\u5165MySQLdb\uff1a import pymysql pymysql.install_as_MySQLdb() \u4e94\u3001\u5982\u679c\u4f7f\u7528Django2\u7248\u672c\u9700\u8981\u4fee\u65392\u5904\u6e90\u7801 \uff081\uff09\u5982\u679c\u6b64\u65f6\u8fd0\u884c\u9879\u76ee\u7684\u8bdd\u4f1a\u62a5\u9519\uff1a django.core.exceptions.ImproperlyConfigured: mysqlclient 1.3.13 or newer is required; you have 0.9.3. \u8fd9\u662fDjango2\u5185\u90e8\u7684\u4e00\u4e2a\u7248\u672c\u9650\u5236\u7684\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539\u4e00\u4e0b\u6e90\u7801\u3002 \u627e\u5230\u5f53\u524d\u8fd9\u4e2a\u865a\u62df\u73af\u5883\u7684\u76ee\u5f55\u4e0b\u7684django\u5bf9\u5e94\u7684\u914d\u7f6e\uff0c\u5177\u4f53\u7684\u76ee\u5f55\u662f\uff1a /(\u4f60\u81ea\u5df1\u7684\u5bb6\u76ee\u5f55)/venvs/django_test/lib/python3.6/site-packages/django/db/backends/mysql/base.py \u8fd9\u4e2a base.py \u6587\u4ef6\u4e2d\u6709\u8fd9\u4e24\u884c\u4ee3\u7801\uff1a if version < (1, 3, 13): raise ImproperlyConfigured('mysqlclient 1.3.13 or newer is required; you have %s.' % Database.__version__) \u628a\u8fd9\u4e24\u884c\u4ee3\u7801\u6ce8\u91ca\u6389\uff01 \uff082\uff09\u518d\u8fd0\u884c\u9879\u76ee\u8fd8\u4f1a\u62a5\u9519\uff1a AttributeError: 'str' object has no attribute 'decode' \u5bf9\u5e94\u62a5\u9519\u7684\u6587\u4ef6\u5728\u8fd9\u91cc\uff1a /(\u4f60\u81ea\u5df1\u7684\u5bb6\u76ee\u5f55)/venvs/django_test/lib/python3.6/site-packages/django/db/backends/mysql/operations.py \u8fd9\u4e2a\u6587\u4ef6\u7684146\u884c\uff1a query = query.decode(errors='replace') \u6539\u6210encode: query = query.encode(errors='replace') \u8fd9\u6837\u5c31\u6ca1\u95ee\u9898\u4e86\uff01 \u516d\u3001\u6267\u884c\u6570\u636e\u5e93\u8fc1\u79fb\u6307\u4ee4 \u5728\u9879\u76ee\u7684\u8ddf\u76ee\u5f55\u4e0b\u6267\u884c\u6570\u636e\u5e93\u7684\u8fc1\u79fb\u6307\u4ee4\uff1a python3 manage.py makemigrations ''' Migrations for 'user': user/migrations/0001_initial.py - Create model User ''' python3 manage.py migrate ''' Operations to perform: Apply all migrations: admin, auth, contenttypes, sessions, user Running migrations: Applying contenttypes.0001_initial... OK Applying auth.0001_initial... OK Applying admin.0001_initial... OK Applying admin.0002_logentry_remove_auto_add... OK Applying admin.0003_logentry_add_action_flag_choices... OK Applying contenttypes.0002_remove_content_type_name... OK Applying auth.0002_alter_permission_name_max_length... OK Applying auth.0003_alter_user_email_max_length... OK Applying auth.0004_alter_user_username_opts... OK Applying auth.0005_alter_user_last_login_null... OK Applying auth.0006_require_contenttypes_0002... OK Applying auth.0007_alter_validators_add_error_messages... OK Applying auth.0008_alter_user_username_max_length... OK Applying auth.0009_alter_user_last_name_max_length... OK Applying auth.0010_alter_group_name_max_length... OK Applying auth.0011_update_proxy_permissions... OK Applying sessions.0001_initial... OK Applying user.0001_initial... OK ''' \u6bcf\u6b21\u6709\u4e0a\u9762\u8fd9\u6837\u7684\u63d0\u793a\u8bf4\u660e\u6570\u636e\u5e93\u8fc1\u79fb\u6210\u529f\u4e86\uff01 \u4e03\u3001\u67e5\u770b\u6570\u636e\u5e93\u751f\u6210\u7684\u8868 \u8fdb\u5165\u6570\u636e\u5e93\u6211\u4eec\u770b\u770b\u751f\u6210\u7684\u8868\uff1a mysql -uroot -p use test; show tables; ''' +----------------------------+ | Tables_in_test | +----------------------------+ | auth_group | | auth_group_permissions | | auth_permission | | auth_user | | auth_user_groups | | auth_user_user_permissions | | django_admin_log | | django_content_type | | django_migrations | | django_session | | user_user | +----------------------------+ ''' \u751f\u6210\u7684\u8fd9\u4e9b\u8868\u4e2d\uff0c auth \u4e0e django \u4e3a\u524d\u7f00\u7684\u8868\u662fdjango\u81ea\u52a8\u751f\u6210\u7684\uff0c\u6700\u540e\u90a3\u4e2a user_user \u8868\u662f\u6211\u4eec\u81ea\u5df1\u521b\u5efa\u7684\u8868\uff1a\u7b2c\u4e00\u4e2auser\u8868\u793a\u7684\u662f user\u5e94\u7528 \u7b2c\u4e8c\u4e2auser\u8868\u793a \u8868\u7684\u540d\u5b57 (\u5c31\u662f\u6211\u4eec\u7684Model\u7c7b\u7684\u5c0f\u5199)\u3002 \u516b\u3001\u67e5\u770buser_user\u7684\u8868\u7ed3\u6784 mysql> desc user_user; +-------+-------------+------+-----+---------+----------------+ | Field | Type | Null | Key | Default | Extra | +-------+-------------+------+-----+---------+----------------+ | id | int(11) | NO | PRI | NULL | auto_increment | | name | varchar(22) | NO | | NULL | | | age | int(11) | NO | | NULL | | +-------+-------------+------+-----+---------+----------------+ 3 rows in set (0.00 sec) \u8868\u7ed3\u6784\u662f\u6839\u636e\u6211\u4eec\u4e0a\u9762\u7684Model\u7c7b\u7684\u8bed\u6cd5\u521b\u5efa\u7684\u3002\u5177\u4f53Model\u7684\u5c5e\u6027\u4e0eMySQL\u8868\u7ed3\u6784\u7684\u5bf9\u5e94\u5173\u7cfb\u540e\u9762\u8be6\u7ec6\u8bb2\u89e3\u3002 \u4e5d\u3001\u5f80\u6570\u636e\u5e93\u4e2d\u5199\u5165\u4e00\u4e9b\u6570\u636e \u8fd9\u4e00\u6b65\u7565\u53bb\uff0c\u5f53\u7136\u5b9e\u9645\u4e2d\u7684\u65b9\u6cd5\u975e\u5e38\u591a\uff0c\u7531\u4e8e\u672c\u6587\u53ea\u662f\u4e00\u4e2a\u5927\u7eb2\uff0c\u8fd9\u91cc\u6211\u4f7f\u7528insert\u8bed\u53e5\u5f80\u6570\u636e\u5e93\u4e2d\u5199\u51653\u6761\u6570\u636e\uff1a mysql> insert into user_user(name,age) values(\"wanghw\",18),(\"naruto\",28),(\"sasuke\",38); Query OK, 3 rows affected (0.00 sec) Records: 3 Duplicates: 0 Warnings: 0 mysql> select * from user_user; +----+--------+-----+ | id | name | age | +----+--------+-----+ | 1 | wanghw | 18 | | 2 | naruto | 28 | | 3 | sasuke | 38 | +----+--------+-----+ 3 rows in set (0.00 sec) ORM\u7684\u7b80\u5355\u4f7f\u7528 ORM(Object Relational Mapping)\u5bf9\u8c61\u5173\u7cfb\u6620\u5c04\uff0c\u7b80\u5355\u800c\u8a00\u5176\u5b9e\u5c31\u662f\u8ba9\u7a0b\u5e8f\u5458\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u5f0f\u64cd\u4f5c\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\uff0c\u867d\u7136\u6709\u4e9b\u6781\u7aef\u7684\u60c5\u51b5\u4e0b\u6027\u80fd\u4e0a\u8981\u4f4e\u4e8e\u6267\u884c\u539f\u751fSQL\u7684\u6548\u7387\uff0c\u4f46\u662f\u7edd\u5927\u591a\u6570\u7684\u60c5\u51b5\u4e0b\u90fd\u53ef\u4ee5\u6ee1\u8db3\u7528\u6237\u7684\u9700\u6c42\uff08\u5728ORM\u4e2d\u4e5f\u53ef\u4ee5\u6267\u884c\u539f\u751fSQL\uff0c\u540e\u9762\u4f1a\u4ecb\u7ecd\uff09\u3002 \u5176\u5b9e\u4e0a\u9762 Django\u4e0eMySQL\u7684\u4ea4\u4e92 \u90e8\u5206\u4ecb\u7ecd\u7684\u5185\u5bb9\u5c31\u5df2\u7ecf\u505a\u4e86Django\u7a0b\u5e8f\u4e0eMySQL\u6570\u636e\u5e93\u7684\u5173\u8054\uff0c\u6211\u4eec\u73b0\u5728\u53ea\u9700\u8981\u4f7f\u7528ORM\u8bed\u6cd5\u5c31\u53ef\u4ee5\u64cd\u4f5c\u6570\u636e\u5e93\u4e86\u3002 \u4ee5\u4e0a\u9762 Django\u8def\u7531\u5339\u914d\u4e0e\u5206\u53d1 \u4ecb\u7ecd\u7684 user/home/ \u8fd9\u4e2a\u8def\u7531\u4e3a\u4f8b\uff1a\u6211\u4eec\u5728user\u8fd9\u4e2a\u5e94\u7528\u7684views\u4e2d\u52a0\u5165ORM\u7684\u67e5\u8be2\u8bed\u6cd5\uff0c\u7136\u540e\u8bbf\u95ee http://127.0.0.1:8001/user/home/ from django.shortcuts import HttpResponse # \u5bfc\u5165Model from user import models def home(request): if request.method == \"GET\": # \u67e5\u8be2 ret1 = models.User.objects.filter(name=\"wanghw\") print(ret1,type(ret1)) #<QuerySet [<User: wanghw>]> <class 'django.db.models.query.QuerySet'> ret2 = models.User.objects.first() print(ret2,type(ret2)) # wanghw <class 'user.models.User'> return HttpResponse(\"user home!\") \u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0cret1\u5f97\u51fa\u6765\u7684\u662f\u4e00\u4e2a QuerySet\u5bf9\u8c61 \uff0c\u800cret2\u5f97\u5230\u7684\u662f\u4e00\u4e2a model\u5bf9\u8c61 \u3002\u672c\u8282\u53ea\u50cf\u5927\u5bb6\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u5982\u4f55\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u5f0f\u53bb\u64cd\u4f5c\u6570\u636e\u5e93\uff0c\u5173\u4e8eQuerySet\u5bf9\u8c61\u4e0eModel\u5bf9\u8c61\u7684\u5404\u79cd\u65b9\u6cd5\u4e0e\u533a\u522b\u540e\u7eed\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u3002 \u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u63d2\u5165\u4e00\u6761\u6570\u636e\uff1a from django.shortcuts import HttpResponse # \u5bfc\u5165Model from user import models def home(request): if request.method == \"GET\": # \u63d2\u5165\u6570\u636e user_obj = models.User.objects.create(name=\"\u5f20\u4e09\",age=66) print(user_obj) return HttpResponse(\"user home!\") \u5728\u6570\u636e\u5e93\u4e2d\u68c0\u9a8c\u4e00\u4e0b\u662f\u5426\u63d2\u5165\u6210\u529f\uff1a mysql> select * from user_user; +----+--------+-----+ | id | name | age | +----+--------+-----+ | 1 | wanghw | 18 | | 2 | naruto | 28 | | 3 | sasuke | 38 | | 4 | \u5f20\u4e09 | 66 | +----+--------+-----+ 4 rows in set (0.00 sec) \u4fee\u6539\u4e0e\u5220\u9664\u6570\u636e\u4e5f\u662f\u53ef\u4ee5\u7684\uff1a from django.shortcuts import HttpResponse # \u5bfc\u5165Model from user import models def home(request): if request.method == \"GET\": # \u4fee\u6539\u6570\u636e models.User.objects.filter(name=\"\u5f20\u4e09\").update(age=100) # \u5220\u9664\u6570\u636e models.User.objects.filter(name=\"sasuke\").delete() return HttpResponse(\"user home!\") \u518d\u770b\u4e00\u4e0bMySQL\u4e2d\u7684\u7ed3\u679c\uff1a mysql> select * from user_user; +----+--------+-----+ | id | name | age | +----+--------+-----+ | 1 | wanghw | 18 | | 2 | naruto | 28 | | 4 | \u5f20\u4e09 | 100 | +----+--------+-----+ 3 rows in set (0.00 sec) Django\u7684\u6a21\u677f\u7cfb\u7edf \u5bf9\u4e8e\u524d\u540e\u7aef\u4e0d\u5206\u79bb\u7684\u9879\u76ee\u6765\u8bf4\uff0cDjango\u7684\u6a21\u677f\u7cfb\u7edf\u662f\u4e0e\u524d\u7aef\u4ea4\u4e92\u7684\u5173\u952e\uff0c\u8fd9\u91cc\u5148\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0bDjango\u6a21\u677f\u7684\u4f7f\u7528\u3002 \u5728\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e0b\uff0c\u65b0\u5efa\u4e00\u4e2a\u540d\u4e3a templates \u7684\u76ee\u5f55\uff1a mkdir templates \u7136\u540e\u8fdb\u5165\u8fd9\u4e2a\u76ee\u5f55\u521b\u5efa\u4e00\u4e2a index.html \u6587\u4ef6\uff1a cd templates touch index.html index.html\u4e2d\u7684\u5185\u5bb9\u5982\u4e0b\uff1a <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <h4>\u5f53\u524d\u65f6\u95f4:{{ ctime }}</h4> </body> </html> settings\u4e2d\u7684\u914d\u7f6e \u9700\u8981\u6ce8\u610f\u4e00\u70b9\uff0c\u6211\u4eec\u4ee5\u547d\u4ee4\u7684\u65b9\u5f0f\u521b\u5efaDjango\u9879\u76ee\u7684\u8bdd\uff0c\u9ed8\u8ba4\u7684\u914d\u7f6e\u4e2d\u6ca1\u6709\u4e3a\u6211\u4eec\u52a0\u5165templates\u7684\u76ee\u5f55\uff0c\u5728 settings.py \u4e2d\u627e\u5230 TEMPLATES \u8fd9\u4e2a\u5217\u8868\uff0c\u4e3a\u91cc\u9762\u7684 'DIRS' \u8fd9\u4e2akey\u52a0\u5165\u521a\u521a\u521b\u5efa\u597d\u7684templates\u7684\u76ee\u5f55\uff1a 'DIRS': [os.path.join(BASE_DIR, \"templates\")], \u7136\u540e\u6211\u4eec\u5728 http://127.0.0.1:9001/index/ \u8fd9\u6761\u8def\u7531\u505a\u6d4b\u8bd5\uff1a \u5bf9\u5e94\u7684views.py\u4e2d\u52a0\u5165\u4e0b\u9762\u7684\u4ee3\u7801\uff1a from diango.shortcuts import render #\u8fd9\u4e2a\u51fd\u6570\u5fc5\u987b\u8981\u5e26\u4e00\u4e2a\u5f62\u53c2request def index(request): import datetime now = datetime.datetime.now() ctime = now.strftime('%Y-%m-%d %X') #\u6ce8\u610f\u8fd9\u91cc\u5fc5\u987b\u5f97return \u800c\u4e14\u7b2c\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u662frequest return render(request,'index.html',{'ctime':ctime}) \u6700\u540e\u8bbf\u95eeindex\u8fd9\u4e2a\u8def\u7531\u5c31\u53ef\u4ee5\u770b\u5230\u5f53\u524d\u9875\u9762\u8fd4\u56de\u7684\u4fe1\u606f\u4e86\u3002 index.html\u9875\u9762\u4e2d {{ ctime }} \u8fd9\u4e2a\u662fDjango\u7684\u6a21\u677f\u8bed\u8a00\uff0c\u5bf9\u5e94\u7684ctime\u662f\u540e\u7aef\u8fd4\u56de\u7684\u6570\u636e\uff0c\u540e\u9762\u7684\u7ae0\u8282\u4f1a\u4e3a\u5927\u5bb6\u8be6\u7ec6\u8bb2\u89e3\u6a21\u677f\u8bed\u8a00\u4e0e\u6a21\u677f\u4e2d\u7684\u5176\u4ed6\u9ad8\u7ea7\u7528\u6cd5\u3002 Django\u4e2d\u9759\u6001\u6587\u4ef6\u7684\u914d\u7f6e \u524d\u540e\u7aef\u4e0d\u5206\u79bb\u7684\u9879\u76ee\u90e8\u7f72\u4e4b\u524d\u5728\u672c\u5730\u8c03\u8bd5\u7684\u65f6\u5019\uff0c\u9700\u8981\u914d\u7f6e\u4e00\u4e0b\u9759\u6001\u6587\u4ef6\uff08css\u3001js\u7b49\u6587\u4ef6\uff09\u3002 \u521b\u5efa\u9759\u6001\u6587\u4ef6\u76ee\u5f55\u53ca\u9759\u6001\u6587\u4ef6 \u8fd8\u662f\u62ff\u4e0a\u9762\u505a\u597d\u7684\u9879\u76ee\u4e3a\u4f8b\u3002\u5728\u9879\u76ee\u7684\u8ddf\u76ee\u5f55\u4e0b\u5fc3\u95f4\u4e00\u4e2a\u540d\u4e3a staticfiles \u7684\u76ee\u5f55\uff0c\u4f5c\u4e3a\u5b58\u653e\u9759\u6001\u6587\u4ef6\u7684\u76ee\u5f55\u3002 mkdir staticfiles \u7136\u540e\u8fdb\u5165\u8fd9\u4e2a\u76ee\u5f55\uff0c\u5728\u91cc\u9762\u52a0\u4e0a\u4e00\u4e2acss\u6587\u4ef6\uff1a cd staticfiles touch my_style.css \u518d\u5728\u8fd9\u4e2acss\u6587\u4ef6\u4e2d\u52a0\u5165\u4e00\u4e2a\u7c7b\u4e0e\u6837\u5f0f\uff1a vim my_style.css # \u52a0\u5165\u6837\u5f0f .class1{color:red} settings\u4e2d\u7684\u914d\u7f6e \u7136\u540e\u5728 settings.py \u6587\u4ef6\u4e2d\u52a0\u5165\u9759\u6001\u6587\u4ef6\u7684\u76ee\u5f55\uff1a STATICFILES_DIRS = [ os.path.join(BASE_DIR,'staticfiles') ] \u6a21\u677f\u4e2d\u5f15\u5165\u9759\u6001\u6587\u4ef6 {#load \u6ce8\u610f\u8fd9\u91cc\u7684static\u53ea\u662f\u4e2a\u5173\u952e\u5b57\uff0c\u7528\u5b83\u6765\u627e\u9759\u6001\u6587\u4ef6\u7684\u522b\u540d#} {% load static %} <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> {# \u5f15\u5165\u9759\u6001\u6587\u4ef6 #} <link rel=\"stylesheet\" href=\"{% static 'my_style.css' %}\"> </head> <body> {# \u4e3ah4\u6807\u7b7e\u6dfb\u52a0\u4e0a\u9762\u8bbe\u7f6e\u597d\u7684class #} <h4 class=\"class1\">\u5f53\u524d\u65f6\u95f4:{{ ctime }}</h4> </body> </html> \u6700\u540e\u8bbf\u95eeindex\u9875\u9762\uff0c\u53ef\u4ee5\u53d1\u73b0\u6240\u6709\u6587\u5b57\u90fd\u53d8\u6210\u4e86\u7ea2\u8272\u2014\u2014\u8bf4\u660e\u9759\u6001\u6587\u4ef6\u5f15\u5165\u6210\u529f\uff01","title":"Django\u6846\u67b6\u5165\u95e8"},{"location":"Django\u6846\u67b6\u5165\u95e8/#notice","text":"Python\u89e3\u91ca\u5668\u7248\u672c\uff1a 3.6.8 Django\u7248\u672c\uff1a 2.2.10 \u5982\u679c\u4f60\u662f\u4e00\u540d\u521d\u5b66\u8005\uff0c\u5f3a\u70c8\u5efa\u8bae\u4f60\u5c06\u672c\u7ae0\u8282\u7684\u5185\u5bb9\u770b\u5b8c\u5e76\u4e14\u5728\u81ea\u5df1\u7684\u672c\u5730\u73af\u5883\u4eb2\u624b\u5b9e\u73b0\u4e0b\u9762\u7684\u5b9e\u4f8b\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5bf9\u4f60\u719f\u6089Django\u9879\u76ee\u5e2e\u52a9\u5f88\u5927\uff0c\u800c\u4e14\u4e5f\u80fd\u5e2e\u52a9\u4f60\u66f4\u597d\u7684\u7406\u89e3\u540e\u7eed\u7ae0\u8282\u4e2d\u7684\u8be6\u7ec6\u77e5\u8bc6\u70b9\u3002 \u53e6\u5916\uff0c\u672c\u6587\u521b\u5efa\u76ee\u5f55\u4e0e\u6587\u4ef6\u90fd\u662f\u4f7f\u7528\u7684linux\u547d\u4ee4\uff0c\u5bf9\u4e8e\u4f7f\u7528windows\u7684\u5c0f\u4f19\u4f34\u6765\u8bf4\u53ef\u80fd\u4e0d\u592a\u53cb\u597d\u2014\u2014\u5728windows\u7cfb\u7edf\u4e2d\u4f60\u53ef\u4ee5\u70b9\u51fb\u53f3\u952e\u65b0\u5efa\u76ee\u5f55\u6216\u8005\u6587\u4ef6\u5373\u53ef\u3002 \u5982\u679c\u4f60\u8fd8\u4e0d\u719f\u6089 \u865a\u62df\u73af\u5883 \u7684\u4f7f\u7528\uff0c\u5728\u672c\u5730\u5b89\u88c5\u597dpython\u89e3\u91ca\u5668\u540e\uff0c \u53ef\u4ee5\u8df3\u8fc7QuickStart\u4e2d\u7684\u524d2\u4e2a\u6b65\u9aa4 \u3002\u6211\u4e4b\u524d\u603b\u7ed3\u7684\u4e0b\u9762\u8fd9\u51e0\u7bc7\u6587\u7ae0\u4e5f\u8bb8\u4f1a\u5bf9\u4f60\u4f7f\u7528\u865a\u62df\u73af\u5883\u8d77\u5230\u4e00\u5b9a\u7684\u5e2e\u52a9\uff1a pipenv\uff1apython\u865a\u62df\u73af\u5883\u4e0e\u5305\u7ba1\u7406\u5de5\u5177\u4ecb\u7ecd windows\u4e0emac\u4e0bvirtualenv\u4e0ePycharm\u7684\u7ed3\u5408\u4f7f\u7528 linux\u4e0b\u865a\u62df\u73af\u5883\u6a21\u5757virtualenv\u53ca\u7ba1\u7406\u5de5\u5177virtualenvwrapper\u7684\u4f7f\u7528","title":"Notice"},{"location":"Django\u6846\u67b6\u5165\u95e8/#quickstart","text":"1\u3001\u9996\u5148\u6211\u4eec\u5728\u672c\u673a\u521b\u5efa\u4e00\u4e2a\u4e13\u95e8\u8fd0\u884cDjango\u7684\u865a\u62df\u73af\u5883\uff08\u672c\u6587\u4f7f\u7528\u7684\u662fvirtualenv\uff09: mkvirtualenv django_test 2\u3001\u7136\u540e\u8fdb\u5165\u65b0\u521b\u5efa\u597d\u7684\u865a\u62df\u73af\u5883: workon django_test 3\u3001\u7136\u540e\u5728\u8fd9\u4e2a\u865a\u62df\u73af\u5883\u4e2d\u5b89\u88c5\u6307\u5b9a\u7248\u672c\u7684Django: pip3 install django==2.2.10 4\u3001\u5b89\u88c5\u597dDjango\u540e\u65b0\u5efa\u4e00\u4e2aDjango\u9879\u76ee: django-admin startproject whwDjTest \u5982\u4e0a\u6240\u793a\uff1a\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3awhwDjTest\u7684\u9879\u76ee\u3002 5\u3001\u7136\u540e\u6211\u4eec\u8fdb\u5165whwDjTest\u8fd9\u4e2a\u9879\u76ee\u76ee\u5f55\u6765\u770b\u770b \u9ed8\u8ba4\u521b\u5efa \u7684Django\u9879\u76ee\u7684\u76ee\u5f55\u7ed3\u6784: ~/Desktop/whwDjTest # \u9879\u76ee\u76ee\u5f55 \u251c\u2500\u2500 manage.py # \u542f\u52a8\u4e0e\u7ba1\u7406Django\u9879\u76ee\u7684\u6a21\u5757 \u2514\u2500\u2500 whwDjTest # \u4e0e\u9879\u76ee\u540c\u540d\u7684\u76ee\u5f55 \u251c\u2500\u2500 __init__.py \u251c\u2500\u2500 settings.py # \u9879\u76ee\u7684\u672c\u5730\u914d\u7f6e \u251c\u2500\u2500 urls.py # \u9879\u76ee\u7684\u4e3b\u8def\u7531 \u2514\u2500\u2500 wsgi.py # \u57fa\u4e8eWSGI\u7684socket server 6\u3001\u7136\u540e\u5728 \u9879\u76ee\u76ee\u5f55 \u4e2d\u65b0\u5efa\u4e00\u4e2a\u540d\u4e3a views.py \u7684\u6a21\u5757: touch views.py \u65b0\u7684\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b: ~/Desktop/whwDjTest \u251c\u2500\u2500 manage.py \u251c\u2500\u2500 views.py # \u65b0\u7684\u89c6\u56fe\u51fd\u6570 \u2514\u2500\u2500 whwDjTest \u251c\u2500\u2500 __init__.py \u251c\u2500\u2500 settings.py \u251c\u2500\u2500 urls.py \u2514\u2500\u2500 wsgi.py \u5e76\u4e14\u5728views.py\u6587\u4ef6\u4e2d\u52a0\u5165\u4e0b\u9762\u4ee3\u7801: # -*- coding:utf-8 -*- from django.shortcuts import HttpResponse def index(request): if request.method == \"GET\": return HttpResponse(\"Hello Django!\") 7\u3001\u5728urls\u4e2d\u65b0\u52a0\u4e00\u6761\u8def\u7531,\u5e76\u4e14\u65b0\u7684\u8def\u7531\u4ea4\u7ed9\u4e0a\u9762\u5199\u597d\u7684views.py\u4e2d\u7684index\u65b9\u6cd5\u53bb\u5904\u7406\uff1a from django.contrib import admin from django.urls import path # \u5904\u7406\u89c6\u56fe\u7684\u6a21\u5757 import views urlpatterns = [ path('admin/', admin.site.urls), # \u65b0\u8def\u7531 path('index/',views.index) ] 8\u3001\u6700\u540e\uff0c\u5728\u9879\u76ee\u76ee\u5f55\u4e0b\u542f\u52a8Django\u7a0b\u5e8f: python3 manage.py runserver 127.0.0.1:9001 9\u3001\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://127.0.0.1:9001/index/ \u5373\u53ef\u770b\u5230\u9875\u9762\u6253\u5370\u51fa\u7684\u7ed3\u679c: Hello Django!","title":"QuickStart"},{"location":"Django\u6846\u67b6\u5165\u95e8/#django","text":"\u505aweb\u5f00\u53d1\u5fc5\u987b\u5148\u641e\u660e\u767d\u524d\u7aef\u6d4f\u89c8\u5668\u53d1\u51fa\u8bf7\u6c42\u540e\u670d\u52a1\u7aef\u7684\u5177\u4f53\u5904\u7406\u6d41\u7a0b\u4ee5\u53ca\u540e\u7aef\u5982\u4f55\u5904\u7406\u8bf7\u6c42\u3001\u8fd4\u56de\u54cd\u5e94\u3002\u5bf9\u4e8eDjango\u6846\u67b6\u6765\u8bf4\u5f04\u660e\u767dDjango\u7684\u8bf7\u6c42\u751f\u547d\u5468\u671f\u662f\u641e\u5b9a\u4e00\u5207\u7684\u57fa\u7840\u3002 \u4e0b\u56fe\u662fDjango\u7684\u8bf7\u6c42\u751f\u547d\u5468\u671f\uff0c\u4e5f\u5c31\u662f\u4ece\u7528\u6237\u53d1\u51fa\u8bf7\u6c42\u540e\u670d\u52a1\u7aef\u8fd4\u56de\u54cd\u5e94\u7684\u5177\u4f53\u8fc7\u7a0b: \u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u7528\u6237\u8bf7\u6c42\u5230\u8fbeDjango\u670d\u52a1\u7aef\u540e\uff0c\u8bf7\u6c42\u7ecf\u8fc7\u4e86\u4e0b\u9762\u6b65\u9aa4\u7684\u5904\u7406: \u9996\u5148django\u6846\u67b6\u4f7f\u7528\u4e86\u57fa\u4e8e WSGI \u534f\u8bae\u7684\u4e00\u4e2asocket\u670d\u52a1\u7aef\u6a21\u5757\u5c06\u7528\u6237\u7684\u8bf7\u6c42\u8fdb\u884c\u5c01\u88c5(\u901a\u5e38\u90fd\u4f1a\u4f7f\u7528 request \u53d8\u91cf\u540d\u6765\u83b7\u53d6\u8fd9\u4e2a\u8bf7\u6c42\u5bf9\u8c61)\uff1b \u63a5\u7740\u5c01\u88c5\u540e\u7684 request\u8bf7\u6c42\u5bf9\u8c61 \u7ecf\u8fc7 \u4e2d\u95f4\u4ef6 \u8fdb\u884c\u8def\u7531\u5206\u53d1\u524d\u7684\u9884\u5904\u7406(\u4f8b\u5982session\u3001csrf\u6821\u9a8c\u3001\u6743\u9650\u7684\u6821\u9a8c\u7b49\u7b49)\uff1b \u7136\u540e\u6839\u636e\u8fd9\u4e2a request\u8bf7\u6c42\u5bf9\u8c61 \u4e2d\u7684url\u8fdb\u884c \u8def\u7531\u5339\u914d \u4e0e \u8def\u7531\u5206\u53d1 \uff0c\u5c06\u4e0d\u540c\u7684url\u5206\u53d1\u7ed9\u5bf9\u5e94\u7684 \u89c6\u56fe\u51fd\u6570 \u53bb\u5904\u7406\uff1b \u89c6\u56fe\u51fd\u6570 \u6839\u636e\u4e1a\u52a1\u9700\u6c42\u8fdb\u884c\u4e1a\u52a1\u903b\u8f91\u7684\u64cd\u4f5c\uff1b \u5728\u89c6\u56fe\u51fd\u6570\u5904\u7406\u4e1a\u52a1\u903b\u8f91\u65f6\u4f7f\u7528 ORM \u4e0e\u6570\u636e\u5e93\u8fdb\u884c\u4ea4\u4e92\uff1b \u89c6\u56fe\u51fd\u6570\u5904\u7406\u5b8c\u6bd5\u540e\uff0c\u518d\u7ecf\u8fc7Django\u7684\u4e2d\u95f4\u4ef6\u4e0esocket\u670d\u52a1\u7aef\u5c06\u7ed3\u679c\u8fd4\u56de\u7ed9\u7528\u6237\uff08\u524d\u540e\u7aef\u4e0d\u5206\u79bb\u7684\u9879\u76ee\u8fdb\u884c\u6a21\u7248\u6e32\u67d3\u6216\u8005\u4ea4\u7ed9\u524d\u7aef\u6846\u67b6\u8fdb\u884c\u8fdb\u4e00\u6b65\u5904\u7406\uff09 \u7531\u4e8eDjango\u4f7f\u7528\u7684\u662f\u7b2c\u4e09\u65b9\u7684web socket\u7684\u670d\u52a1\u7aef(Django\u81ea\u5e26\u7684\u662fwsgiref\u6a21\u5757\uff0c\u7ebf\u4e0a\u90e8\u7f72\u4f7f\u7528\u7684\u662fuwsgi\u6a21\u5757)\uff1b\u8fd8\u6709Django\u7684\u4e2d\u95f4\u4ef6\u5c5e\u4e8e\u6bd4\u8f83\u8fdb\u9636\u7684\u5185\u5bb9\uff0c\u56e0\u6b64 \u6982\u89c8 \u8fd9\u91cc\u5c31\u4e0d\u4ecb\u7ecd\u4e2d\u95f4\u4ef6\u4e86\u3002\u672c\u6587\u4e3b\u8981\u4e3a\u5927\u5bb6\u8bb2\u4e00\u4e0bDjango\u7684\u8def\u7531\u5339\u914d\u4e0e\u5206\u53d1\u3001\u89c6\u56fe\u7cfb\u7edf\u3001\u6a21\u578b\u5c42(ORM)\u3001\u6a21\u677f\u5c42\u53ca\u9759\u6001\u6587\u4ef6\u7684\u914d\u7f6e\u57fa\u7840\u3002 \u5f53\u7136\u5728\u6b64\u4e4b\u524d\u8fd8\u5f97\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u4e00\u4e0b\u6784\u6210django\u9879\u76ee\u7684\u5341\u5206\u5173\u952e\u7684\u90e8\u5206\u2014\u2014 \u5e94\u7528 \u3002","title":"Django\u7684\u8bf7\u6c42\u751f\u547d\u5468\u671f"},{"location":"Django\u6846\u67b6\u5165\u95e8/#djangoapplication","text":"Django\u9879\u76ee\u662f \u6a21\u5757\u5316 \u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u9879\u76ee\u4e2d\u7684\u4e0d\u540c\u6a21\u5757\u521b\u5efa\u76f8\u5e94\u7684\u5e94\u7528\uff0c\u8fd9\u6837\u53ef\u4ee5\u4f7f\u9879\u76ee\u66f4\u5bb9\u6613\u7ef4\u62a4\u5e76\u4e14\u63d0\u5347\u5f00\u53d1\u7684\u6548\u7387\u3002 \u6bd4\u5982\u8bf4\uff0c\u73b0\u5728\u6211\u4eec\u9700\u8981\u4e3a\u9879\u76ee\u521b\u5efa2\u4e2a\u6a21\u5757\uff0c\u4e00\u4e2a\u662f\u4eba\u5458\u7ba1\u7406\u7684 user \u6a21\u5757\uff0c\u53e6\u5916\u4e00\u4e2a\u662f\u56fe\u4e66\u9986\u91cc\u7684 book \u6a21\u5757\uff1a 1\u3001\u4e3a\u9879\u76ee\u521b\u5efa\u5e94\u7528 \u5728\u4e0e manage.py \u540c\u7ea7\u76ee\u5f55\u4e0b\u8f93\u5165\u547d\u4ee4\u521b\u5efa\u8fd9\u4e24\u4e2a\u5e94\u7528\uff1a python3 manage.py startapp user python3 manage.py startapp book \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5728\u9879\u76ee\u4e2d\u591a\u4e862\u4e2a\u76ee\u5f55\uff1auser\u4e0ebook\uff1a ~/Desktop/whwDjTest \u251c\u2500\u2500 book # \u65b0\u521b\u5efa\u7684\u5e94\u7528\u7684\u76ee\u5f55 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 admin.py \u2502 \u251c\u2500\u2500 apps.py \u2502 \u251c\u2500\u2500 migrations \u2502 \u2502 \u2514\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 models.py \u2502 \u251c\u2500\u2500 tests.py \u2502 \u2514\u2500\u2500 views.py \u251c\u2500\u2500 manage.py \u251c\u2500\u2500 user # \u65b0\u521b\u5efa\u7684\u5e94\u7528\u7684\u76ee\u5f55 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 admin.py \u2502 \u251c\u2500\u2500 apps.py \u2502 \u251c\u2500\u2500 migrations \u2502 \u2502 \u2514\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 models.py \u2502 \u251c\u2500\u2500 tests.py \u2502 \u2514\u2500\u2500 views.py \u251c\u2500\u2500 views.py \u2514\u2500\u2500 whwDjTest \u251c\u2500\u2500 __init__.py \u251c\u2500\u2500 settings.py \u251c\u2500\u2500 urls.py \u2514\u2500\u2500 wsgi.py 2\u3001\u5728Django\u4e2d \u6ce8\u518c \u65b0\u521b\u5efa\u7684\u5e94\u7528 \u65b0\u521b\u5efa\u7684\u5e94\u7528\u76ee\u5f55\u5fc5\u987b\u5728 settings.py \u4e2d\u6ce8\u518c\u540e\u624d\u80fd\u6b63\u5e38\u4f7f\u7528\u3002 \u5728 \u4e0e\u9879\u76ee\u540c\u540d\u7684\u76ee\u5f55 \u4e0b\u7684 settings.py \u6587\u4ef6\u4e2d\uff0c\u627e\u5230 INSTALLED_APPS \u8fd9\u4e2a\u5217\u8868\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0bDjango\u5df2\u7ecf\u6ce8\u518c\u4e866\u4e2a\u5e94\u7528\uff0c\u540e\u9762\u7684\u7ae0\u8282\u6211\u4f1a\u62ff\u51fa\u51e0\u4e2a\u91cd\u8981\u7684\u7ed9\u5927\u5bb6\u505a\u5355\u72ec\u7684\u8bb2\u89e3\u3002 \u6211\u4eec\u9700\u8981\u5c06\u81ea\u5df1\u521a\u521a\u521b\u5efa\u597d\u7684\u5e94\u7528\u6ce8\u518c\u5230\u8fd9\u4e2a\u5217\u8868\u4e2d\uff1a INSTALLED_APPS = [ 'django.contrib.admin', 'django.contrib.auth', 'django.contrib.contenttypes', 'django.contrib.sessions', 'django.contrib.messages', 'django.contrib.staticfiles', # \u81ea\u5df1\u7684\u5e94\u7528 'book.apps.BookConfig', 'user.apps.UserConfig', ] \u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u4e86\uff1a\u5efa\u8bae\u5927\u5bb6\u4f7f\u7528\u4e0a\u9762\u7684\u65b9\u6cd5\uff08book.apps.BookConfig'\u800c\u4e0d\u662f\u53ea\u5199'book'\uff09\u53bb\u6ce8\u518c\u5e94\u7528\uff01","title":"Django\u4e2d\u7684\u5e94\u7528(application)"},{"location":"Django\u6846\u67b6\u5165\u95e8/#django_1","text":"\u4e00\u3001\u8def\u7531\u5339\u914d \u5f53\u8bf7\u6c42\u5230\u8fbe\u8def\u7531\u8fd9\u91cc\u65f6\uff0cDjango\u4f1a\u9ed8\u8ba4\u53bb \u4e0e\u9879\u76ee\u540c\u540d\u7684\u76ee\u5f55\u4e0b\u7684urls.py \u6587\u4ef6\u4e2d\u5339\u914d\u8def\u7531\u3002 \u50cf Quick Start \u91cc\u9762\u8def\u7531\u7684\u5199\u6cd5\u5982\u4e0b(\u8fd9\u91cc\u591a\u52a0\u51e0\u4e2a\u8fdb\u884c\u8bf4\u660e)\uff1a from django.contrib import admin from django.urls import path,re_path # \u5904\u7406\u89c6\u56fe\u7684\u6a21\u5757 import views urlpatterns = [ path('admin/', admin.site.urls), # \u65b0\u8def\u7531 path('index/',views.index) ] \u9ed8\u8ba4\u7684\u4e00\u6761\u8def\u7531\u662f path('admin/', admin.site.urls), Django\u7684\u540e\u53f0\u7ba1\u7406\u9875\u9762\u7684\u8def\u7531\uff0c\u5148\u4e0d\u7528\u7ba1\u8fd9\u4e2a\u3002 \u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u4e86\u4e00\u6761\u8def\u7531 index/ (\u8fd9\u91cc\u7701\u7565\u4e86\u57df\u540d\u4e0e\u7aef\u53e3)\uff0cpath\u540e\u9762\u7684\u662f \u5904\u7406\u8fd9\u6761\u8def\u7531\u7684\u89c6\u56fe \uff0c\u5173\u4e8e\u89c6\u56fe\u6211\u4eec\u540e\u9762\u505a\u4ecb\u7ecd\u3002 \u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0cDjango2\u7248\u672c\u7684\u8def\u7531\u5f15\u5165\u4e86path\u65b9\u6cd5\u8fdb\u884c\u8def\u7531\u5339\u914d\uff0c\u5982\u679c\u4f60\u4e4b\u524d\u63a5\u89e6\u8fc7Django1\u7248\u672c\u7684\u9879\u76ee\uff0c\u5b83\u7528\u7684\u662f url \u65b9\u6cd5\u505a\u7684\u8def\u7531\u5339\u914d\u2014\u2014url\u65b9\u6cd5\u505a\u7684\u662f\u6b63\u5219\u5339\u914d\u3002 Django2\u7248\u672c\u6709\u53e6\u5916\u4e00\u4e2a\u65b9\u6cd5 re_path \u4e0e\u4e4b\u524d\u7684url\u65b9\u6cd5\u5bf9\u5e94\uff0c\u4e0a\u9762\u7684\u65b0\u8def\u7531\u6211\u4eec\u4e5f\u53ef\u4ee5\u5199\u6210\u8fd9\u6837\u7684\u6b63\u5219\u5339\u914d\u7684\u5f62\u5f0f\uff1a re_path('^index/$',views.index), \u5173\u4e8epath\u65b9\u6cd5\u540e\u9762\u8fdb\u9636\u7684\u4ecb\u7ecd\u4f1a\u63d0\u5230\u3002 \u4e8c\u3001\u8def\u7531\u5206\u53d1 \u5f53\u7136\u806a\u660e\u7684\u4f60\u770b\u5230\u8fd9\u91cc\u4e5f\u8bb8\u4f1a\u53d1\u73b0\u4e00\u4e2a\u95ee\u9898\uff1a\u65e2\u7136Django\u53ef\u4ee5\u6ce8\u518c\u591a\u4e2aapp\uff0c\u90a3\u4e48\u6bcf\u4e2aapp\u5fc5\u7136\u4f1a\u6709\u8bb8\u591a\u8def\u7531\uff0c\u628a\u8fd9\u4e9b\u8def\u7531\u90fd\u653e\u5728\u4e00\u5757\u73a9\u4e00\u641e\u6df7\u4e86\u600e\u4e48\u529e\u5462\uff1f Django\u4f7f\u7528\u8def\u7531\u5206\u53d1\u6765\u89e3\u51b3\u591a\u5e94\u7528\u8def\u7531\u53ef\u80fd\u9020\u6210\u7684\u6df7\u4e71\u95ee\u9898\u3002 1\u3001\u4ee5user\u4e3a\u4f8b\uff0c\u4e0a\u9762\u6211\u4eec\u521b\u5efa\u4e862\u4e2a\u5e94\u7528\u4f46\u662f\u91cc\u9762\u6ca1\u6709\u8def\u7531\u7684\u6587\u4ef6\uff0c\u6211\u4eec\u81ea\u5df1\u5728\u4e24\u4e2a\u5e94\u7528\u4e2d\u5206\u522b\u521b\u5efa urls.py\u6587\u4ef6 \u5f53\u4f5c\u662f \u5e94\u7528\u4e13\u5c5e\u7684\u8def\u7531\u5904\u7406\u6587\u4ef6 : cd user touch urls.py 2\u3001\u4ee5user\u4e3a\u4f8b\uff0c\u7136\u540e\u6211\u4eec\u5728 \u8ddf\u9879\u76ee\u540c\u540d\u7684urls.py\u6587\u4ef6\u4e2d\u52a0\u5165\u8def\u7531\u5206\u53d1\u7684\u903b\u8f91 \uff1a from django.contrib import admin from django.urls import path,re_path,include # \u5904\u7406\u89c6\u56fe\u7684\u6a21\u5757 import views urlpatterns = [ path('admin/', admin.site.urls), # \u65b0\u8def\u7531 re_path('^index/$',views.index), # \u8def\u7531\u5206\u53d1 re_path('^user/',include('user.urls')) ] 3\u3001\u4ee5user\u4e3a\u4f8b\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8bbf\u95eeuser\u76f8\u5173\u7684url\uff0c\u8fd9\u4e2aurl\u662f\u8fd9\u4e48\u8bbe\u8ba1\u7684\uff1a user/home \u3002 \u6211\u4eec\u5728 user\u5e94\u7528\u4e0b\u7684urls.py\u6587\u4ef6\u4e2d\u52a0\u5165\u8def\u7531\u5339\u914d\u7684\u4ee3\u7801 : from django.urls import re_path # \u81ea\u5df1\u5904\u7406\u89c6\u56fe\u7684\u6a21\u5757 from user import views urlpatterns = [ re_path('^home/$',views.home), ] user\u7684views.py\u6587\u4ef6\u4e2d\u52a0\u4e0a\u89c6\u56fe\u7684\u5904\u7406\u903b\u8f91\uff1a from django.shortcuts import HttpResponse def home(request): if request.method == \"GET\": return HttpResponse(\"user home!\") 4\u3001\u6700\u540e\u6211\u4eec\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee\uff1a http://127.0.0.1:9001/user/home/ \u5c31\u53ef\u4ee5\u770b\u5230\u6d4f\u89c8\u5668\u6253\u5370\u51fa\u4e86\uff1a user home!","title":"Django\u7684\u8def\u7531\u5339\u914d\u4e0e\u5206\u53d1"},{"location":"Django\u6846\u67b6\u5165\u95e8/#django_2","text":"\u4e0a\u9762\u5728\u4ecb\u7ecd\u8def\u7531\u7cfb\u7edf\u7684\u65f6\u5019\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8def\u7531\u90fd\u6709\u4e00\u4e2a\u51fd\u6570(\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7c7b)\u53bb\u5904\u7406\uff0c\u8fd9\u4e2a\u51fd\u6570(\u540e\u9762\u4f1a\u4ecb\u7ecd\u7c7b)\u6216\u8005\u7c7b\u5c31\u662fDjango\u7684\u89c6\u56fe\u51fd\u6570(\u6216\u8005\u53eb\u89c6\u56fe\u7c7b)\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0cDjango\u7684\u89c6\u56fe\u7cfb\u7edf\u662f\u5728\u8def\u7531\u5339\u914d\u6210\u529f\u4e4b\u540e\u8fdb\u884c\u7684\u540e\u6bb5\u903b\u8f91\u5904\u7406\u7684\u5730\u65b9\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u6bcf\u4e00\u4e2a\u89c6\u56fe\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u662f \u8bf7\u6c42\u5bf9\u8c61request ,\u8fd9\u4e2arequest\u5bf9\u8c61\u5c31\u662fWSGI\u670d\u52a1\u7aef\u4e0e\u4e2d\u95f4\u4ef6\u5904\u7406\u5b8c\u6bd5\u540e\u7684\u8bf7\u6c42\u5bf9\u8c61\uff0c\u91cc\u9762\u5c01\u88c5\u4e86\u8bb8\u591a\u5c5e\u6027\u4e0e\u65b9\u6cd5\u3002\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684\u89c6\u56fe\u8fd4\u56de\u7684\u90fd\u662fHttpResponse\u5bf9\u8c61(\u5b9e\u9645\u4e0a\u53ef\u4ee5\u8fd4\u56de3\u4e2a\u54cd\u5e94\u5bf9\u8c61)\u3002 \u5173\u4e8erequest\u4e0eresponse\u5bf9\u8c61\u7684\u5c5e\u6027\u4e0e\u65b9\u6cd5\u4f1a\u5728\u540e\u7eed\u7ae0\u8282\u4e2d\u8be6\u7ec6\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u3002\u5927\u5bb6\u53ea\u9700\u8981\u7262\u8bb0\u4e00\u70b9\uff1a\u89c6\u56fe\u7cfb\u7edf\u662f\u5904\u7406\u540e\u6bb5\u4e1a\u52a1\u7684\u6838\u5fc3\u6240\u5728\u5730\uff0c\u6211\u4eec\u5e38\u5e38\u8bf4\u7684 CV\u5de5\u7a0b\u5e08 \u3001 CURD\u642c\u8fd0\u5de5 \u6240\u6d89\u53ca\u5230\u7684\u4ee3\u7801\u7edd\u5927\u90e8\u5206\u90fd\u662f\u5728\u8fd9\u91cc\u5b8c\u6210\u7684\uff01 \u4e2a\u4eba\u8ba4\u4e3aDjango\u7684\u89c6\u56fe\u7cfb\u7edf\u8d77\u5230\u4e86\u4e00\u4e2a \u627f\u4e0a\u542f\u4e0b \u7684\u4f5c\u7528\uff0c\u5728\u8fd9\u91cc\u62ff\u5230\u5c01\u88c5\u540e\u7684\u8bf7\u6c42\u5bf9\u8c61\uff0c\u7ecf\u8fc7\u4e1a\u52a1\u903b\u8f91\u5904\u7406\u5c06\u5904\u7406\u540e\u7684\u54cd\u5e94\u5bf9\u8c61\u8fd4\u56de\u7ed9\u524d\u7aef\u8fdb\u884c\u6a21\u677f\u6e32\u67d3\u6216\u8005\u8fdb\u884c\u5176\u4ed6\u7684\u5904\u7406\u3002","title":"Django\u7684\u89c6\u56fe\u7cfb\u7edf\u7b80\u4ecb"},{"location":"Django\u6846\u67b6\u5165\u95e8/#fbvcbv","text":"\u8bf4\u767d\u4e86\uff0cFBV\u5c31\u662f\u89c6\u56fe\u4e2d\u4ee5\u51fd\u6570\u7684\u65b9\u5f0f\u5904\u7406\u8bf7\u6c42\uff0cCBV\u5c31\u662f\u4ee5\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u5f0f\u5904\u7406\u8bf7\u6c42\u3002 \u4e0a\u9762\u7ed9\u5927\u5bb6\u4ecb\u7ecd\u7684\u662fFBV\u7684\u5199\u6cd5\uff0c\u4e0b\u9762\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0bCBV\u7684\u5199\u6cd5\uff1a 1\u3001\u8fd8\u62ff\u7b2c\u4e00\u4e2aindex\u8def\u7531\u4e3e\u4f8b\uff0c\u5728views.py\u4e2d\u52a0\u5165CBV\u5904\u7406\u7684\u903b\u8f91\uff1a # -*- coding:utf-8 -*- from django.shortcuts import HttpResponse from django.views import View class Index(View): def get(self,request): return HttpResponse(\"Hello Django!\") 2\u3001\u8fd9\u65f6\u8def\u7531\u7684\u5199\u6cd5\u9700\u8981\u6539\u6210\u8fd9\u79cd\u5f62\u5f0f\uff1a from django.contrib import admin from django.urls import path,re_path,include # \u5904\u7406\u89c6\u56fe\u7684\u6a21\u5757 import views urlpatterns = [ path('admin/', admin.site.urls), # \u65b0\u8def\u7531 \u2014\u2014 CBV\u7684\u5199\u6cd5 re_path('^index/$',views.Index.as_view()), ] \u7136\u540e\u50cf\u4e0a\u9762\u90a3\u6837\u8bbf\u95eeindex\u9875\u9762\u5c31\u597d\u4e86\u3002","title":"\u89c6\u56fe\u7cfb\u7edf\u4e4bFBV\u4e0eCBV\u7b80\u4ecb"},{"location":"Django\u6846\u67b6\u5165\u95e8/#djangomysql","text":"\u4e0eFlask\u7b49\u5176\u4ed6Python\u6846\u67b6\u4e0d\u540c\u7684\u662f\uff0cDjango\u7684\u6a21\u578b\u5c42\u4e0e\u6570\u636e\u5e93\u4ea4\u4e92\u7528\u7684\u662f\u81ea\u5df1\u7684ORM\u6846\u67b6\u3002 \u672c\u6587\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0bDjango\u4e0eMySQL\u6570\u636e\u5e93\u4ea4\u4e92\u7684\u8fc7\u7a0b\u4ee5\u53caORM\u7684\u57fa\u672c\u4f7f\u7528\uff0c\u540e\u7eed\u7ae0\u8282\u4f1a\u8be6\u7ec6\u5c55\u5f00\u8bf4\u660e\u3002 \u4e00\u3001\u521b\u5efa\u6570\u636e\u5e93 \u5728MySQL\u4e2d\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a test \u7684\u6570\u636e\u5e93\u5f53\u4f5c\u662f\u6d4b\u8bd5\u7684\u6570\u636e\u5e93\u3002 mysql -uroot -p mysql> create database test; Query OK, 1 row affected (0.01 sec) mysql> show databases; +--------------------+ | Database | +--------------------+ | xxx | | xxxx | | xxxxx | | xxxxxx | | xx123 | | test | +--------------------+ \u4e8c\u3001\u521b\u5efa\u6a21\u578bModel \u4ee5\u4e0a\u9762\u521b\u5efa\u7684 user \u5e94\u7528\u4e3a\u4f8b\uff0c\u5728 user/models.py \u6587\u4ef6\u4e2d\u52a0\u5165\u521b\u5efa\u7684\u6570\u636e\u6a21\u578b\uff1a from django.db import models # Create your models here. class User(models.Model): id = models.AutoField(primary_key=True) name = models.CharField(max_length=22) age = models.IntegerField() def __str__(self): return self.name \u53ef\u4ee5\u770b\u5230\uff1a\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2auser\u6a21\u578b\uff0c\u91cc\u9762\u67093\u4e2a\u5c5e\u6027\uff1aid(\u4e3b\u952e)\u3001name\u3001age\u3002 \u4e09\u3001\u5728settings\u4e2d\u914d\u7f6e\u6570\u636e\u5e93\u7684\u8fde\u63a5 \u5728\u4e0e\u9879\u76ee\u540c\u540d\u7684\u76ee\u5f55\u4e2d\u7684settings.py\u6587\u4ef6\u4e2d\u627e\u5230 DATABASES \u8fd9\u4e2a\u5b57\u5178\uff0c\u5c06\u91cc\u9762\u7684\u914d\u7f6e\u6539\u6210MySQL\u7684\u8fde\u63a5\u914d\u7f6e\uff1a DATABASES = { 'default': { 'ENGINE': 'django.db.backends.mysql',#\u5f15\u64ce\uff0c\u9009mysql 'NAME':'test',#\u8981\u8fde\u63a5\u7684\u6570\u636e\u5e93\uff0c\u8fde\u63a5\u524d\u9700\u8981\u521b\u5efa\u597d 'USER':'root',#\u8fde\u63a5\u6570\u636e\u5e93\u7684\u7528\u6237\u540d 'PASSWORD':'123',#\u8fde\u63a5\u6570\u636e\u5e93\u7684\u5bc6\u7801 'HOST':'127.0.0.1',#\u8fde\u63a5\u4e3b\u673a\uff0c\u9ed8\u8ba4\u672c\u673a 'PORT':3306,#\u7aef\u53e3 \u9ed8\u8ba43306 #Django\u4e2d\u8bbe\u7f6e\u6570\u636e\u5e93\u7684\u4e25\u683c\u6a21\u5f0f 'OPTIONS':{ 'init_command':\"set sql_mode='STRICT_TRANS_TABLES' \", } } } \u5982\u679c\u6b64\u65f6\u5c31\u542f\u52a8\u9879\u76ee\u4f1a\u62a5\u9519\uff1a django.core.exceptions.ImproperlyConfigured: Error loading MySQLdb module. Did you install mysqlclient? \u63d0\u793a\u6211\u4eec\u6ca1\u6709\u5b89\u88c5mysql\u5ba2\u6237\u7aef\uff0cMySQLdb\u5bf9\u4e8epy3\u6709\u5f88\u5927\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u7684\u9a71\u52a8\u662fpymysql\u3002 \u56db\u3001\u5728\u4e0e\u9879\u76ee\u540c\u540d\u7684\u76ee\u5f55\u4e2d\u7684 __init__.py \u6587\u4ef6\u4e2d\u5bfc\u5165pymysql\u6a21\u5757\u5e76\u52a0\u5165MySQLdb \u7531\u4e8e\u65b0\u521b\u5efa\u7684\u865a\u62df\u73af\u5883\u4e2d\u6ca1\u6709pymysql\u6a21\u5757\uff0c\u6211\u4eec\u9700\u8981\u5148\u5b89\u88c5\u4e00\u4e0b\uff1a pip3 install pymysql \u7136\u540e\u52a0\u5165MySQLdb\uff1a import pymysql pymysql.install_as_MySQLdb() \u4e94\u3001\u5982\u679c\u4f7f\u7528Django2\u7248\u672c\u9700\u8981\u4fee\u65392\u5904\u6e90\u7801 \uff081\uff09\u5982\u679c\u6b64\u65f6\u8fd0\u884c\u9879\u76ee\u7684\u8bdd\u4f1a\u62a5\u9519\uff1a django.core.exceptions.ImproperlyConfigured: mysqlclient 1.3.13 or newer is required; you have 0.9.3. \u8fd9\u662fDjango2\u5185\u90e8\u7684\u4e00\u4e2a\u7248\u672c\u9650\u5236\u7684\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539\u4e00\u4e0b\u6e90\u7801\u3002 \u627e\u5230\u5f53\u524d\u8fd9\u4e2a\u865a\u62df\u73af\u5883\u7684\u76ee\u5f55\u4e0b\u7684django\u5bf9\u5e94\u7684\u914d\u7f6e\uff0c\u5177\u4f53\u7684\u76ee\u5f55\u662f\uff1a /(\u4f60\u81ea\u5df1\u7684\u5bb6\u76ee\u5f55)/venvs/django_test/lib/python3.6/site-packages/django/db/backends/mysql/base.py \u8fd9\u4e2a base.py \u6587\u4ef6\u4e2d\u6709\u8fd9\u4e24\u884c\u4ee3\u7801\uff1a if version < (1, 3, 13): raise ImproperlyConfigured('mysqlclient 1.3.13 or newer is required; you have %s.' % Database.__version__) \u628a\u8fd9\u4e24\u884c\u4ee3\u7801\u6ce8\u91ca\u6389\uff01 \uff082\uff09\u518d\u8fd0\u884c\u9879\u76ee\u8fd8\u4f1a\u62a5\u9519\uff1a AttributeError: 'str' object has no attribute 'decode' \u5bf9\u5e94\u62a5\u9519\u7684\u6587\u4ef6\u5728\u8fd9\u91cc\uff1a /(\u4f60\u81ea\u5df1\u7684\u5bb6\u76ee\u5f55)/venvs/django_test/lib/python3.6/site-packages/django/db/backends/mysql/operations.py \u8fd9\u4e2a\u6587\u4ef6\u7684146\u884c\uff1a query = query.decode(errors='replace') \u6539\u6210encode: query = query.encode(errors='replace') \u8fd9\u6837\u5c31\u6ca1\u95ee\u9898\u4e86\uff01 \u516d\u3001\u6267\u884c\u6570\u636e\u5e93\u8fc1\u79fb\u6307\u4ee4 \u5728\u9879\u76ee\u7684\u8ddf\u76ee\u5f55\u4e0b\u6267\u884c\u6570\u636e\u5e93\u7684\u8fc1\u79fb\u6307\u4ee4\uff1a python3 manage.py makemigrations ''' Migrations for 'user': user/migrations/0001_initial.py - Create model User ''' python3 manage.py migrate ''' Operations to perform: Apply all migrations: admin, auth, contenttypes, sessions, user Running migrations: Applying contenttypes.0001_initial... OK Applying auth.0001_initial... OK Applying admin.0001_initial... OK Applying admin.0002_logentry_remove_auto_add... OK Applying admin.0003_logentry_add_action_flag_choices... OK Applying contenttypes.0002_remove_content_type_name... OK Applying auth.0002_alter_permission_name_max_length... OK Applying auth.0003_alter_user_email_max_length... OK Applying auth.0004_alter_user_username_opts... OK Applying auth.0005_alter_user_last_login_null... OK Applying auth.0006_require_contenttypes_0002... OK Applying auth.0007_alter_validators_add_error_messages... OK Applying auth.0008_alter_user_username_max_length... OK Applying auth.0009_alter_user_last_name_max_length... OK Applying auth.0010_alter_group_name_max_length... OK Applying auth.0011_update_proxy_permissions... OK Applying sessions.0001_initial... OK Applying user.0001_initial... OK ''' \u6bcf\u6b21\u6709\u4e0a\u9762\u8fd9\u6837\u7684\u63d0\u793a\u8bf4\u660e\u6570\u636e\u5e93\u8fc1\u79fb\u6210\u529f\u4e86\uff01 \u4e03\u3001\u67e5\u770b\u6570\u636e\u5e93\u751f\u6210\u7684\u8868 \u8fdb\u5165\u6570\u636e\u5e93\u6211\u4eec\u770b\u770b\u751f\u6210\u7684\u8868\uff1a mysql -uroot -p use test; show tables; ''' +----------------------------+ | Tables_in_test | +----------------------------+ | auth_group | | auth_group_permissions | | auth_permission | | auth_user | | auth_user_groups | | auth_user_user_permissions | | django_admin_log | | django_content_type | | django_migrations | | django_session | | user_user | +----------------------------+ ''' \u751f\u6210\u7684\u8fd9\u4e9b\u8868\u4e2d\uff0c auth \u4e0e django \u4e3a\u524d\u7f00\u7684\u8868\u662fdjango\u81ea\u52a8\u751f\u6210\u7684\uff0c\u6700\u540e\u90a3\u4e2a user_user \u8868\u662f\u6211\u4eec\u81ea\u5df1\u521b\u5efa\u7684\u8868\uff1a\u7b2c\u4e00\u4e2auser\u8868\u793a\u7684\u662f user\u5e94\u7528 \u7b2c\u4e8c\u4e2auser\u8868\u793a \u8868\u7684\u540d\u5b57 (\u5c31\u662f\u6211\u4eec\u7684Model\u7c7b\u7684\u5c0f\u5199)\u3002 \u516b\u3001\u67e5\u770buser_user\u7684\u8868\u7ed3\u6784 mysql> desc user_user; +-------+-------------+------+-----+---------+----------------+ | Field | Type | Null | Key | Default | Extra | +-------+-------------+------+-----+---------+----------------+ | id | int(11) | NO | PRI | NULL | auto_increment | | name | varchar(22) | NO | | NULL | | | age | int(11) | NO | | NULL | | +-------+-------------+------+-----+---------+----------------+ 3 rows in set (0.00 sec) \u8868\u7ed3\u6784\u662f\u6839\u636e\u6211\u4eec\u4e0a\u9762\u7684Model\u7c7b\u7684\u8bed\u6cd5\u521b\u5efa\u7684\u3002\u5177\u4f53Model\u7684\u5c5e\u6027\u4e0eMySQL\u8868\u7ed3\u6784\u7684\u5bf9\u5e94\u5173\u7cfb\u540e\u9762\u8be6\u7ec6\u8bb2\u89e3\u3002 \u4e5d\u3001\u5f80\u6570\u636e\u5e93\u4e2d\u5199\u5165\u4e00\u4e9b\u6570\u636e \u8fd9\u4e00\u6b65\u7565\u53bb\uff0c\u5f53\u7136\u5b9e\u9645\u4e2d\u7684\u65b9\u6cd5\u975e\u5e38\u591a\uff0c\u7531\u4e8e\u672c\u6587\u53ea\u662f\u4e00\u4e2a\u5927\u7eb2\uff0c\u8fd9\u91cc\u6211\u4f7f\u7528insert\u8bed\u53e5\u5f80\u6570\u636e\u5e93\u4e2d\u5199\u51653\u6761\u6570\u636e\uff1a mysql> insert into user_user(name,age) values(\"wanghw\",18),(\"naruto\",28),(\"sasuke\",38); Query OK, 3 rows affected (0.00 sec) Records: 3 Duplicates: 0 Warnings: 0 mysql> select * from user_user; +----+--------+-----+ | id | name | age | +----+--------+-----+ | 1 | wanghw | 18 | | 2 | naruto | 28 | | 3 | sasuke | 38 | +----+--------+-----+ 3 rows in set (0.00 sec)","title":"Django\u4e0eMySQL\u7684\u4ea4\u4e92"},{"location":"Django\u6846\u67b6\u5165\u95e8/#orm","text":"ORM(Object Relational Mapping)\u5bf9\u8c61\u5173\u7cfb\u6620\u5c04\uff0c\u7b80\u5355\u800c\u8a00\u5176\u5b9e\u5c31\u662f\u8ba9\u7a0b\u5e8f\u5458\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u5f0f\u64cd\u4f5c\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\uff0c\u867d\u7136\u6709\u4e9b\u6781\u7aef\u7684\u60c5\u51b5\u4e0b\u6027\u80fd\u4e0a\u8981\u4f4e\u4e8e\u6267\u884c\u539f\u751fSQL\u7684\u6548\u7387\uff0c\u4f46\u662f\u7edd\u5927\u591a\u6570\u7684\u60c5\u51b5\u4e0b\u90fd\u53ef\u4ee5\u6ee1\u8db3\u7528\u6237\u7684\u9700\u6c42\uff08\u5728ORM\u4e2d\u4e5f\u53ef\u4ee5\u6267\u884c\u539f\u751fSQL\uff0c\u540e\u9762\u4f1a\u4ecb\u7ecd\uff09\u3002 \u5176\u5b9e\u4e0a\u9762 Django\u4e0eMySQL\u7684\u4ea4\u4e92 \u90e8\u5206\u4ecb\u7ecd\u7684\u5185\u5bb9\u5c31\u5df2\u7ecf\u505a\u4e86Django\u7a0b\u5e8f\u4e0eMySQL\u6570\u636e\u5e93\u7684\u5173\u8054\uff0c\u6211\u4eec\u73b0\u5728\u53ea\u9700\u8981\u4f7f\u7528ORM\u8bed\u6cd5\u5c31\u53ef\u4ee5\u64cd\u4f5c\u6570\u636e\u5e93\u4e86\u3002 \u4ee5\u4e0a\u9762 Django\u8def\u7531\u5339\u914d\u4e0e\u5206\u53d1 \u4ecb\u7ecd\u7684 user/home/ \u8fd9\u4e2a\u8def\u7531\u4e3a\u4f8b\uff1a\u6211\u4eec\u5728user\u8fd9\u4e2a\u5e94\u7528\u7684views\u4e2d\u52a0\u5165ORM\u7684\u67e5\u8be2\u8bed\u6cd5\uff0c\u7136\u540e\u8bbf\u95ee http://127.0.0.1:8001/user/home/ from django.shortcuts import HttpResponse # \u5bfc\u5165Model from user import models def home(request): if request.method == \"GET\": # \u67e5\u8be2 ret1 = models.User.objects.filter(name=\"wanghw\") print(ret1,type(ret1)) #<QuerySet [<User: wanghw>]> <class 'django.db.models.query.QuerySet'> ret2 = models.User.objects.first() print(ret2,type(ret2)) # wanghw <class 'user.models.User'> return HttpResponse(\"user home!\") \u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0cret1\u5f97\u51fa\u6765\u7684\u662f\u4e00\u4e2a QuerySet\u5bf9\u8c61 \uff0c\u800cret2\u5f97\u5230\u7684\u662f\u4e00\u4e2a model\u5bf9\u8c61 \u3002\u672c\u8282\u53ea\u50cf\u5927\u5bb6\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u5982\u4f55\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u5f0f\u53bb\u64cd\u4f5c\u6570\u636e\u5e93\uff0c\u5173\u4e8eQuerySet\u5bf9\u8c61\u4e0eModel\u5bf9\u8c61\u7684\u5404\u79cd\u65b9\u6cd5\u4e0e\u533a\u522b\u540e\u7eed\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u3002 \u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u63d2\u5165\u4e00\u6761\u6570\u636e\uff1a from django.shortcuts import HttpResponse # \u5bfc\u5165Model from user import models def home(request): if request.method == \"GET\": # \u63d2\u5165\u6570\u636e user_obj = models.User.objects.create(name=\"\u5f20\u4e09\",age=66) print(user_obj) return HttpResponse(\"user home!\") \u5728\u6570\u636e\u5e93\u4e2d\u68c0\u9a8c\u4e00\u4e0b\u662f\u5426\u63d2\u5165\u6210\u529f\uff1a mysql> select * from user_user; +----+--------+-----+ | id | name | age | +----+--------+-----+ | 1 | wanghw | 18 | | 2 | naruto | 28 | | 3 | sasuke | 38 | | 4 | \u5f20\u4e09 | 66 | +----+--------+-----+ 4 rows in set (0.00 sec) \u4fee\u6539\u4e0e\u5220\u9664\u6570\u636e\u4e5f\u662f\u53ef\u4ee5\u7684\uff1a from django.shortcuts import HttpResponse # \u5bfc\u5165Model from user import models def home(request): if request.method == \"GET\": # \u4fee\u6539\u6570\u636e models.User.objects.filter(name=\"\u5f20\u4e09\").update(age=100) # \u5220\u9664\u6570\u636e models.User.objects.filter(name=\"sasuke\").delete() return HttpResponse(\"user home!\") \u518d\u770b\u4e00\u4e0bMySQL\u4e2d\u7684\u7ed3\u679c\uff1a mysql> select * from user_user; +----+--------+-----+ | id | name | age | +----+--------+-----+ | 1 | wanghw | 18 | | 2 | naruto | 28 | | 4 | \u5f20\u4e09 | 100 | +----+--------+-----+ 3 rows in set (0.00 sec)","title":"ORM\u7684\u7b80\u5355\u4f7f\u7528"},{"location":"Django\u6846\u67b6\u5165\u95e8/#django_3","text":"\u5bf9\u4e8e\u524d\u540e\u7aef\u4e0d\u5206\u79bb\u7684\u9879\u76ee\u6765\u8bf4\uff0cDjango\u7684\u6a21\u677f\u7cfb\u7edf\u662f\u4e0e\u524d\u7aef\u4ea4\u4e92\u7684\u5173\u952e\uff0c\u8fd9\u91cc\u5148\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0bDjango\u6a21\u677f\u7684\u4f7f\u7528\u3002 \u5728\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e0b\uff0c\u65b0\u5efa\u4e00\u4e2a\u540d\u4e3a templates \u7684\u76ee\u5f55\uff1a mkdir templates \u7136\u540e\u8fdb\u5165\u8fd9\u4e2a\u76ee\u5f55\u521b\u5efa\u4e00\u4e2a index.html \u6587\u4ef6\uff1a cd templates touch index.html index.html\u4e2d\u7684\u5185\u5bb9\u5982\u4e0b\uff1a <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <h4>\u5f53\u524d\u65f6\u95f4:{{ ctime }}</h4> </body> </html> settings\u4e2d\u7684\u914d\u7f6e \u9700\u8981\u6ce8\u610f\u4e00\u70b9\uff0c\u6211\u4eec\u4ee5\u547d\u4ee4\u7684\u65b9\u5f0f\u521b\u5efaDjango\u9879\u76ee\u7684\u8bdd\uff0c\u9ed8\u8ba4\u7684\u914d\u7f6e\u4e2d\u6ca1\u6709\u4e3a\u6211\u4eec\u52a0\u5165templates\u7684\u76ee\u5f55\uff0c\u5728 settings.py \u4e2d\u627e\u5230 TEMPLATES \u8fd9\u4e2a\u5217\u8868\uff0c\u4e3a\u91cc\u9762\u7684 'DIRS' \u8fd9\u4e2akey\u52a0\u5165\u521a\u521a\u521b\u5efa\u597d\u7684templates\u7684\u76ee\u5f55\uff1a 'DIRS': [os.path.join(BASE_DIR, \"templates\")], \u7136\u540e\u6211\u4eec\u5728 http://127.0.0.1:9001/index/ \u8fd9\u6761\u8def\u7531\u505a\u6d4b\u8bd5\uff1a \u5bf9\u5e94\u7684views.py\u4e2d\u52a0\u5165\u4e0b\u9762\u7684\u4ee3\u7801\uff1a from diango.shortcuts import render #\u8fd9\u4e2a\u51fd\u6570\u5fc5\u987b\u8981\u5e26\u4e00\u4e2a\u5f62\u53c2request def index(request): import datetime now = datetime.datetime.now() ctime = now.strftime('%Y-%m-%d %X') #\u6ce8\u610f\u8fd9\u91cc\u5fc5\u987b\u5f97return \u800c\u4e14\u7b2c\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u662frequest return render(request,'index.html',{'ctime':ctime}) \u6700\u540e\u8bbf\u95eeindex\u8fd9\u4e2a\u8def\u7531\u5c31\u53ef\u4ee5\u770b\u5230\u5f53\u524d\u9875\u9762\u8fd4\u56de\u7684\u4fe1\u606f\u4e86\u3002 index.html\u9875\u9762\u4e2d {{ ctime }} \u8fd9\u4e2a\u662fDjango\u7684\u6a21\u677f\u8bed\u8a00\uff0c\u5bf9\u5e94\u7684ctime\u662f\u540e\u7aef\u8fd4\u56de\u7684\u6570\u636e\uff0c\u540e\u9762\u7684\u7ae0\u8282\u4f1a\u4e3a\u5927\u5bb6\u8be6\u7ec6\u8bb2\u89e3\u6a21\u677f\u8bed\u8a00\u4e0e\u6a21\u677f\u4e2d\u7684\u5176\u4ed6\u9ad8\u7ea7\u7528\u6cd5\u3002","title":"Django\u7684\u6a21\u677f\u7cfb\u7edf"},{"location":"Django\u6846\u67b6\u5165\u95e8/#django_4","text":"\u524d\u540e\u7aef\u4e0d\u5206\u79bb\u7684\u9879\u76ee\u90e8\u7f72\u4e4b\u524d\u5728\u672c\u5730\u8c03\u8bd5\u7684\u65f6\u5019\uff0c\u9700\u8981\u914d\u7f6e\u4e00\u4e0b\u9759\u6001\u6587\u4ef6\uff08css\u3001js\u7b49\u6587\u4ef6\uff09\u3002 \u521b\u5efa\u9759\u6001\u6587\u4ef6\u76ee\u5f55\u53ca\u9759\u6001\u6587\u4ef6 \u8fd8\u662f\u62ff\u4e0a\u9762\u505a\u597d\u7684\u9879\u76ee\u4e3a\u4f8b\u3002\u5728\u9879\u76ee\u7684\u8ddf\u76ee\u5f55\u4e0b\u5fc3\u95f4\u4e00\u4e2a\u540d\u4e3a staticfiles \u7684\u76ee\u5f55\uff0c\u4f5c\u4e3a\u5b58\u653e\u9759\u6001\u6587\u4ef6\u7684\u76ee\u5f55\u3002 mkdir staticfiles \u7136\u540e\u8fdb\u5165\u8fd9\u4e2a\u76ee\u5f55\uff0c\u5728\u91cc\u9762\u52a0\u4e0a\u4e00\u4e2acss\u6587\u4ef6\uff1a cd staticfiles touch my_style.css \u518d\u5728\u8fd9\u4e2acss\u6587\u4ef6\u4e2d\u52a0\u5165\u4e00\u4e2a\u7c7b\u4e0e\u6837\u5f0f\uff1a vim my_style.css # \u52a0\u5165\u6837\u5f0f .class1{color:red} settings\u4e2d\u7684\u914d\u7f6e \u7136\u540e\u5728 settings.py \u6587\u4ef6\u4e2d\u52a0\u5165\u9759\u6001\u6587\u4ef6\u7684\u76ee\u5f55\uff1a STATICFILES_DIRS = [ os.path.join(BASE_DIR,'staticfiles') ] \u6a21\u677f\u4e2d\u5f15\u5165\u9759\u6001\u6587\u4ef6 {#load \u6ce8\u610f\u8fd9\u91cc\u7684static\u53ea\u662f\u4e2a\u5173\u952e\u5b57\uff0c\u7528\u5b83\u6765\u627e\u9759\u6001\u6587\u4ef6\u7684\u522b\u540d#} {% load static %} <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> {# \u5f15\u5165\u9759\u6001\u6587\u4ef6 #} <link rel=\"stylesheet\" href=\"{% static 'my_style.css' %}\"> </head> <body> {# \u4e3ah4\u6807\u7b7e\u6dfb\u52a0\u4e0a\u9762\u8bbe\u7f6e\u597d\u7684class #} <h4 class=\"class1\">\u5f53\u524d\u65f6\u95f4:{{ ctime }}</h4> </body> </html> \u6700\u540e\u8bbf\u95eeindex\u9875\u9762\uff0c\u53ef\u4ee5\u53d1\u73b0\u6240\u6709\u6587\u5b57\u90fd\u53d8\u6210\u4e86\u7ea2\u8272\u2014\u2014\u8bf4\u660e\u9759\u6001\u6587\u4ef6\u5f15\u5165\u6210\u529f\uff01","title":"Django\u4e2d\u9759\u6001\u6587\u4ef6\u7684\u914d\u7f6e"},{"location":"DRF\u76f8\u5173/\u8ba4\u8bc1\u3001\u6743\u9650\u53ca\u8bbf\u95ee\u9891\u7387\u9650\u5236/","text":"\u8ba4\u8bc1 \u8ba4\u8bc1\u7684\u4f5c\u7528\u662f\u544a\u77e5api\u662f\u90a3\u4e2a\u7528\u6237\u5728\u8bf7\u6c42\u3002 \u9700\u8981\u65b0\u5efa\u4e00\u4e2aUserInfo\u7684Model\u3002 \u524d\u540e\u7aef\u4e0d\u5206\u79bb\u9879\u76ee\u53ef\u4ee5\u7528Form\u4e0eModelForm\u4ee3\u66ff\u3002 \u8ba4\u8bc1\u7c7b\u7684\u7b80\u5355\u5199\u6cd5 from rest_framework.authentication import BaseAuthentication from rest_framework.exceptions import AuthenticationFailed from user import models class MyAuth(BaseAuthentication): def authenticate(self, request): # \u901a\u8fc7\u552f\u4e00\u6807\u8bc6\u627e\u5230\u7528\u6237 token = request.query_params.get('token') user_obj = models.User.objects.filter(token=token).first() if user_obj: # \u8fd4\u56de\uff1a\u7b2c\u4e00\u4e2a\u662f\u7528\u6237\u5bf9\u8c61\uff0c\u7b2c\u4e8c\u4e2a\u662ftoken\u7684\u503c return user_obj, token raise AuthenticationFailed('\u8ba4\u8bc1\u5931\u8d25') \u5168\u5c40\u9ed8\u8ba4\u914d\u7f6e:\u6240\u6709\u7c7b\u90fd\u8fdb\u884c\u8ba4\u8bc1 REST_FRAMEWORK = { # \u540e\u9762\u662f\u8ba4\u8bc1\u7c7b\u5728\u9879\u76ee\u4e2d\u7684\u4f4d\u7f6e\u7684\u8def\u5f84 \"DEFAULT_AUTHENTICATION_CLASSES\": ['user.auth.MyAuth'] } \u89c6\u56fe\u4e2d\u5355\u72ec\u914d\u7f6e \u6ce8\u610f\uff1a\u89c6\u56fe\u4e2d\u7684\u914d\u7f6e\u4f1a\u201c\u8986\u76d6\u201d\u5168\u5c40\u9ed8\u8ba4\u914d\u7f6e\uff0c \u5982\u679c\u5728\u89c6\u56fe\u4e2d\u8bbe\u7f6e\u4e3a\u7a7a\u5217\u8868\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7c7b\u5c31\u4e0d\u8fdb\u884c\u8ba4\u8bc1\u4e86\uff01 from user.auth import MyAuth class TestView(APIView): # \u914d\u7f6e\u8ba4\u8bc1\u7684\u7c7b\uff0c\u6ce8\u610f\u653e\u5728\u5217\u8868\u4e2d authentication_classes = [MyAuth] def get(self, request): return Response({'msg': ok'}) \u6743\u9650 \u6743\u9650\u7ec4\u4ef6\u7684\u4f5c\u7528\u662f\uff1a\u6821\u9a8c\u5f53\u524d\u8bbf\u95ee\u7684\u7528\u6237\u80fd\u5426\u83b7\u53d6\u5230\u6b63\u786e\u7684\u7ed3\u679c\u3002 \u7279\u522b\u6ce8\u610f\uff1a \u6743\u9650\u7ec4\u4ef6\u7684\u4f7f\u7528\u662f\u5efa\u7acb\u5728\u8ba4\u8bc1\u7ec4\u4ef6\u6821\u9a8c\u6210\u529f\u7684\u524d\u63d0\u4e0b\u7684\uff01 \u5982\u679c\u7528\u6237\u6ca1\u6709\u767b\u5f55\uff0c\u6b64\u65f6\u5b83\u662f\u4e00\u4e2a\u201c\u533f\u540d\u7528\u6237\u201d\uff0c\u533f\u540d\u7528\u6237\u53ea\u80fd\u8bbf\u95ee\u4e0d\u7528\u767b\u5f55\u7684\u9875\u9762\u4ee5\u53ca\u8fdb\u884c\u76f8\u5173\u7684\u64cd\u4f5c\u3002 \u6743\u9650\u7c7b\u7684\u7b80\u5355\u5199\u6cd5 from rest_framework.permissions import BasePermission class VipPermission(BasePermission): # \u9519\u8bef\u7684\u63d0\u793a message = '\u6ca1\u6709\u8bbf\u95ee\u6743\u9650\uff0c\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458' def has_permission(self, request, view): # \u8fd9\u91cc\u5176\u5b9e\u53ef\u4ee5\u8ddf\u201c\u6743\u9650\u7ec4\u4ef6\u201d\u8054\u7cfb\u8d77\u6765~\u901a\u8fc7\u7528\u6237\u5bf9\u8c61\u8fde\u7eed\u8de8\u8868\u627e\u5230\u8def\u7531\uff0c\u8fdb\u884c\u6743\u9650\u7684\u6821\u9a8c if not request.auth: # \u6ca1\u6709\u8ba4\u8bc1\u5c31\u6ca1\u6709\u6743\u9650 return False # \u8fd9\u91cc\u505a\u4e86\u7b80\u5355\u7684\u6821\u9a8c\uff0c\u5176\u5b9e\u53ef\u4ee5\u8ddf\u6743\u9650\u7ec4\u4ef6\u8054\u7cfb\u8d77\u6765\u7684 if request.user.vip: return True else: return False \u5168\u5c40\u9ed8\u8ba4\u914d\u7f6e:\u6240\u6709\u7c7b\u90fd\u8fdb\u884c\u6743\u9650\u6821\u9a8c REST_FRAMEWORK = { \u3000\u3000 # \u6821\u9a8c\u3000 \"DEFAULT_AUTHENTICATION_CLASSES\": ['user.auth.MyAuth'], \u3000\u3000 # \u6743\u9650 \"DEFAULT_PERMISSION_CLASSES\":['user.permission.VipPermission'] } \u89c6\u56fe\u4e2d\u5355\u72ec\u914d\u7f6e \u6ce8\u610f\uff1a\u89c6\u56fe\u4e2d\u7684\u914d\u7f6e\u4f1a\u201c\u8986\u76d6\u201d\u5168\u5c40\u9ed8\u8ba4\u914d\u7f6e\uff01\u5982\u679c\u5728\u89c6\u56fe\u4e2d\u8bbe\u7f6e\u4e3a\u7a7a\u5217\u8868\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7c7b\u5c31\u4e0d\u8fdb\u884c\u6743\u9650\u6821\u9a8c\u4e86\uff01 from user.permission import VipPermission class TestView(APIView): # authentication_classes = [] permission_classes = [VipPermission] \u9891\u7387\u9650\u5236 \u987e\u540d\u601d\u4e49\uff0c\u8fd9\u4e2a\u7ec4\u4ef6\u662f\u7528\u6765\u9650\u5236\u7528\u6237\u8bbf\u95ee\u7f51\u7ad9\u7684\u9891\u7387\u7684\u3002 \u4e00\u3001\u81ea\u5b9a\u4e49\u8bbf\u95ee\u9891\u7387\u9650\u5236\u7684\u7c7b\uff1a from rest_framework.throttling import BaseThrottle,SimpleRateThrottle import time from rest_framework import exceptions visit_record = {} class VisitThrottle(BaseThrottle): # \u9650\u5236\u8bbf\u95ee\u65f6\u95f4 VISIT_TIME = 10 VISIT_COUNT = 3 # \u5b9a\u4e49\u65b9\u6cd5 \u65b9\u6cd5\u540d\u548c\u53c2\u6570\u4e0d\u80fd\u53d8 def allow_request(self, request, view): # \u83b7\u53d6\u767b\u5f55\u4e3b\u673a\u7684id id = request.META.get('REMOTE_ADDR') self.now = time.time() if id not in visit_record: visit_record[id] = [] self.history = visit_record[id] # \u9650\u5236\u8bbf\u95ee\u65f6\u95f4 while self.history and self.now - self.history[-1] > self.VISIT_TIME: self.history.pop() # \u6b64\u65f6 history\u4e2d\u53ea\u4fdd\u5b58\u4e86\u6700\u8fd110\u79d2\u949f\u7684\u8bbf\u95ee\u8bb0\u5f55 if len(self.history) >= self.VISIT_COUNT: return False else: self.history.insert(0, self.now) return True def wait(self): return self.history[-1] + self.VISIT_TIME - self.now 1.\u5728\u5168\u5c40\u4e2d\u8fdb\u884c\u7684\u5168\u5c40\u914d\u7f6e REST_FRAMEWORK = { \u3000\u3000 # \u6821\u9a8c\u3000 \"DEFAULT_AUTHENTICATION_CLASSES\": ['user.auth.MyAuth'], \u3000\u3000 # \u6743\u9650 \"DEFAULT_PERMISSION_CLASSES\":['user.permission.VipPermission'], \u3000\u3000# \u9891\u7387\u9650\u5236 \u3000\u3000\"DEFAULT_THROTTLE_CLASSES\":[\"user.throttles.VisitThrottle\",] } 2.\u89c6\u56fe\u4e2d\u8fdb\u884c\u7684\u5c40\u90e8\u914d\u7f6e from user.throttles import * class BookViewSet(generics.ListCreateAPIView): throttle_classes = [VisitThrottle,] queryset = Book.objects.all() serializer_class = BookSerializers \u4e8c\u3001Django\u4e2d\u81ea\u5e26\u7684\u8bbf\u95ee\u9891\u7387\u9650\u5236\u7684\u7c7b 1.\u914d\u7f6e REST_FRAMEWORK = { # \u8ba4\u8bc1 \"DEFAULT_AUTHENTICATION_CLASSES\": ['user.auth.MyAuth'], # \u6743\u9650 \"DEFAULT_PERMISSION_CLASSES\":['user.permission.VipPermission'] # \u9891\u7387 \"DEFAULT_THROTTLE_CLASSES\": [ # \u5904\u7406\u7684\u7c7b 'user.throttle.MyThrottle', ], 'DEFAULT_THROTTLE_RATES': { # \u89c6\u56fe \"xxxxx\": '5/m', \"x1\": '1/s', } } REST_FRAMEWORK = { \"DEFAULT_AUTHENTICATION_CLASSES\": ['user.auth.MyAuth'], \"DEFAULT_PERMISSION_CLASSES\":['user.permission.VipPermission'] \"DEFAULT_THROTTLE_CLASSES\": [ 'user.throttle.MyThrottle2', ], 'DEFAULT_THROTTLE_RATES': { \"xxxxx\": '5/m', \"x1\": '1/s', } } 2.\u89c6\u56fe\u4e2d\u8c03\u7528 class TestView(APIView): throttle_scope = 'x1' def get(self, request): return Response({'msg': 'ok'}) class Test2View(APIView): throttle_scope = 'xxxxx' def get(self, request): return Response({'msg': 'ok'})","title":"\u8ba4\u8bc1\u3001\u6743\u9650\u53ca\u8bbf\u95ee\u9891\u7387\u9650\u5236\u7b80\u4ecb"},{"location":"DRF\u76f8\u5173/\u8ba4\u8bc1\u3001\u6743\u9650\u53ca\u8bbf\u95ee\u9891\u7387\u9650\u5236/#_1","text":"\u8ba4\u8bc1\u7684\u4f5c\u7528\u662f\u544a\u77e5api\u662f\u90a3\u4e2a\u7528\u6237\u5728\u8bf7\u6c42\u3002 \u9700\u8981\u65b0\u5efa\u4e00\u4e2aUserInfo\u7684Model\u3002 \u524d\u540e\u7aef\u4e0d\u5206\u79bb\u9879\u76ee\u53ef\u4ee5\u7528Form\u4e0eModelForm\u4ee3\u66ff\u3002 \u8ba4\u8bc1\u7c7b\u7684\u7b80\u5355\u5199\u6cd5 from rest_framework.authentication import BaseAuthentication from rest_framework.exceptions import AuthenticationFailed from user import models class MyAuth(BaseAuthentication): def authenticate(self, request): # \u901a\u8fc7\u552f\u4e00\u6807\u8bc6\u627e\u5230\u7528\u6237 token = request.query_params.get('token') user_obj = models.User.objects.filter(token=token).first() if user_obj: # \u8fd4\u56de\uff1a\u7b2c\u4e00\u4e2a\u662f\u7528\u6237\u5bf9\u8c61\uff0c\u7b2c\u4e8c\u4e2a\u662ftoken\u7684\u503c return user_obj, token raise AuthenticationFailed('\u8ba4\u8bc1\u5931\u8d25') \u5168\u5c40\u9ed8\u8ba4\u914d\u7f6e:\u6240\u6709\u7c7b\u90fd\u8fdb\u884c\u8ba4\u8bc1 REST_FRAMEWORK = { # \u540e\u9762\u662f\u8ba4\u8bc1\u7c7b\u5728\u9879\u76ee\u4e2d\u7684\u4f4d\u7f6e\u7684\u8def\u5f84 \"DEFAULT_AUTHENTICATION_CLASSES\": ['user.auth.MyAuth'] } \u89c6\u56fe\u4e2d\u5355\u72ec\u914d\u7f6e \u6ce8\u610f\uff1a\u89c6\u56fe\u4e2d\u7684\u914d\u7f6e\u4f1a\u201c\u8986\u76d6\u201d\u5168\u5c40\u9ed8\u8ba4\u914d\u7f6e\uff0c \u5982\u679c\u5728\u89c6\u56fe\u4e2d\u8bbe\u7f6e\u4e3a\u7a7a\u5217\u8868\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7c7b\u5c31\u4e0d\u8fdb\u884c\u8ba4\u8bc1\u4e86\uff01 from user.auth import MyAuth class TestView(APIView): # \u914d\u7f6e\u8ba4\u8bc1\u7684\u7c7b\uff0c\u6ce8\u610f\u653e\u5728\u5217\u8868\u4e2d authentication_classes = [MyAuth] def get(self, request): return Response({'msg': ok'})","title":"\u8ba4\u8bc1"},{"location":"DRF\u76f8\u5173/\u8ba4\u8bc1\u3001\u6743\u9650\u53ca\u8bbf\u95ee\u9891\u7387\u9650\u5236/#_2","text":"\u6743\u9650\u7ec4\u4ef6\u7684\u4f5c\u7528\u662f\uff1a\u6821\u9a8c\u5f53\u524d\u8bbf\u95ee\u7684\u7528\u6237\u80fd\u5426\u83b7\u53d6\u5230\u6b63\u786e\u7684\u7ed3\u679c\u3002 \u7279\u522b\u6ce8\u610f\uff1a \u6743\u9650\u7ec4\u4ef6\u7684\u4f7f\u7528\u662f\u5efa\u7acb\u5728\u8ba4\u8bc1\u7ec4\u4ef6\u6821\u9a8c\u6210\u529f\u7684\u524d\u63d0\u4e0b\u7684\uff01 \u5982\u679c\u7528\u6237\u6ca1\u6709\u767b\u5f55\uff0c\u6b64\u65f6\u5b83\u662f\u4e00\u4e2a\u201c\u533f\u540d\u7528\u6237\u201d\uff0c\u533f\u540d\u7528\u6237\u53ea\u80fd\u8bbf\u95ee\u4e0d\u7528\u767b\u5f55\u7684\u9875\u9762\u4ee5\u53ca\u8fdb\u884c\u76f8\u5173\u7684\u64cd\u4f5c\u3002 \u6743\u9650\u7c7b\u7684\u7b80\u5355\u5199\u6cd5 from rest_framework.permissions import BasePermission class VipPermission(BasePermission): # \u9519\u8bef\u7684\u63d0\u793a message = '\u6ca1\u6709\u8bbf\u95ee\u6743\u9650\uff0c\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458' def has_permission(self, request, view): # \u8fd9\u91cc\u5176\u5b9e\u53ef\u4ee5\u8ddf\u201c\u6743\u9650\u7ec4\u4ef6\u201d\u8054\u7cfb\u8d77\u6765~\u901a\u8fc7\u7528\u6237\u5bf9\u8c61\u8fde\u7eed\u8de8\u8868\u627e\u5230\u8def\u7531\uff0c\u8fdb\u884c\u6743\u9650\u7684\u6821\u9a8c if not request.auth: # \u6ca1\u6709\u8ba4\u8bc1\u5c31\u6ca1\u6709\u6743\u9650 return False # \u8fd9\u91cc\u505a\u4e86\u7b80\u5355\u7684\u6821\u9a8c\uff0c\u5176\u5b9e\u53ef\u4ee5\u8ddf\u6743\u9650\u7ec4\u4ef6\u8054\u7cfb\u8d77\u6765\u7684 if request.user.vip: return True else: return False \u5168\u5c40\u9ed8\u8ba4\u914d\u7f6e:\u6240\u6709\u7c7b\u90fd\u8fdb\u884c\u6743\u9650\u6821\u9a8c REST_FRAMEWORK = { \u3000\u3000 # \u6821\u9a8c\u3000 \"DEFAULT_AUTHENTICATION_CLASSES\": ['user.auth.MyAuth'], \u3000\u3000 # \u6743\u9650 \"DEFAULT_PERMISSION_CLASSES\":['user.permission.VipPermission'] } \u89c6\u56fe\u4e2d\u5355\u72ec\u914d\u7f6e \u6ce8\u610f\uff1a\u89c6\u56fe\u4e2d\u7684\u914d\u7f6e\u4f1a\u201c\u8986\u76d6\u201d\u5168\u5c40\u9ed8\u8ba4\u914d\u7f6e\uff01\u5982\u679c\u5728\u89c6\u56fe\u4e2d\u8bbe\u7f6e\u4e3a\u7a7a\u5217\u8868\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7c7b\u5c31\u4e0d\u8fdb\u884c\u6743\u9650\u6821\u9a8c\u4e86\uff01 from user.permission import VipPermission class TestView(APIView): # authentication_classes = [] permission_classes = [VipPermission]","title":"\u6743\u9650"},{"location":"DRF\u76f8\u5173/\u8ba4\u8bc1\u3001\u6743\u9650\u53ca\u8bbf\u95ee\u9891\u7387\u9650\u5236/#_3","text":"\u987e\u540d\u601d\u4e49\uff0c\u8fd9\u4e2a\u7ec4\u4ef6\u662f\u7528\u6765\u9650\u5236\u7528\u6237\u8bbf\u95ee\u7f51\u7ad9\u7684\u9891\u7387\u7684\u3002 \u4e00\u3001\u81ea\u5b9a\u4e49\u8bbf\u95ee\u9891\u7387\u9650\u5236\u7684\u7c7b\uff1a from rest_framework.throttling import BaseThrottle,SimpleRateThrottle import time from rest_framework import exceptions visit_record = {} class VisitThrottle(BaseThrottle): # \u9650\u5236\u8bbf\u95ee\u65f6\u95f4 VISIT_TIME = 10 VISIT_COUNT = 3 # \u5b9a\u4e49\u65b9\u6cd5 \u65b9\u6cd5\u540d\u548c\u53c2\u6570\u4e0d\u80fd\u53d8 def allow_request(self, request, view): # \u83b7\u53d6\u767b\u5f55\u4e3b\u673a\u7684id id = request.META.get('REMOTE_ADDR') self.now = time.time() if id not in visit_record: visit_record[id] = [] self.history = visit_record[id] # \u9650\u5236\u8bbf\u95ee\u65f6\u95f4 while self.history and self.now - self.history[-1] > self.VISIT_TIME: self.history.pop() # \u6b64\u65f6 history\u4e2d\u53ea\u4fdd\u5b58\u4e86\u6700\u8fd110\u79d2\u949f\u7684\u8bbf\u95ee\u8bb0\u5f55 if len(self.history) >= self.VISIT_COUNT: return False else: self.history.insert(0, self.now) return True def wait(self): return self.history[-1] + self.VISIT_TIME - self.now 1.\u5728\u5168\u5c40\u4e2d\u8fdb\u884c\u7684\u5168\u5c40\u914d\u7f6e REST_FRAMEWORK = { \u3000\u3000 # \u6821\u9a8c\u3000 \"DEFAULT_AUTHENTICATION_CLASSES\": ['user.auth.MyAuth'], \u3000\u3000 # \u6743\u9650 \"DEFAULT_PERMISSION_CLASSES\":['user.permission.VipPermission'], \u3000\u3000# \u9891\u7387\u9650\u5236 \u3000\u3000\"DEFAULT_THROTTLE_CLASSES\":[\"user.throttles.VisitThrottle\",] } 2.\u89c6\u56fe\u4e2d\u8fdb\u884c\u7684\u5c40\u90e8\u914d\u7f6e from user.throttles import * class BookViewSet(generics.ListCreateAPIView): throttle_classes = [VisitThrottle,] queryset = Book.objects.all() serializer_class = BookSerializers \u4e8c\u3001Django\u4e2d\u81ea\u5e26\u7684\u8bbf\u95ee\u9891\u7387\u9650\u5236\u7684\u7c7b 1.\u914d\u7f6e REST_FRAMEWORK = { # \u8ba4\u8bc1 \"DEFAULT_AUTHENTICATION_CLASSES\": ['user.auth.MyAuth'], # \u6743\u9650 \"DEFAULT_PERMISSION_CLASSES\":['user.permission.VipPermission'] # \u9891\u7387 \"DEFAULT_THROTTLE_CLASSES\": [ # \u5904\u7406\u7684\u7c7b 'user.throttle.MyThrottle', ], 'DEFAULT_THROTTLE_RATES': { # \u89c6\u56fe \"xxxxx\": '5/m', \"x1\": '1/s', } } REST_FRAMEWORK = { \"DEFAULT_AUTHENTICATION_CLASSES\": ['user.auth.MyAuth'], \"DEFAULT_PERMISSION_CLASSES\":['user.permission.VipPermission'] \"DEFAULT_THROTTLE_CLASSES\": [ 'user.throttle.MyThrottle2', ], 'DEFAULT_THROTTLE_RATES': { \"xxxxx\": '5/m', \"x1\": '1/s', } } 2.\u89c6\u56fe\u4e2d\u8c03\u7528 class TestView(APIView): throttle_scope = 'x1' def get(self, request): return Response({'msg': 'ok'}) class Test2View(APIView): throttle_scope = 'xxxxx' def get(self, request): return Response({'msg': 'ok'})","title":"\u9891\u7387\u9650\u5236"},{"location":"Django\u6838\u5fc3/ORM\u591a\u8868/","text":"\u8868\u5b57\u6bb5\u53ca\u8868\u5173\u7cfb (1)\u4f5c\u8005\u6a21\u578b\uff1a\u4e00\u4e2a\u4f5c\u8005\u6709\u59d3\u540d\u548c\u5e74\u9f84\u3002 (2)\u4f5c\u8005\u8be6\u7ec6\u6a21\u578b\uff1a\u628a\u4f5c\u8005\u7684\u8be6\u60c5\u653e\u5230\u8be6\u60c5\u8868\uff0c\u5305\u542b\u751f\u65e5\uff0c\u624b\u673a\u53f7\uff0c\u5bb6\u5ead\u4f4f\u5740\u7b49\u4fe1\u606f\u3002 # \u4f5c\u8005\u8be6\u60c5\u6a21\u578b\u548c\u4f5c\u8005\u6a21\u578b\u4e4b\u95f4\u662f\u4e00\u5bf9\u4e00\u7684\u5173\u7cfb\uff08one-to-one\uff09\u3002 (3)\u51fa\u7248\u793e\u6a21\u578b\uff1a\u51fa\u7248\u793e\u6709\u540d\u79f0\uff0c\u6240\u5728\u57ce\u5e02\u4ee5\u53caemail\u3002 (4)\u4e66\u7c4d\u6a21\u578b\uff1a \u4e66\u7c4d\u6709\u4e66\u540d\u548c\u51fa\u7248\u65e5\u671f. # \u4e00\u672c\u4e66\u53ef\u80fd\u4f1a\u6709\u591a\u4e2a\u4f5c\u8005\uff0c\u4e00\u4e2a\u4f5c\u8005\u4e5f\u53ef\u4ee5\u5199\u591a\u672c\u4e66\uff0c\u6240\u4ee5\u4f5c\u8005\u548c\u4e66\u7c4d\u7684\u5173\u7cfb\u5c31\u662f\u591a\u5bf9\u591a\u7684\u5173\u8054\u5173\u7cfb(many-to-many); # \u4e00\u672c\u4e66\u53ea\u5e94\u8be5\u7531\u4e00\u4e2a\u51fa\u7248\u5546\u51fa\u7248\uff0c\u6240\u4ee5\u51fa\u7248\u5546\u548c\u4e66\u7c4d\u662f\u4e00\u5bf9\u591a\u5173\u8054\u5173\u7cfb(one-to-many)\u3002 (5)\u4e66\u8ddf\u4f5c\u8005\u662f\u591a\u5bf9\u591a\u5173\u7cfb\uff0c\u5229\u7528Django\u7684\u5efa\u8868\u8bed\u53e5\u6211\u4eec\u53ef\u4ee5\u65b0\u751f\u6210\u4e00\u5f20\u201c\u5173\u7cfb\u8868\u201d\u2014\u2014book2author \u5728app\u7684models.py\u6587\u4ef6\u4e2d\u521b\u5efa\u6a21\u578b\u7c7b \u9700\u8981\u8bb0\u4f4f\u4e0b\u9762\u8fd9\u51e0\u4e2a\u7ed3\u8bba \uff1a (1)\u4e00\u65e6\u786e\u7acb\u8868\u5173\u7cfb\u662f\u4e00\u5bf9\u591a\uff1a\u5efa\u7acb\u4e00\u5bf9\u591a\u5173\u7cfb\u2014\u2014\u2014\u2014\u5728\u591a\u5bf9\u5e94\u7684\u8868\u4e2d\u521b\u5efa\u5173\u8054\u5b57\u6bb5\u3002 (2)\u4e00\u65e6\u786e\u7acb\u8868\u5173\u7cfb\u662f\u591a\u5bf9\u591a\uff1a\u5efa\u7acb\u591a\u5bf9\u591a\u5173\u7cfb\u2014\u2014\u2014\u2014\u521b\u5efa\u7b2c\u4e09\u5f20\u5173\u7cfb\u8868\u2014\u2014\u2014\u2014id\u548c\u4e24\u4e2a\u5173\u8054\u5b57\u6bb5\u3002 (3)\u4e00\u65e6\u786e\u5b9a\u8868\u5173\u7cfb\u662f\u4e00\u5bf9\u4e00\uff1a\u5efa\u7acb\u4e00\u5bf9\u4e00\u5173\u7cfb\u2014\u2014\u2014\u2014\u5728\u4e24\u5f20\u8868\u7684\u4efb\u610f\u4e00\u5f20\u8868\u4e2d\u5efa\u7acb\u5173\u8054\u5b57\u6bb5+Unique\u3002 (4)\u5176\u5b9e\u4e0a\u9762\u8bf4\u7684\u201c\u5173\u8054\u5b57\u6bb5\u201d\u5c31\u662f\u5916\u952e\u2014\u2014foreign key\u3002 \u5bf9\u5e94\u7684\u6a21\u578b\u7c7b\u7684\u521b\u5efa\u5982\u4e0b\uff1a from django.db import models #\u51fa\u7248\u793e class Publish(models.Model): #\u4e3b\u952e nid = models.AutoField(primary_key=True) name = models.CharField(max_length=55) city = models.CharField(max_length=55) #email\u6709\u7279\u5b9a\u7684\u683c\u5f0f\uff01 email = models.EmailField() #\u4f5c\u8005\u8be6\u7ec6 class AuthorDetail(models.Model): nid = models.AutoField(primary_key=True) #\u65e5\u671f\u7684\u683c\u5f0f birthday = models.DateField() #\u624b\u673a\u53f7 telephone = models.BigIntegerField() addr = models.CharField(max_length=55) #\u4f5c\u8005\u8868 class Author(models.Model): nid = models.AutoField(primary_key=True) name = models.CharField(max_length=55) #\u5e74\u9f84\uff0cint\u7c7b\u578b\u7684\u5c0f\u6570\u5b57\u5c31\u53ef\u4ee5 age = models.IntegerField() #\u7531\u4e8e\u4f5c\u8005\u4e0e\u4f5c\u8005\u8be6\u7ec6\u8868\u662f\u4e00\u5bf9\u4e00\u7684\u5173\u7cfb\uff1a\u6240\u4ee5\u9009\u62e9\u5728\u4f5c\u8005\u8868\u4e2d\u8fd9\u6837\u5efa\u7acb\u5916\u952e #\u6ce8\u610f\u8fd9\u91cc\u8fd8\u662f\u53ea\u5199authordetail\u5c31\u53ef\u4ee5\u4e86\uff0c_id \u7a0b\u5e8f\u4f1a\u81ea\u52a8\u7ed9\u52a0\u7684\uff01 #\u6ce8\u610f\u8fd9\u91ccon_delete\u4e00\u5b9a\u8981\u52a0\uff01\u800c\u4e14to\u540e\u9762\u7684\u8868\u7684\u540d\u5b57\u8981\u4e60\u60ef\u6027\u7684\u52a0\u4e0a1 #\u4e00\u5bf9\u4e00\uff01 authordetail = models.OneToOneField(to='AuthorDetail',to_field='nid',on_delete=models.CASCADE) #\u4e66\u7c4d class Book(models.Model): nid = models.AutoField(primary_key=True) title = models.CharField(max_length=55) #\u51fa\u7248\u65e5\u671f\uff0c\u65e5\u671f\u683c\u5f0f pub_date = models.DateField() #\u4ef7\u683c\uff0c\u6700\u5927\u4f4d\u65705\u4f4d\uff0c\u5c0f\u6570\u540e\u4fdd\u7559\u4e24\u4f4d price = models.DecimalField(max_digits=5,decimal_places=2) #\u4e0e\u51fa\u7248\u793e\u8868\u5173\u8054\u7684\u5b57\u6bb5\u2014\u2014publish_id #\u6ce8\u610f\u81ea\u5df1\u5199\u7684\u65f6\u5019\u53ea\u5199publish\u5c31\u53ef\u4ee5\u4e86\uff01Django\u4f1a\u81ea\u52a8\u8865\u4e0a_id #\u6ce8\u610f\uff1aon_delete\u5fc5\u987b\u8981\u52a0\u4e0a\uff01\uff01\uff01\u800c\u4e14to\u540e\u9762\u7684\u8868\u7684\u540d\u5b57\u8981\u4e60\u60ef\u6027\u7684\u52a0\u4e0a1 #\u6ce8\u610f null=true\u8868\u793a\u5141\u8bb8\u4e3a\u7a7a\u503c # \u4e00\u5bf9\u591a\uff01 publish = models.ForeignKey(to='Publish',to_field='nid',on_delete=models.CASCADE,null=True) #\u4e66\u8ddf\u4f5c\u8005\u662f\u591a\u5bf9\u591a\u7684\u5173\u7cfb\u3002\u7406\u8bba\u4e0a\u9700\u8981\u65b0\u5efa\u4e00\u5f20\u5173\u7cfb\u8868\u3002 #\u4f46\u662f\u5229\u7528Django\u4e0b\u9762\u7684\u8bed\u53e5\u65e2\u53ef\u4ee5\u65b0\u5efa\u4e00\u5f20\u8868\uff0c\u53c8\u53ef\u4ee5\u5206\u522b\u5c06\u5176\u4e0e\u4e66\u7c4d\u8868\u4e0e\u4f5c\u8005\u8868\u5173\u8054\u8d77\u6765\uff01 #\u591a\u5bf9\u591a\uff01 authors = models.ManyToManyField(to='Author') \"\"\" create table book2author( id int primary_key auto_increment, book_id int,0 author_id int, foreign_key (book_id) references Book(id), foreign_key (author_id) references Author(id), ); \"\"\" Django2\u7684\u4e00\u4e2a\u95ee\u9898 \u5728Django2\u4e2d\uff0c\u5916\u952e\u5173\u8054\u7684\u90a3\u4e2a\u5c5e\u6027\u5fc5\u987b\u52a0\u4e0a on_delete=models.CASCADE \uff0c\u5426\u5219\u6570\u636e\u8fc1\u79fb\u65f6\u4f1a\u62a5\u9519\uff01 \u6570\u636e\u8fc1\u79fb \u5728terminal\u4e2d\u6267\u884c\u6570\u636e\u5e93\u7684\u8fc1\u79fb\u6307\u4ee4\uff1a python manage.py makemigrations python manage.py migrate \u67e5\u770b\u4e00\u4e0bMySQL\u4e2d\u662f\u5426\u751f\u6210\u4e86\u201c5\u201d\u5f20\u6211\u4eec\u9700\u8981\u7684\u8868\u3002 \u6ce8\u610f\u4e8b\u9879\uff1a (1)\u8868\u7684\u540d\u79f0myapp_modelName\uff0c\u662f\u6839\u636e \u6a21\u578b\u4e2d\u7684\u5143\u6570\u636e\u81ea\u52a8\u751f\u6210\u7684\uff0c\u4e5f\u53ef\u4ee5\u8986\u5199\u4e3a\u522b\u7684\u540d\u79f0 (2)id\u5b57\u6bb5\u662f\u81ea\u52a8\u6dfb\u52a0\u7684 (3)\u5bf9\u4e8e\u5916\u952e\u5b57\u6bb5\uff0cDjango \u4f1a\u5728\u5b57\u6bb5\u540d\u4e0a\u6dfb\u52a0\"_id\" \u6765\u521b\u5efa\u6570\u636e\u5e93\u4e2d\u7684\u5217\u540d (4)\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u7684CREATE TABLE SQL \u8bed\u53e5\u4f7f\u7528PostgreSQL \u8bed\u6cd5\u683c\u5f0f\uff0c\u8981\u6ce8\u610f\u7684\u662fDjango \u4f1a\u6839\u636esettings \u4e2d\u6307\u5b9a\u7684\u6570\u636e\u5e93\u7c7b\u578b\u6765\u4f7f\u7528\u76f8\u5e94\u7684SQL\u8bed\u53e5\u3002 (5)\u5b9a\u4e49\u597d\u6a21\u578b\u4e4b\u540e\uff0c\u4f60\u9700\u8981\u544a\u8bc9Django _\u4f7f\u7528_\u8fd9\u4e9b\u6a21\u578b\u3002\u4f60\u8981\u505a\u7684\u5c31\u662f\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684INSTALL_APPSZ\u4e2d\u8bbe\u7f6e\uff0c\u5728\u5176\u4e2d\u6dfb\u52a0models.py\u6240\u5728\u5e94\u7528\u7684\u540d\u79f0\u3002 (6)\u5916\u952e\u5b57\u6bb5 ForeignKey \u6709\u4e00\u4e2a null=True \u7684\u8bbe\u7f6e(\u5b83\u5141\u8bb8\u5916\u952e\u63a5\u53d7\u7a7a\u503c NULL)\uff0c\u4f60\u53ef\u4ee5\u8d4b\u7ed9\u5b83\u7a7a\u503c None \u6dfb\u52a0\u8bb0\u5f55 \u5148\u4f7f\u7528sql\u8bed\u53e5\u5728publish\u3001author\u3001authordetail\u8868\u4e2d\u52a0\u51e0\u6761\u6570\u636e\u3002 \u6279\u91cf\u521b\u5efa\u6570\u636e\u5e93\u6570\u636e book_list = [] for i in range(100): book = Book(title='book_%s'%i,price=i*i) book_list.append(book) #\u6279\u91cf\u521b\u5efa\uff1abulk_create() Book.objects.bulk_create(book_list) 1\u3001\u4e00\u5bf9\u591a\u6dfb\u52a0\u8bb0\u5f55 \u5728book\u8868\u4e2d\u65b0\u589e\u4e00\u6761\u8bb0\u5f55\uff0c\u7531\u4e8epublish\u8868\u4e0ebook\u8868\u662f\u4e00\u5bf9\u591a\u7684\u5173\u7cfb\uff0c\u5173\u8054\u5b57\u6bb5\u4e3apublish_id\uff0c\u56e0\u6b64\u6211\u4eec\u5148\u5f97\u627e\u5230\u5bf9\u5e94\u7684\u51fa\u7248\u793e\uff0c \u8fd9\u91cc\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a \u65b9\u6cd5\u4e00\uff1a publish_obj = Publish.objects.get(nid=1) Book.objects.create(title='\u91d1\u74f6',price=100,pub_date='1922-2-3',publish=publish_obj) \u65b9\u6cd5\u4e8c\uff1a Book.objects.create(title='\u91d1\u74f6',price=100,pub_date='1922-2-3',publish_id=1) \u6ce8\u610f\u7406\u89e3publish_obj: # \u67e5\u770b\u6c34\u6d52\u4f20\u4e66\u7c4d\u7684\u51fa\u7248\u793e\u5bf9\u5e94\u7684\u90ae\u7bb1\u2014\u2014\u6ce8\u610f\u8fd9\u91cc\u7684first()\uff0c\u628aQuerySet\u5bf9\u8c61\u8f6c\u5316\u4e3aObject\u5bf9\u8c61### book_obj = Book.objects.filter(title='\u6c34\u6d52\u4f20').first() # \u6ce8\u610f\u5148.publish\u518d.emali print(book_obj.publish.email) 2\u3001\u591a\u5bf9\u591a\u6dfb\u52a0\u8bb0\u5f55 \u4e66\u7c4d\u4e0e\u4f5c\u8005\u662f\u591a\u5bf9\u591a\u7684\u5173\u7cfb\u3002 \u521b\u5efa\u4e00\u4e2abook\u8bb0\u5f55\uff0c\u5c06\u4e24\u4e2a\u4f5c\u8005\u5173\u8054\u5230\u8fd9\u4e2a\u8bb0\u5f55\u4e2d\uff0c\u8fd9\u4e24\u4e2a\u4f5c\u8005\u5199\u540c\u4e00\u672c\u4e66\u3002 ##\u6ce8\u610f\u8fd9\u91cc\u7684first()\u5f97\u52a0\uff01 book_obj = Book.objects.create(title='\u4e09\u56fd\u7fa4\u82f1\u4f202',price=200,pub_date='1900-3-4',publish_id=2) whw = Author.objects.filter(nid=1).first() www = Author.objects.filter(nid=2).first() ##\u7ed1\u5b9a\u591a\u5bf9\u591a\u5173\u7cfb\u7684API\u3002 ##\u8fd9\u4e2aauthors\u5c31\u662fBook\u7c7b\u91cc\u5efa\u591a\u5bf9\u591a\u5173\u7cfb\u7684\u65f6\u5019\u7684\u90a3\u4e2a\uff1aauthors = models.ManyToManyField(to='Author') book_obj.authors.add(whw,www) ##\u6ce8\u610f\u5982\u679c\u4ece\u65e2\u6709\u7684\u6570\u636e\u91cc\u627e\u5f97\u8fd9\u6837\u5199\uff0cauthors\u5b57\u6bb5\u5728Book\u7c7b\u4e2d\uff0c\u56e0\u6b64\u5fc5\u987b\u662fBook\u7684\u5bf9\u8c61\u53bbadd Author\u5bf9\u8c61 ##\u540e\u9762\u52a0\u4e0afirst()\u5c06QuerySet\u5bf9\u8c61\u8f6c\u6362\u6210model\u5bf9\u8c61 author1 = Author.objects.filter(name='whw').first() author2 = Author.objects.filter(name='www').first() book1 = Book.objects.filter(title='\u91d1\u74f6').first() book1.authors.add(author1,author2) ##\u89e3\u9664\u591a\u5bf9\u591a\u5173\u7cfb\uff0c\u6ce8\u610ffirst\u5f97\u52a0 book = Book.objects.filter(nid=4).first() ##\u6ce8\u610f\u8fd9\u91cc\u76842\u4ee3\u8868author_id book.authors.remove(2) ##\u4e5f\u53ef\u4ee5\u79fb\u9664\u6240\u6709\u7684\u5173\u7cfb\uff1a book.authors.clear() ##\u91cd\u70b9\u6765\u4e86\uff01\u2014\u2014\u2014\u2014all() ##\u4e0e\u8fd9\u672c\u4e66\u5173\u8054\u7684\u6240\u6709\u4f5c\u8005\u5bf9\u8c61\u96c6\u5408\u2014\u2014QuerySet\u5bf9\u8c61\u3002[obj1,obj2,......] ret = book.authors.all() print(ret) ###\u67e5\u8be2\u4e3b\u952e\u4e3a4\u7684\u4e66\u7c4d\u7684\u6240\u6709\u4f5c\u8005\u7684\u540d\u5b57### book_o = Book.objects.filter(nid=4).first() rets = book_o.authors.all().values('name') print(rets) ###\u6ce8\u610f\u4e0a\u9762\u7684\u7ed3\u679c\u662f\uff1a<QuerySet [{'name': 'whw'}, {'name': 'www'}]> \u591a\u5bf9\u591a\u4fee\u6539\u4e0e\u5220\u9664 # \u5c06\u67d0\u4e2a\u7279\u5b9a\u7684\u5bf9\u8c61\u4ece\u88ab\u5173\u8054\u5bf9\u8c61\u96c6\u5408\u4e2d\u53bb\u9664\u3002 book_obj.authors.remove(*[1\uff0c2])\uff0c\u5c06\u591a\u5bf9\u591a\u7684\u5173\u7cfb\u6570\u636e\u5220\u9664 book_obj.authors.remove() # \u6e05\u7a7a\u88ab\u5173\u8054\u5bf9\u8c61\u96c6\u5408 book_obj.authors.clear() # \u5148\u6e05\u7a7a\u518d\u8bbe\u7f6e book_obj.authors.set() ### \u5220\u9664\u5b9e\u4f8b book_obj = models.Book.objects.filter(nid=4)[0] #\u5c06\u7b2c\u4e09\u5f20\u8868\u4e2d\u7684\u8fd9\u4e2abook_obj\u5bf9\u8c61\u5bf9\u5e94\u7684\u90a3\u4e2a\u4f5c\u8005id\u4e3a2\u7684\u90a3\u6761\u8bb0\u5f55\u5220\u9664 # book_obj.authors.remove(2) # book_obj.authors.clear() #\u5148\u6e05\u9664\u6389\u6240\u6709\u7684\u5173\u7cfb\u6570\u636e\uff0c\u7136\u540e\u53ea\u7ed9\u8fd9\u4e2a\u4e66\u5bf9\u8c61\u7ed1\u5b9a\u8fd9\u4e2aid\u4e3a2\u7684\u4f5c\u8005\uff0c\u6240\u4ee5\u53ea\u5269\u4e0b\u4e00\u6761\u8bb0\u5f55 # \u6bd4\u5982\u7528\u6237\u7f16\u8f91\u6570\u636e\u7684\u65f6\u5019\uff0c\u9009\u62e9\u4f5c\u8005\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u90a3\u4e48\u9700\u8981\u91cd\u65b0\u9009\u62e9\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u5148\u6e05\u7a7a\uff0c\u7136\u540e\u518d\u91cd\u65b0\u7ed1\u5b9a\u5173\u7cfb\u6570\u636e, # \u6ce8\u610f\u8fd9\u91cc\u5199\u7684\u662f\u5b57\u7b26\u4e32\uff0c\u6570\u5b57\u7c7b\u578b\u4e0d\u53ef\u4ee5 # book_obj.authors.set('2') #\u8fd9\u4e48\u5199\u4e5f\u53ef\u4ee5\uff0c\u4f46\u662f\u6ce8\u610f\u5217\u8868\u4e2d\u7684\u5143\u7d20\u662f\u5b57\u7b26\u4e32\uff0c\u5217\u8868\u524d\u9762\u6ca1\u6709*\uff0c\u4e4b\u524d\u6211\u6d4b\u8bd5\u6709*\uff0c\u53ef\u80fd\u662f\u7248\u672c\u7684\u95ee\u9898 book_obj.authors.set(['1',]) \u591a\u8868\u64cd\u4f5c\u4e4b\u57fa\u4e8e\u5bf9\u8c61\u7684\u8de8\u8868\u67e5\u8be2 \u57fa\u4e8e\u5bf9\u8c61\u7684\u8de8\u8868\u67e5\u8be2\u6700\u7ec8\u7ffb\u8bd1\u6210SQL\u8bed\u53e5\u90fd\u662f \u5b50\u67e5\u8be2 \u3002 \u6570\u636e\u5e93\u4e2d\u7684\u4e00\u4e2a\u8868\u8bb0\u5f55\u5176\u5b9e\u5c31\u662f\u7b5b\u9009\u51fa\u6765\u7684\u201c\u5bf9\u8c61\u201d\u7684\u4e00\u4e2a\u5bf9\u8c61\u53ef\u4ee5\u5229\u7528 .\u64cd\u4f5c\u7b26 \u64cd\u4f5c\u3002 values()\u7b49\u540c\u4e8eselect\u3002 filter()\u7b49\u540c\u4e8ewhere\u3002 \u4e00\u5bf9\u591a\u67e5\u8be2\uff08Book\u4e0ePublish\uff09 \u4ee5Book\u8868\u4e3a\u57fa\u51c6\uff0c\u7531\u4e8e\u6211\u4eec\u5c06\u5173\u8054\u7684\u5b57\u6bb5\u5b9a\u4e49\u5728\u4e86Book\u8868\u4e2d\uff0c\u4e5f\u5c31\u662f\u8bf4\u201c\u5173\u8054\u5b57\u6bb5\u201d\u5728Book\u8868\u4e2d\uff0c\u6240\u4ee5\u4eceBook\u5f00\u59cb\u67e5\u662f\u201c\u6b63\u5411\u201d\uff0c\u4ecePublish\u5f00\u59cb\u67e5\u662f\u201c\u53cd\u5411\u201d\u3002 Book\u7c7b\u4e2d\u662f\u8fd9\u6837\u5199\u7684\uff1a publish = models.ForeignKey(to='Publish',to_field='nid',on_delete=models.CASCADE,null=True) Book book_obj.publish >> Publish \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014 <<< publish_obj.book_set.all()#QuerySet author_boj1,author_obj2,......] \u6b63\u5411\u67e5\u8be2\u6309\u5b57\u6bb5\u2014\u2014publish #\u67e5\u8be2\u4e3b\u952e\u4e3a1\u7684\u4e66\u7c4d\u7684\u51fa\u7248\u793e\u7684\u57ce\u5e02 book_obj = Book.objects.filter(pk=1).first() #\u6b63\u5411\u67e5\u8be2\u6309\u5b57\u6bb5 ##\u6ce8\u610f\u8fd9\u91cc\u7684book_obj.publish\u2014\u2014\u2014\u2014\u662f\u4e3b\u952e\u4e3a1\u7684\u4e66\u7c4d\u5bf9\u8c61\u5173\u8054\u7684\u51fa\u7248\u793e\u5bf9\u8c61 ret = book_obj.publish.city print(ret) #\u540c\u6837\u7684\uff1a\u201c\u897f\u6e38\u8bb0\u201d\u4e66\u7c4d\u7684\u51fa\u7248\u793e\u7684\u540d\u5b57\uff1a book_o = Book.objects.filter(title='\u6c34\u6d52\u4f20').first() ret = book_o.publish.name print(ret) \u53cd\u5411\u67e5\u8be2\u6309\u8868\u540d\u5c0f\u5199_set.all()\uff1abook_set.all() #\u67e5\u8be2\u201c\u82f9\u679c\u51fa\u7248\u793e\u201d\u51fa\u7248\u8fc7\u7684\u6240\u6709\u4e66\u7c4d\u7684\u4e66\u540d publish_obj = Publish.objects.filter(name='\u82f9\u679c\u51fa\u7248\u793e').first() #\u53cd\u5411\u67e5\u8be2\u6309\u8868\u540d\u5c0f\u5199_set ##\u6ce8\u610f publish.book_set.all() \u2014\u2014\u2014\u2014\u662f\u82f9\u679c\u51fa\u7248\u793e\u5173\u8054\u7684\u6240\u6709\u201c\u4e66\u7c4d\u5bf9\u8c61\u201d\u7684\u96c6\u5408 book_list = publish.book_set.all() for book_obj in book_list: print(book_obj.title) \u591a\u5bf9\u591a\u67e5\u8be2(Book\u4e0eAuthor\uff0c\u5916\u52a0book_authors\u8868) \u4ee5Book\u8868\u4e3a\u57fa\u51c6\uff0c\u7531\u4e8e\u6211\u4eec\u5c06\u5173\u8054\u7684\u5b57\u6bb5\u5b9a\u4e49\u5728\u4e86Book\u8868\u4e2d\uff0c\u4e5f\u5c31\u662f\u8bf4\u201c\u5173\u8054\u5b57\u6bb5\u201d\u5728Book\u8868\u4e2d\uff0c\u6240\u4ee5\u4eceBook\u5f00\u59cb\u67e5\u662f\u201c\u6b63\u5411\u201d\uff0c\u4eceAuthor\u5f00\u59cb\u67e5\u662f\u201c\u53cd\u5411\u201d\u3002 Book\u7c7b\u4e2d\u662f\u8fd9\u6837\u5199\u7684\uff1a authors = models.ManyToManyField(to='Author') Book book_obj.authors.all() >> Author #QuerySet[author_boj1,author_obj2,...] \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014 <<< author_obj.book_set.all() \u6b63\u5411\u67e5\u8be2\u6309\u5b57\u6bb5\u2014authors #\u201c\u4e09\u56fd\u7fa4\u82f1\u201d\u6240\u6709\u7684\u4f5c\u8005\u53ca\u624b\u673a\u53f7 ##\u5148\u201c\u8fc7\u6ee4\u201d book_obj = Book.objects.filter(title='\u4e09\u56fd\u7fa4\u82f1').first() ##\u6b63\u5411\u67e5\u8be2\u6309\u5b57\u6bb5 ##\u6ce8\u610f\u8fd9\u91cc\u5f97\u5230\u7684 authors \u662f\u4e0e\u8fd9\u672c\u4e66\u5173\u8054\u7684\u6240\u6709 \u4f5c\u8005\u5bf9\u8c61\u7684\u96c6\u5408 authors = book_obj.authors.all() for author_obj in authors: name = author_obj.name ##\u624b\u673a\u53f7\u5728\u201c\u4f5c\u8005\u8be6\u7ec6\u8868\u201d\u4e2d\uff0c\u800c\u4e14\u201c\u4f5c\u8005\u8868\u201d\u76f8\u5bf9\u4e8e\u201c\u4f5c\u8005\u8be6\u7ec6\u8868\u201d\u662f\u6b63\u5411\uff0c\u5173\u8054\u5b57\u6bb5\u4e3aauthordetail telephone = author_obj.authordetail.telephone print('\u4f5c\u8005:%s\uff0c\u624b\u673a\u53f7:%s'%(name,telephone)) \u53cd\u5411\u67e5\u8be2\u6309\u8868\u540d_set.all()\u2014book_set.all() #\u67e5\u8be2\u4f5c\u8005whw\u51fa\u7248\u8fc7\u7684\u6240\u6709\u4e66\u7c4d\u7684\u540d\u5b57 ##\u5148\u201c\u8fc7\u6ee4\u201d author_obj = Author.objects.filter(name='whw').first() ##\u53cd\u5411\u67e5\u8be2\u6309\u8868\u540d\u5c0f\u5199_set ##\u6ce8\u610f\u8fd9\u91cc\u5f97\u5230\u7684\u662f\u8be5\u4f5c\u8005\u5199\u8fc7\u7684\u4e66\u7684\u5bf9\u8c61\u7684\u96c6\u5408 book_list = author_obj.book_set.all() for book_obj in book_list: print(book_obj.title) \u4e00\u5bf9\u4e00\u67e5\u8be2(Author\u4e0eAuthorDetail) \u4ee5Author\u8868\u4e3a\u57fa\u51c6\uff0c\u7531\u4e8e\u6211\u4eec\u5c06\u5173\u8054\u7684\u5b57\u6bb5\u5b9a\u4e49\u5728\u4e86Author\u8868\u4e2d\uff0c\u4e5f\u5c31\u662f\u8bf4\u201c\u5173\u8054\u5b57\u6bb5\u201d\u5728Author\u8868\u4e2d\uff0c\u6240\u4ee5\u4eceAuthor\u5f00\u59cb\u67e5\u662f\u201c\u6b63\u5411\u201d\uff0c\u4eceAuthorDetail\u5f00\u59cb\u67e5\u662f\u201c\u53cd\u5411\u201d\u3002 Author\u7c7b\u4e2d\u662f\u8fd9\u6837\u5199\u7684\uff1a authordetail = models.OneToOneField(to='AuthorDetail',to_field='nid',on_delete=models.CASCADE) Author author_obj.authordetail >> AuthorDetail \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014 <<< author_detail_obj.author_set \u6b63\u5411\u67e5\u8be2\u6309\u5b57\u6bb5 #\u67e5\u8be2\u4f5c\u8005whw\u7684\u7535\u8bdd author = Author.objects.filter(name='whw').first() ##\u6b63\u5411\u67e5\u8be2\u6309\u5b57\u6bb5 ret = author.authordetail.telephone print(ret) \u53cd\u5411\u67e5\u8be2\u6309\u8868\u540d\u5c0f\u5199 #\u67e5\u8be2\u7535\u8bdd\u662f12312312\u7684\u4f5c\u8005\u540d\u5b57 (1)##\u6ce8\u610f\u8fd9\u91cc\u7684 authordetail_list \u662f\u4e00\u4e2aQuerySet\u5bf9\u8c61\uff0c\u540e\u9762\u6ca1\u6709\u7528first authordetail_list = AuthorDetail.objects.filter(telephone=12312312) for obj in authordetail_list: #\u53cd\u5411\u67e5\u8be2\u7528\u8868\u540d\u5c0f\u5199 print(obj.author.name) (2)\u4e5f\u53ef\u4ee5\u5728\u540e\u9762\u52a0first() add = AuthorDetail.objects.filter(telephone=12312312).first() #\u53cd\u5411\u67e5\u8be2\u6309\u8868\u540d\u5c0f\u5199\uff1a print(add.author.name) \u591a\u8868\u64cd\u4f5c\u4e4b\u57fa\u4e8e\u53cc\u4e0b\u5212\u7ebf\u7684\u8de8\u8868\u67e5\u8be2 1\u3001\u57fa\u4e8e\u53cc\u4e0b\u5212\u7ebf\u7684\u8de8\u8868\u67e5\u8be2\u6700\u7ec8\u7ffb\u8bd1\u6210SQL\u8bed\u53e5\u90fd\u662f\u201cjoin\u67e5\u8be2\u201d \u3002 2\u3001\u6b63\u5411\u67e5\u8be2\u6309\u5b57\u6bb5\uff0c\u53cd\u5411\u67e5\u8be2\u6309\u8868\u540d\u5c0f\u5199\uff1a\u7528\u6765\u544a\u8bc9ORM\u5f15\u64cejoin\u54ea\u5f20\u8868\u3002 3\u3001\u57fa\u4e8e\u53cc\u4e0b\u5212\u7ebf\u7684\u8de8\u8868\u67e5\u8be2\u5148join\u6210\u4e00\u5f20\u8868\uff0c\u518d\u6267\u884c\u201c\u5355\u8868\u67e5\u8be2\u201d\u3002 4\u3001values()\u7b49\u540c\u4e8eselect\uff1bfilter()\u7b49\u540c\u4e8ewhere\u3002 \u4e00\u5bf9\u591a\u5173\u7cfb \u6b63\u5411\u67e5\u8be2\u6309\u5b57\u6bb5\uff0c\u53cd\u5411\u67e5\u8be2\u6309\u8868\u540d\u5c0f\u5199\u7528\u6765\u544a\u8bc9ORM\u5f15\u64cejoin\u54ea\u5f20\u8868\u3002 \u67e5\u8be2\u6c34\u6d52\u4f20\u8fd9\u672c\u4e66\u7684\u51fa\u7248\u793e\u7684\u540d\u5b57\uff1aBook\u4e0ePublish\u3002 SQL\u8bed\u53e5\u8fd9\u6837\u5199\uff1a select publish.name from book inner join publish on book.publish_id = publish.nid where book.title = '\u6c34\u6d52\u4f20' \u6b63\u5411\u67e5\u8be2 \u4ee5Book\u4e3a\u57fa\u51c6\uff0c\u56e0\u4e3a\u201c\u5173\u8054\u5b57\u6bb5\u201d\u5728Book\u7c7b\u4e2d Book\u91cc\u9762\u8fd9\u6837\u5b9a\u4e49\u7684\uff1a publish = models.ForeignKey(to='Publish',to_field='nid',on_delete=models.CASCADE,null=True) \u56e0\u6b64\u8fd9\u6837\u8fdb\u884c\u6b63\u5411\u67e5\u8be2 values()\u7b49\u540c\u4e8eselect\uff1bfilter()\u7b49\u540c\u4e8ewhere\u3002 ret = Book.objects.filter(title='\u6c34\u6d52\u4f20').values('publish__name') print(ret) #<QuerySet [{'publish__name': '333'}]> \u53cd\u5411\u67e5\u8be2 \u4ecePublish\u67e5Book ##\u53cd\u5411\u67e5\u8be2\u6309\u8868\u540d\u5c0f\u5199~ ## values()\u7b49\u540c\u4e8eselect\uff1bfilter()\u7b49\u540c\u4e8ewhere ret = Publish.objects.filter(book__title='\u6c34\u6d52\u4f20').values('name') print(ret) #<QuerySet [{'name': '333'}]> \u591a\u5bf9\u591a\u5173\u7cfb \u67e5\u8be2\u4e09\u56fd\u7fa4\u82f1\u8fd9\u672c\u4e66\u6240\u6709\u4f5c\u8005\u7684\u540d\u5b57 Book\u3001Author\u3001book_authors\u8868\u3002 SQL\u8bed\u53e5\u8fd9\u6837\u5199 select author.name from book inner join book_authors on book.nid = book_authors.book_id inner join author on book_authors.author_id = author.nid where book.title = '\u4e09\u56fd\u7fa4\u82f1' \u6b63\u5411\u67e5\u8be2 \u4ee5Book\u4e3a\u57fa\u51c6\uff0c\u56e0\u4e3a\u201c\u5173\u8054\u5b57\u6bb5\u201d\u5728Book\u7c7b\u4e2d ##Book\u91cc\u9762\u662f\u8fd9\u6837\u5b9a\u4e49\u7684\uff1a authors = models.ManyToManyField(to='Author') ##\u6b63\u5411\u67e5\u8be2\u65b9\u6cd5\uff1a ##\u901a\u8fc7Book\u8868join\u4e0e\u5176\u5173\u8054\u7684Author\u8868\u2014\u2014\u2014\u2014\u6309\u5b57\u6bb5authors\u901a\u77e5ORM\u5f15\u64ce\u53bbjoin \u8868book_authors\u4e0e\u8868author\u3002 ##\u6b63\u5411\u67e5\u8be2\u6309\u5b57\u6bb5 ret = Book.objects.filter(title='\u4e09\u56fd\u7fa4\u82f1').values('authors__name') print(ret) #<QuerySet [{'authors__name': 'whw'}, {'authors__name': 'www'}]> \u53cd\u5411\u67e5\u8be2 \u4ee5AUthor\u4e3a\u57fa\u51c6\u53cd\u67e5 ##\u53cd\u5411\u67e5\u8be2\u7684\u65b9\u6cd5\uff1a ##\u901a\u8fc7Author\u8868join\u4e0e\u5176\u5173\u8054\u7684Book\u8868\u2014\u2014\u2014\u2014\u6309\u8868\u540d\u5c0f\u5199book\u901a\u77e5ORM\u5f15\u64ce\u53bbjoin \u8868book_authors\u4e0e\u8868book\u3002 ##\u53cd\u5411\u67e5\u8be2\u6309\u8868\u540d\u5c0f\u5199 ret = Author.objects.filter(book__title='\u4e09\u56fd\u7fa4\u82f1').values('name') print(ret) #<QuerySet [{'name': 'whw'}, {'name': 'www'}]> \u4e00\u5bf9\u4e00\u5173\u7cfb Author\u4e0eAuthorDetail \u67e5\u8be2whw\u7684\u624b\u673a\u53f7 \u6b63\u5411\u67e5\u8be2 \u6b63\u5411\u67e5\u8be2\u6309\u5b57\u6bb5\u2014\u2014##\u901a\u8fc7Author\u8868join\u4e0e\u5176\u5173\u8054\u7684AUthorDetail\u8868\uff0c\u6309\u5b57\u6bb5authordetail\u901a\u77e5ORM\u5f15\u64ce\u53bbjoin \u8868authordetail ret = Author.objects.filter(name='whw').values('authordetail__telephone') print(ret) #<QuerySet [{'authordetail__telephone': 123123123}]> \u53cd\u5411\u67e5\u8be2 \u53cd\u5411\u67e5\u8be2\u6309\u8868\u540d\u5c0f\u5199\u2014\u2014##\u901a\u8fc7AuthorDetail\u8868join\u4e0e\u5176\u5173\u8054\u7684AUthor\u8868\uff0c\u6309\u8868\u540d\u5c0f\u5199author\u901a\u77e5ORM\u5f15\u64ce\u53bbjoin \u8868author ret = AuthorDetail.objects.filter(author__name='whw').values('telephone') print(ret) #<QuerySet [{'telephone': 123123123}]> \u591a\u8868\u64cd\u4f5c\u4e4b\u8fde\u7eed\u8de8\u8868\u4e0erelated_name \u8fd9\u91cc\u4ee5\u51e0\u4e2a\u4f8b\u5b50\u6765\u8fdb\u884c\u8bb2\u89e3\u3002 \u4f8b1 \u67e5\u8be2\u5730\u5740\u4ee5'as'\u5f00\u5934\u7684\u4f5c\u8005\u51fa\u7248\u8fc7\u7684\u6240\u6709\u4e66\u7c4d\u540d\u79f0\u4ee5\u53ca\u4e66\u7c4d\u7684\u51fa\u7248\u793e\u540d\u79f0\u3002 (1) \u901a\u8fc7Book\u8868join\u8868AuthorDetail\uff0c\u4f46Book\u4e0eAuthorDetail\u65e0\u5173\u8054\uff0c\u56e0\u6b64\u5fc5\u987b\u4ee5Author\u4e3a\u6865\u6881 \u8fde\u7eed\u8de8\u8868 \uff1a ##\u6ce8\u610f\u8fd9\u91cc\u662f value_list ret = Book.objects.filter(authors__authordetail__addr__startswith='as').values('title','publish__name') print(ret) #<QuerySet [{'title': '\u4e09\u56fd\u7fa4\u82f1', 'publish__name': '333'}]> (2) \u4ee5Author\u8868\u4e3a\u57fa\u51c6\uff0c\u5b83\u4e0eAuthorDetail\u8868\u6709\u5173\u8054\uff0c\u4f46\u662f\u4e0ePublish\u65e0\u5173\u8054\uff0c\u56e0\u6b64\u5f97\u4ee5Book\u8868\u4e3a\u6865\u6881 ret = Author.objects.filter(authordetail__addr__startswith='as').values('book__title','book__publish__name') print(ret) #<QuerySet [{'book__title': '\u4e09\u56fd\u7fa4\u82f1', 'book__publish__name': '333'}]> \u4f8b2 \u67e5\u8be2\u4eba\u6c11\u51fa\u7248\u793e\u51fa\u7248\u8fc7\u7684\u6240\u6709\u4e66\u7c4d\u7684\u540d\u5b57\u4ee5\u53ca\u4f5c\u8005\u7684\u59d3\u540d\u3002 (1)\u6b63\u5411\u67e5\u8be2 ##Book\u76f8\u5bf9\u4e8ePublish\u4e0eAuthor\u90fd\u662f\u201c\u6b63\u5411\u7684\u201d ##\u6ce8\u610f\u7528 values_list ret = Book.objects.filter(publish__name='\u4eba\u6c11\u51fa\u7248\u793e').values_list('title','authors__name') print(ret) (2)\u53cd\u5411\u67e5\u8be2 \u8fc7\u7a0b\u8bf4\u660e A_\u9996\u5148\uff0cfilter\u7b49\u4ef7\u4e8ewhere\uff0c\u6211\u4eec\u4ee5Publish\u4e3a\u57fa\u51c6\u67e5\uff0c\u56e0\u6b64filter\u91cc\u76f4\u63a5\u5199name='\u4eba\u6c11\u51fa\u7248\u793e'\u5373\u53ef\uff1b B_\u7136\u540e\uff0c\u7531\u4e8ePublish\u8ddfAuthor\u6ca1\u6709\u76f4\u63a5\u8054\u7cfb\uff0c\u6211\u4eec\u5f97\u501f\u52a9Book\u4f5c\u4e3a\u6865\u6881\uff1a (B1)\u8981\u627e\u4e66\u7c4d\u7684\u540d\u5b57\uff0c\u7531\u4e8ePublish\u67e5Book\u662f\u53cd\u5411\u67e5\u8be2\uff0c\u201c\u7528\u8868\u660e\u5c0f\u5199\u201d\u2014\u2014\u2014\u2014\u56e0\u6b64\u201c\u4e66\u7c4d\u540d\u5b57\u201d\u662f book__title (B2)\u800c\u8981\u627e\u4f5c\u8005\u540d\u5b57\uff0c\u7531\u4e8eBook\u627eAuthor\u662f\u6b63\u5411\u67e5\u8be2\uff0c\u201c\u7528\u5b57\u6bb5\u201d\u2014\u2014\u2014\u2014\u56e0\u6b64\u201c\u5728Book\u7684\u57fa\u7840\u4e0a\u201d\u6211\u4eec\u7528\uff1abook__authors__name\u3002 \u67e5\u8be2\u8bed\u53e5 ##\u6ce8\u610f\u7528 values_list ret = Publish.objects.filter(name='\u4eba\u6c11\u51fa\u7248\u793e').values__list('book__title','book__authors__name') print(ret) related_name \u201c\u53cd\u5411\u67e5\u8be2\u201d\u65f6\uff0c\u5982\u679c\u5b9a\u4e49\u4e86related_name \uff0c\u5219\u7528related_name\u66ff\u6362\u8868\u540d \u4f8b\u5982\u5728Book\u4e2d\u8fd9\u6837\u5b9a\u4e49\uff1a publish = models.ForeignKey(to='Publish',to_field='nid',on_delete=models.CASCADE,null=True,related_name='booklist') \u90a3\u4e48\uff1a\u67e5\u8be2\u4eba\u6c11\u51fa\u7248\u793e\u51fa\u7248\u8fc7\u7684\u6240\u6709\u4e66\u7c4d\u7684\u540d\u5b57\u4e0e\u4ef7\u683c(\u4e00\u5bf9\u591a) (1)\u6b63\u5411\u67e5\u8be2\u201c\u7528\u4e0d\u5230\u201d ret = Book.objects.filter(publish__name='\u4eba\u6c11\u51fa\u7248\u793e').values('title','price') print(ret) (2)\u53cd\u5411\u67e5\u8be2\u7528\u5230related_names ret = Publish.objects.filter(name='\u4eba\u6c11\u51fa\u7248\u793e').values('booklist__title','booklist__price') \u591a\u8868\u64cd\u4f5c\u4e4b\u805a\u5408\u67e5\u8be2 \u7528\u6cd5 (1)\u5bfc\u5165django.db.models \u4e2d\u7684Avg,Max,Min,Count\u7b49\u6a21\u5757 (2)\u627e\u51fa\u6765\u6240\u6709\u5bf9\u8c61 Book.objects.all() \u540e \u7528aggregate()\u65b9\u6cd5 \u4e3e\u4f8b \u67e5\u8be2\u6240\u6709\u4e66\u7c4d\u7684\u5e73\u5747\u4ef7\u683c\u4ee5\u53ca\u6700\u9ad8\u7684\u4ef7\u683c from django.db.models import Avg,Max,Min,Count ret = Book.objects.all().aggregate(avg_price=Avg('price'),max_price=Max('price')) print(ret) #{'avg_price': 160.0, 'max_price': Decimal('200.00')} \u591a\u8868\u64cd\u4f5c\u4e4bF\u67e5\u8be2\u4e0eQ\u67e5\u8be2 \u62d3\u5c55\u65e2\u6709\u7684Book\u6a21\u578b \u5728Book\u8868\u4e2d\u65b0\u589e\u4e24\u4e2a\u5b57\u6bb5\uff1aread_num\u4e0econtent_num\u3002\u7531\u4e8e\u4e4b\u524d\u5df2\u7ecf\u52a0\u4e86\u6570\u636e\u4e86\uff0c\u60f3\u8981\u5728\u6709\u6570\u636e\u7684\u8868\u4e2d\u518d\u65b0\u589e\u5b57\u6bb5\uff0c\u90a3\u4e48\u9700\u8981\u4e3a\u4e4b\u524d\u7684\u8bb0\u5f55\u8bbe\u7f6edefault\u503c\u3002 \u5728Book\u7c7b\u4e2d\u65b0\u589e\uff1a class Book(models.Model): ##\u524d\u9762\u7684\u5b57\u6bb5\u7565## ##\u65b0\u589e\u4e24\u4e2a\u5b57\u6bb5 ##\u52a0\u4e0a default=0 \u6dfb\u52a0\u8fd9\u4e24\u4e2a\u5b57\u6bb5\u540e\uff0c\u4e4b\u524d\u7684\u8bb0\u5f55\u7684\u8fd9\u4e24\u4e2a\u5b57\u6bb5\u90fd\u9ed8\u8ba4\u4e3a0 read_num = models.IntegerField(default=0) content_num = models.IntegerField(default=0) \u7136\u540e\uff0c\u5728Terminal\u4e2d\u8fd0\u884c\uff1a python3 manage.py makemigrations python3 manage.py migrate \u5c31\u53ef\u4ee5\u5c06\u4e0a\u9762\u4e24\u4e2a\u5b57\u6bb5\u6dfb\u52a0\u5230book\u8868\u4e2d\u3002 F\u67e5\u8be2 \u8bf4\u660e 1\u3001\u5728\u4e0a\u9762\u6240\u6709\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u6784\u9020\u7684\u8fc7\u6ee4\u5668\u90fd\u53ea\u662f\u5c06\u5b57\u6bb5\u503c\u4e0e\u67d0\u4e2a\u5e38\u91cf\u505a\u6bd4\u8f83\u3002\u5982\u679c\u6211\u4eec\u8981\u5bf9\u4e24\u4e2a\u5b57\u6bb5\u7684\u503c\u505a\u6bd4\u8f83\uff0c\u90a3\u8be5\u600e\u4e48\u505a\u5462\uff1f 2\u3001Django\u63d0\u4f9bF()\u6765\u505a\u8fd9\u6837\u7684\u6bd4\u8f83\u3002F()\u7684\u5b9e\u4f8b\u53ef\u4ee5\u5728\u67e5\u8be2\u4e2d\u5f15\u7528\u5b57\u6bb5\uff0c\u6765\u6bd4\u8f83\u540c\u4e00\u4e2amodel\u5b9e\u4f8b\u4e2d\u4e24\u4e2a\u4e0d\u540c\u5b57\u6bb5\u7684\u503c\u3002 3\u3001\u9700\u8981\u5148\u5f15\u5165F\u3002 from django.db.models import F \u4e3e\u4f8b 1 \u5b57\u6bb5\u95f4\u7684\u6bd4\u8f83 \u67e5\u8be2\u540c\u4e00\u5f20\u8868\u4e2d\u8bc4\u8bba\u6570\u5927\u4e8e\u70b9\u8d5e\u6570\u7684\u4e66\u7c4d\u7684\u540d\u5b57\uff1a\u67e5\u8be2content_num\u5927\u4e8eread_num\u7684\u4e66\u7c4d\u7684\u540d\u5b57 ret = Book.objects.filter(content_num__gt=F('read_num')).values('title') print(ret) #<QuerySet [{'title': '\u6c34\u6d52\u4f20'}, {'title': '\u91d1\u74f6'}, {'title': '\u4e09\u56fd\u7fa4\u82f1\u4f20'}, {'title': '\u4e09\u56fd\u7fa4\u82f1'}]> 2 \u7edf\u4e00\u4fee\u6539\uff1a\u4e0eupdate\u7ed3\u5408 2-1 \u5c06\u6bcf\u4e2a\u4e66\u7c4d\u7684\u4ef7\u683c\u52a010\u5143 Book.objects.all().update(price=F('price')+10) 2-2 \u7ed9\u4ef7\u683c\u5c0f\u4e8e10\u5143\u7684\u4e66\u7c4d\u7684\u4ef7\u683c\u589e\u52a010\u5143 Book.objects.filter(price__lt=10).update(price=F('price')+10) Q\u67e5\u8be2 \u8bf4\u660e 1\u3001filter() \u7b49\u65b9\u6cd5\u4e2d\u7684\u5173\u952e\u5b57\u53c2\u6570\u67e5\u8be2\u90fd\u662f\u4e00\u8d77\u8fdb\u884c\u201cAND\u201d \u7684\u3002 \u5982\u679c\u4f60\u9700\u8981\u6267\u884c\u66f4\u590d\u6742\u7684\u67e5\u8be2\uff08\u4f8b\u5982OR\u8bed\u53e5\uff09\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528Q\u5bf9\u8c61\u3002 2\u3001\u9700\u8981\u5148\u5f15\u5165Q from django.db.models import Q \u4e3e\u4f8b 1 \u67e5\u627e\u4e66\u540d\u4ee5\u201c\u4e09\u56fd\u201d\u5f00\u5934\u6216\u8005\u4ef7\u683c\u7b49\u4e8e100\u7684\u4e66\u7c4d\u540d\u79f0 ret = Book.objects.filter(Q(title__startswith='\u4e09\u56fd') | Q(price=100)).values('title') print(ret) #<QuerySet [{'title': '\u4e09\u56fd\u7fa4\u82f1\u4f20'}, {'title': '\u4e09\u56fd\u7fa4\u82f1'}]> 2 \u67e5\u627e\u4e66\u540d\u4e0d\u4ee5\u201c\u4e09\u56fd\u201d\u5f00\u5934\u7684\u4e66\u7c4d\u540d\u79f0 ret = Book.objects.filter(~Q(title__startswith='\u4e09')).values('title') print(ret) #<QuerySet [{'title': '\u91d1\u74f6'}, {'title': '\u6c34\u6d52\u4f20'}, {'title': '\u91d1\u74f6'}]> 3 Q\u67e5\u8be2\u4e0e\u952e\u503c\u5bf9\u7684\u5173\u7cfb\uff1a\u5148\u5199Q\u518d\u5199\u952e\u503c\u5bf9\uff0c\u800c\u4e14\u662f\u201c\u4e14\u201d\u7684\u5173\u7cfb\uff1a ret = Book.objects.filter(~Q(title__startswith='\u4e09'),title__startswith='\u6c34').values('title') print(ret) #<QuerySet [{'title': '\u6c34\u6d52\u4f20'}]> \u591a\u8868\u64cd\u4f5c\u4e4b\u591a\u8868\u4e0b\u7684\u5206\u7ec4\u67e5\u8be2 \u591a\u8868\u4e0b\u7684\u5206\u7ec4\u67e5\u8be2\u8bed\u6cd5(\u6ce8\u610f\u662fvalues\u4e0d\u662ffilter)\uff1a # \u6ce8\u610f\u4ee5\u54ea\u5f20\u8868\u4e2d\u7684\u5b57\u6bb5\u5206\u7ec4\uff0c\u54ea\u4e00\u5f20\u8868\u5c31\u662f\u201c\u540e\u8868\u201d \u6bcf\u4e00\u4e2a\u540e\u8868\u6a21\u578b.objects.values('pk').annotate(\u805a\u5408\u51fd\u6570('\u5173\u8054\u8868__\u7edf\u8ba1\u5b57\u6bb5')).values('\u8868\u6a21\u578b\u7684\u6240\u6709\u5b57\u6bb5\u4ee5\u53ca\u7edf\u8ba1\u5b57\u6bb5') \u53e6\u5916\u4e00\u79cd\u5199\u6cd5\uff1a \u6bcf\u4e00\u4e2a\u540e\u8868\u6a21\u578b.objects.annotate(\u805a\u5408\u51fd\u6570('\u5173\u8054\u8868__\u7edf\u8ba1\u5b57\u6bb5')).values('\u8868\u6a21\u578b\u7684\u6240\u6709\u5b57\u6bb5\u4ee5\u53ca\u7edf\u8ba1\u5b57\u6bb5') # \u8fd9\u79cd\u5199\u6cd5\u7b49\u4ef7\u4e8e \u6bcf\u4e00\u4e2a\u540e\u8868\u6a21\u578b.objects.all().annotate(\u805a\u5408\u51fd\u6570('\u5173\u8054\u8868__\u7edf\u8ba1\u5b57\u6bb5')).values('\u8868\u6a21\u578b\u7684\u6240\u6709\u5b57\u6bb5\u4ee5\u53ca\u7edf\u8ba1\u5b57\u6bb5') \u4e00\u4e9b\u591a\u8868\u5206\u7ec4\u67e5\u8be2\u7684\u7ec3\u4e60 1\u3001\u67e5\u8be2\u6bcf\u4e00\u4e2a\u51fa\u7248\u793e\u51fa\u7248\u7684\u4e66\u7c4d\u7684\u4e2a\u6570 ##\u540e\u9762\u8fd9\u5f15\u5165\u6bb5\u7701\u7565 from django.db.models import Avg,Max,Min,Count ##\u67e5\u8be2\u6bcf\u4e00\u4e2a\u51fa\u7248\u793e\u51fa\u7248\u7684\u4e66\u7c4d\u7684\u4e2a\u6570 ret = Book.objects.values('publish_id').annotate(Cout('title')) print(ret) 2\u3001\u67e5\u8be2\u6bcf\u4e00\u4e2a\u51fa\u7248\u793e\u7684\u540d\u79f0\u4ee5\u53ca\u51fa\u7248\u4e66\u7c4d\u7684\u4e2a\u6570 (1)SQL\u65b9\u6cd5\uff1a select publish.name,Count('title') from book inner join publish on book.publish_id = publish.nid group by publish_nid (2)annotate\u65b9\u6cd5\uff1a \u6ce8\u610f\uff0cPublish\u67e5Book\u662f\u53cd\u5411\u67e5\u8be2\uff0c\u6309\u201c\u8868\u540d\u201d A: ret = Publish.objects.values('name').annotate(count=Count('book__title')) print(ret) #<QuerySet [{'name': '\u82f9\u679c\u51fa\u7248\u793e', 'count': 1}, {'name': '333', 'count': 4}]> ############################################################################### B: ret = Publish.objects.values('name').annotate(count=Count('book__title')).values('name', 'count') print(ret) #<QuerySet [{'name': '\u82f9\u679c\u51fa\u7248\u793e', 'count': 1}, {'name': '333', 'count': 4}]> 3\u3001\u67e5\u8be2\u6bcf\u4e00\u4e2a\u4f5c\u8005\u7684\u540d\u5b57\u4ee5\u53ca\u51fa\u7248\u8fc7\u7684\u4e66\u7c4d\u7684\u6700\u9ad8\u4ef7\u683c (1)SQL\u65b9\u6cd5 select author.name,Max(book.price) from book inner join book_authors on book.nid = book_authors.book_id inner join author on autohr.nid = book_authors.author_id group by author.nid (2)annotate\u65b9\u6cd5 \u6ce8\u610f\u4e3b\u952e\u53ef\u4ee5\u7528 pk \u8868\u793a\uff1bAuthor\u627eBook\u662f\u201c\u53cd\u5411\u67e5\u8be2\u201d\u6309\u8868\u540d\u5c0f\u5199 ret = Author.objects.values('pk').annotate(max_price=Max('book__price')).values('name','max_price') print(ret) #<QuerySet[{'name':'whw','max_price':Decimal('200.00')},{'name':'www','max_price': Decimal('200.00')}]> 4\u3001\u67e5\u8be2\u6bcf\u4e00\u4e2a\u4e66\u7c4d\u7684\u540d\u79f0\u4ee5\u53ca\u5bf9\u5e94\u7684\u4f5c\u8005\u7684\u4e2a\u6570 \u201c\u6b63\u5411\u67e5\u8be2\u6309\u5b57\u6bb5\u201d ret = Book.objects.values('pk').annotate(c=Count('authors__name')).values('title','c') print(ret) # <QuerySet [{'title': '\u4e09\u56fd\u7fa4\u82f1\u4f20', 'c': 1}, {'title': '\u4e09\u56fd\u7fa4\u82f1', 'c': 2}, {'title': '\u91d1\u74f6', 'c': 0}, {'title': '\u6c34\u6d52\u4f20', 'c': 0}, {'title': '\u91d1\u74f6', 'c': 0}]> 5\u3001\u7edf\u8ba1\u6bcf\u4e00\u672c\u4ee5\u201c\u4e09\u201d\u5b57\u5f00\u5934\u7684\u4e66\u7c4d\u7684\u4f5c\u8005\u7684\u4e2a\u6570\uff1aBook\u627eAuthor\u662f\u591a\u5bf9\u591a\uff0c\u800c\u4e14\u662f\u201c\u6b63\u5411\u67e5\u8be2\u201d\u6309\u5b57\u6bb5 ret = Book.objects.filter(title__startswith='\u4e09').annotate(c=Count('authors__name')).values('title','c') print(ret) #<QuerySet [{'title': '\u4e09\u56fd\u7fa4\u82f1\u4f20', 'c': 1}, {'title': '\u4e09\u56fd\u7fa4\u82f1', 'c': 2}]> 6\u3001\u7edf\u8ba1\u4e0d\u6b62\u4e00\u4e2a\u4f5c\u8005\u7684\u4e66\u7c4d\u7684\u540d\u5b57\uff1aBook\u627eAuthor\u662f\u591a\u5bf9\u591a\uff0c\u800c\u4e14\u662f\u201c\u6b63\u5411\u67e5\u8be2\u201d\u6309\u5b57\u6bb5 ret = Book.objects.values('pk').annotate(num_authors=Count('authors__name')).filter(num_authors__gt=1).values('title','num_authors') print(ret) 7\u3001\u6839\u636e\u4e00\u672c\u56fe\u4e66\u4f5c\u8005\u6570\u91cf\u7684\u591a\u5c11\u5bf9\u67e5\u8be2\u96c6 QuerySet\u8fdb\u884c\u6392\u5e8f Book.objects.annotate(num_authors=Count('authors')).order_by('num_authors') 8\u3001\u67e5\u8be2\u5404\u4e2a\u4f5c\u8005\u51fa\u7684\u4e66\u7684\u603b\u4ef7\u683c #\u6309author\u8868\u7684\u6240\u6709\u5b57\u6bb5 group by queryResult=Author.objects .annotate(SumPrice=Sum(\"book__price\")) \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"name\",\"SumPrice\") print(queryResult)","title":"04 \u6a21\u578b\u5c422-ORM\u591a\u8868\u64cd\u4f5c"},{"location":"Django\u6838\u5fc3/ORM\u591a\u8868/#_1","text":"(1)\u4f5c\u8005\u6a21\u578b\uff1a\u4e00\u4e2a\u4f5c\u8005\u6709\u59d3\u540d\u548c\u5e74\u9f84\u3002 (2)\u4f5c\u8005\u8be6\u7ec6\u6a21\u578b\uff1a\u628a\u4f5c\u8005\u7684\u8be6\u60c5\u653e\u5230\u8be6\u60c5\u8868\uff0c\u5305\u542b\u751f\u65e5\uff0c\u624b\u673a\u53f7\uff0c\u5bb6\u5ead\u4f4f\u5740\u7b49\u4fe1\u606f\u3002 # \u4f5c\u8005\u8be6\u60c5\u6a21\u578b\u548c\u4f5c\u8005\u6a21\u578b\u4e4b\u95f4\u662f\u4e00\u5bf9\u4e00\u7684\u5173\u7cfb\uff08one-to-one\uff09\u3002 (3)\u51fa\u7248\u793e\u6a21\u578b\uff1a\u51fa\u7248\u793e\u6709\u540d\u79f0\uff0c\u6240\u5728\u57ce\u5e02\u4ee5\u53caemail\u3002 (4)\u4e66\u7c4d\u6a21\u578b\uff1a \u4e66\u7c4d\u6709\u4e66\u540d\u548c\u51fa\u7248\u65e5\u671f. # \u4e00\u672c\u4e66\u53ef\u80fd\u4f1a\u6709\u591a\u4e2a\u4f5c\u8005\uff0c\u4e00\u4e2a\u4f5c\u8005\u4e5f\u53ef\u4ee5\u5199\u591a\u672c\u4e66\uff0c\u6240\u4ee5\u4f5c\u8005\u548c\u4e66\u7c4d\u7684\u5173\u7cfb\u5c31\u662f\u591a\u5bf9\u591a\u7684\u5173\u8054\u5173\u7cfb(many-to-many); # \u4e00\u672c\u4e66\u53ea\u5e94\u8be5\u7531\u4e00\u4e2a\u51fa\u7248\u5546\u51fa\u7248\uff0c\u6240\u4ee5\u51fa\u7248\u5546\u548c\u4e66\u7c4d\u662f\u4e00\u5bf9\u591a\u5173\u8054\u5173\u7cfb(one-to-many)\u3002 (5)\u4e66\u8ddf\u4f5c\u8005\u662f\u591a\u5bf9\u591a\u5173\u7cfb\uff0c\u5229\u7528Django\u7684\u5efa\u8868\u8bed\u53e5\u6211\u4eec\u53ef\u4ee5\u65b0\u751f\u6210\u4e00\u5f20\u201c\u5173\u7cfb\u8868\u201d\u2014\u2014book2author","title":"\u8868\u5b57\u6bb5\u53ca\u8868\u5173\u7cfb"},{"location":"Django\u6838\u5fc3/ORM\u591a\u8868/#appmodelspy","text":"\u9700\u8981\u8bb0\u4f4f\u4e0b\u9762\u8fd9\u51e0\u4e2a\u7ed3\u8bba \uff1a (1)\u4e00\u65e6\u786e\u7acb\u8868\u5173\u7cfb\u662f\u4e00\u5bf9\u591a\uff1a\u5efa\u7acb\u4e00\u5bf9\u591a\u5173\u7cfb\u2014\u2014\u2014\u2014\u5728\u591a\u5bf9\u5e94\u7684\u8868\u4e2d\u521b\u5efa\u5173\u8054\u5b57\u6bb5\u3002 (2)\u4e00\u65e6\u786e\u7acb\u8868\u5173\u7cfb\u662f\u591a\u5bf9\u591a\uff1a\u5efa\u7acb\u591a\u5bf9\u591a\u5173\u7cfb\u2014\u2014\u2014\u2014\u521b\u5efa\u7b2c\u4e09\u5f20\u5173\u7cfb\u8868\u2014\u2014\u2014\u2014id\u548c\u4e24\u4e2a\u5173\u8054\u5b57\u6bb5\u3002 (3)\u4e00\u65e6\u786e\u5b9a\u8868\u5173\u7cfb\u662f\u4e00\u5bf9\u4e00\uff1a\u5efa\u7acb\u4e00\u5bf9\u4e00\u5173\u7cfb\u2014\u2014\u2014\u2014\u5728\u4e24\u5f20\u8868\u7684\u4efb\u610f\u4e00\u5f20\u8868\u4e2d\u5efa\u7acb\u5173\u8054\u5b57\u6bb5+Unique\u3002 (4)\u5176\u5b9e\u4e0a\u9762\u8bf4\u7684\u201c\u5173\u8054\u5b57\u6bb5\u201d\u5c31\u662f\u5916\u952e\u2014\u2014foreign key\u3002 \u5bf9\u5e94\u7684\u6a21\u578b\u7c7b\u7684\u521b\u5efa\u5982\u4e0b\uff1a from django.db import models #\u51fa\u7248\u793e class Publish(models.Model): #\u4e3b\u952e nid = models.AutoField(primary_key=True) name = models.CharField(max_length=55) city = models.CharField(max_length=55) #email\u6709\u7279\u5b9a\u7684\u683c\u5f0f\uff01 email = models.EmailField() #\u4f5c\u8005\u8be6\u7ec6 class AuthorDetail(models.Model): nid = models.AutoField(primary_key=True) #\u65e5\u671f\u7684\u683c\u5f0f birthday = models.DateField() #\u624b\u673a\u53f7 telephone = models.BigIntegerField() addr = models.CharField(max_length=55) #\u4f5c\u8005\u8868 class Author(models.Model): nid = models.AutoField(primary_key=True) name = models.CharField(max_length=55) #\u5e74\u9f84\uff0cint\u7c7b\u578b\u7684\u5c0f\u6570\u5b57\u5c31\u53ef\u4ee5 age = models.IntegerField() #\u7531\u4e8e\u4f5c\u8005\u4e0e\u4f5c\u8005\u8be6\u7ec6\u8868\u662f\u4e00\u5bf9\u4e00\u7684\u5173\u7cfb\uff1a\u6240\u4ee5\u9009\u62e9\u5728\u4f5c\u8005\u8868\u4e2d\u8fd9\u6837\u5efa\u7acb\u5916\u952e #\u6ce8\u610f\u8fd9\u91cc\u8fd8\u662f\u53ea\u5199authordetail\u5c31\u53ef\u4ee5\u4e86\uff0c_id \u7a0b\u5e8f\u4f1a\u81ea\u52a8\u7ed9\u52a0\u7684\uff01 #\u6ce8\u610f\u8fd9\u91ccon_delete\u4e00\u5b9a\u8981\u52a0\uff01\u800c\u4e14to\u540e\u9762\u7684\u8868\u7684\u540d\u5b57\u8981\u4e60\u60ef\u6027\u7684\u52a0\u4e0a1 #\u4e00\u5bf9\u4e00\uff01 authordetail = models.OneToOneField(to='AuthorDetail',to_field='nid',on_delete=models.CASCADE) #\u4e66\u7c4d class Book(models.Model): nid = models.AutoField(primary_key=True) title = models.CharField(max_length=55) #\u51fa\u7248\u65e5\u671f\uff0c\u65e5\u671f\u683c\u5f0f pub_date = models.DateField() #\u4ef7\u683c\uff0c\u6700\u5927\u4f4d\u65705\u4f4d\uff0c\u5c0f\u6570\u540e\u4fdd\u7559\u4e24\u4f4d price = models.DecimalField(max_digits=5,decimal_places=2) #\u4e0e\u51fa\u7248\u793e\u8868\u5173\u8054\u7684\u5b57\u6bb5\u2014\u2014publish_id #\u6ce8\u610f\u81ea\u5df1\u5199\u7684\u65f6\u5019\u53ea\u5199publish\u5c31\u53ef\u4ee5\u4e86\uff01Django\u4f1a\u81ea\u52a8\u8865\u4e0a_id #\u6ce8\u610f\uff1aon_delete\u5fc5\u987b\u8981\u52a0\u4e0a\uff01\uff01\uff01\u800c\u4e14to\u540e\u9762\u7684\u8868\u7684\u540d\u5b57\u8981\u4e60\u60ef\u6027\u7684\u52a0\u4e0a1 #\u6ce8\u610f null=true\u8868\u793a\u5141\u8bb8\u4e3a\u7a7a\u503c # \u4e00\u5bf9\u591a\uff01 publish = models.ForeignKey(to='Publish',to_field='nid',on_delete=models.CASCADE,null=True) #\u4e66\u8ddf\u4f5c\u8005\u662f\u591a\u5bf9\u591a\u7684\u5173\u7cfb\u3002\u7406\u8bba\u4e0a\u9700\u8981\u65b0\u5efa\u4e00\u5f20\u5173\u7cfb\u8868\u3002 #\u4f46\u662f\u5229\u7528Django\u4e0b\u9762\u7684\u8bed\u53e5\u65e2\u53ef\u4ee5\u65b0\u5efa\u4e00\u5f20\u8868\uff0c\u53c8\u53ef\u4ee5\u5206\u522b\u5c06\u5176\u4e0e\u4e66\u7c4d\u8868\u4e0e\u4f5c\u8005\u8868\u5173\u8054\u8d77\u6765\uff01 #\u591a\u5bf9\u591a\uff01 authors = models.ManyToManyField(to='Author') \"\"\" create table book2author( id int primary_key auto_increment, book_id int,0 author_id int, foreign_key (book_id) references Book(id), foreign_key (author_id) references Author(id), ); \"\"\"","title":"\u5728app\u7684models.py\u6587\u4ef6\u4e2d\u521b\u5efa\u6a21\u578b\u7c7b"},{"location":"Django\u6838\u5fc3/ORM\u591a\u8868/#django2","text":"\u5728Django2\u4e2d\uff0c\u5916\u952e\u5173\u8054\u7684\u90a3\u4e2a\u5c5e\u6027\u5fc5\u987b\u52a0\u4e0a on_delete=models.CASCADE \uff0c\u5426\u5219\u6570\u636e\u8fc1\u79fb\u65f6\u4f1a\u62a5\u9519\uff01","title":"Django2\u7684\u4e00\u4e2a\u95ee\u9898"},{"location":"Django\u6838\u5fc3/ORM\u591a\u8868/#_2","text":"\u5728terminal\u4e2d\u6267\u884c\u6570\u636e\u5e93\u7684\u8fc1\u79fb\u6307\u4ee4\uff1a python manage.py makemigrations python manage.py migrate \u67e5\u770b\u4e00\u4e0bMySQL\u4e2d\u662f\u5426\u751f\u6210\u4e86\u201c5\u201d\u5f20\u6211\u4eec\u9700\u8981\u7684\u8868\u3002 \u6ce8\u610f\u4e8b\u9879\uff1a (1)\u8868\u7684\u540d\u79f0myapp_modelName\uff0c\u662f\u6839\u636e \u6a21\u578b\u4e2d\u7684\u5143\u6570\u636e\u81ea\u52a8\u751f\u6210\u7684\uff0c\u4e5f\u53ef\u4ee5\u8986\u5199\u4e3a\u522b\u7684\u540d\u79f0 (2)id\u5b57\u6bb5\u662f\u81ea\u52a8\u6dfb\u52a0\u7684 (3)\u5bf9\u4e8e\u5916\u952e\u5b57\u6bb5\uff0cDjango \u4f1a\u5728\u5b57\u6bb5\u540d\u4e0a\u6dfb\u52a0\"_id\" \u6765\u521b\u5efa\u6570\u636e\u5e93\u4e2d\u7684\u5217\u540d (4)\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u7684CREATE TABLE SQL \u8bed\u53e5\u4f7f\u7528PostgreSQL \u8bed\u6cd5\u683c\u5f0f\uff0c\u8981\u6ce8\u610f\u7684\u662fDjango \u4f1a\u6839\u636esettings \u4e2d\u6307\u5b9a\u7684\u6570\u636e\u5e93\u7c7b\u578b\u6765\u4f7f\u7528\u76f8\u5e94\u7684SQL\u8bed\u53e5\u3002 (5)\u5b9a\u4e49\u597d\u6a21\u578b\u4e4b\u540e\uff0c\u4f60\u9700\u8981\u544a\u8bc9Django _\u4f7f\u7528_\u8fd9\u4e9b\u6a21\u578b\u3002\u4f60\u8981\u505a\u7684\u5c31\u662f\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684INSTALL_APPSZ\u4e2d\u8bbe\u7f6e\uff0c\u5728\u5176\u4e2d\u6dfb\u52a0models.py\u6240\u5728\u5e94\u7528\u7684\u540d\u79f0\u3002 (6)\u5916\u952e\u5b57\u6bb5 ForeignKey \u6709\u4e00\u4e2a null=True \u7684\u8bbe\u7f6e(\u5b83\u5141\u8bb8\u5916\u952e\u63a5\u53d7\u7a7a\u503c NULL)\uff0c\u4f60\u53ef\u4ee5\u8d4b\u7ed9\u5b83\u7a7a\u503c None","title":"\u6570\u636e\u8fc1\u79fb"},{"location":"Django\u6838\u5fc3/ORM\u591a\u8868/#_3","text":"\u5148\u4f7f\u7528sql\u8bed\u53e5\u5728publish\u3001author\u3001authordetail\u8868\u4e2d\u52a0\u51e0\u6761\u6570\u636e\u3002 \u6279\u91cf\u521b\u5efa\u6570\u636e\u5e93\u6570\u636e book_list = [] for i in range(100): book = Book(title='book_%s'%i,price=i*i) book_list.append(book) #\u6279\u91cf\u521b\u5efa\uff1abulk_create() Book.objects.bulk_create(book_list) 1\u3001\u4e00\u5bf9\u591a\u6dfb\u52a0\u8bb0\u5f55 \u5728book\u8868\u4e2d\u65b0\u589e\u4e00\u6761\u8bb0\u5f55\uff0c\u7531\u4e8epublish\u8868\u4e0ebook\u8868\u662f\u4e00\u5bf9\u591a\u7684\u5173\u7cfb\uff0c\u5173\u8054\u5b57\u6bb5\u4e3apublish_id\uff0c\u56e0\u6b64\u6211\u4eec\u5148\u5f97\u627e\u5230\u5bf9\u5e94\u7684\u51fa\u7248\u793e\uff0c \u8fd9\u91cc\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a \u65b9\u6cd5\u4e00\uff1a publish_obj = Publish.objects.get(nid=1) Book.objects.create(title='\u91d1\u74f6',price=100,pub_date='1922-2-3',publish=publish_obj) \u65b9\u6cd5\u4e8c\uff1a Book.objects.create(title='\u91d1\u74f6',price=100,pub_date='1922-2-3',publish_id=1) \u6ce8\u610f\u7406\u89e3publish_obj: # \u67e5\u770b\u6c34\u6d52\u4f20\u4e66\u7c4d\u7684\u51fa\u7248\u793e\u5bf9\u5e94\u7684\u90ae\u7bb1\u2014\u2014\u6ce8\u610f\u8fd9\u91cc\u7684first()\uff0c\u628aQuerySet\u5bf9\u8c61\u8f6c\u5316\u4e3aObject\u5bf9\u8c61### book_obj = Book.objects.filter(title='\u6c34\u6d52\u4f20').first() # \u6ce8\u610f\u5148.publish\u518d.emali print(book_obj.publish.email) 2\u3001\u591a\u5bf9\u591a\u6dfb\u52a0\u8bb0\u5f55 \u4e66\u7c4d\u4e0e\u4f5c\u8005\u662f\u591a\u5bf9\u591a\u7684\u5173\u7cfb\u3002 \u521b\u5efa\u4e00\u4e2abook\u8bb0\u5f55\uff0c\u5c06\u4e24\u4e2a\u4f5c\u8005\u5173\u8054\u5230\u8fd9\u4e2a\u8bb0\u5f55\u4e2d\uff0c\u8fd9\u4e24\u4e2a\u4f5c\u8005\u5199\u540c\u4e00\u672c\u4e66\u3002 ##\u6ce8\u610f\u8fd9\u91cc\u7684first()\u5f97\u52a0\uff01 book_obj = Book.objects.create(title='\u4e09\u56fd\u7fa4\u82f1\u4f202',price=200,pub_date='1900-3-4',publish_id=2) whw = Author.objects.filter(nid=1).first() www = Author.objects.filter(nid=2).first() ##\u7ed1\u5b9a\u591a\u5bf9\u591a\u5173\u7cfb\u7684API\u3002 ##\u8fd9\u4e2aauthors\u5c31\u662fBook\u7c7b\u91cc\u5efa\u591a\u5bf9\u591a\u5173\u7cfb\u7684\u65f6\u5019\u7684\u90a3\u4e2a\uff1aauthors = models.ManyToManyField(to='Author') book_obj.authors.add(whw,www) ##\u6ce8\u610f\u5982\u679c\u4ece\u65e2\u6709\u7684\u6570\u636e\u91cc\u627e\u5f97\u8fd9\u6837\u5199\uff0cauthors\u5b57\u6bb5\u5728Book\u7c7b\u4e2d\uff0c\u56e0\u6b64\u5fc5\u987b\u662fBook\u7684\u5bf9\u8c61\u53bbadd Author\u5bf9\u8c61 ##\u540e\u9762\u52a0\u4e0afirst()\u5c06QuerySet\u5bf9\u8c61\u8f6c\u6362\u6210model\u5bf9\u8c61 author1 = Author.objects.filter(name='whw').first() author2 = Author.objects.filter(name='www').first() book1 = Book.objects.filter(title='\u91d1\u74f6').first() book1.authors.add(author1,author2) ##\u89e3\u9664\u591a\u5bf9\u591a\u5173\u7cfb\uff0c\u6ce8\u610ffirst\u5f97\u52a0 book = Book.objects.filter(nid=4).first() ##\u6ce8\u610f\u8fd9\u91cc\u76842\u4ee3\u8868author_id book.authors.remove(2) ##\u4e5f\u53ef\u4ee5\u79fb\u9664\u6240\u6709\u7684\u5173\u7cfb\uff1a book.authors.clear() ##\u91cd\u70b9\u6765\u4e86\uff01\u2014\u2014\u2014\u2014all() ##\u4e0e\u8fd9\u672c\u4e66\u5173\u8054\u7684\u6240\u6709\u4f5c\u8005\u5bf9\u8c61\u96c6\u5408\u2014\u2014QuerySet\u5bf9\u8c61\u3002[obj1,obj2,......] ret = book.authors.all() print(ret) ###\u67e5\u8be2\u4e3b\u952e\u4e3a4\u7684\u4e66\u7c4d\u7684\u6240\u6709\u4f5c\u8005\u7684\u540d\u5b57### book_o = Book.objects.filter(nid=4).first() rets = book_o.authors.all().values('name') print(rets) ###\u6ce8\u610f\u4e0a\u9762\u7684\u7ed3\u679c\u662f\uff1a<QuerySet [{'name': 'whw'}, {'name': 'www'}]>","title":"\u6dfb\u52a0\u8bb0\u5f55"},{"location":"Django\u6838\u5fc3/ORM\u591a\u8868/#_4","text":"# \u5c06\u67d0\u4e2a\u7279\u5b9a\u7684\u5bf9\u8c61\u4ece\u88ab\u5173\u8054\u5bf9\u8c61\u96c6\u5408\u4e2d\u53bb\u9664\u3002 book_obj.authors.remove(*[1\uff0c2])\uff0c\u5c06\u591a\u5bf9\u591a\u7684\u5173\u7cfb\u6570\u636e\u5220\u9664 book_obj.authors.remove() # \u6e05\u7a7a\u88ab\u5173\u8054\u5bf9\u8c61\u96c6\u5408 book_obj.authors.clear() # \u5148\u6e05\u7a7a\u518d\u8bbe\u7f6e book_obj.authors.set() ### \u5220\u9664\u5b9e\u4f8b book_obj = models.Book.objects.filter(nid=4)[0] #\u5c06\u7b2c\u4e09\u5f20\u8868\u4e2d\u7684\u8fd9\u4e2abook_obj\u5bf9\u8c61\u5bf9\u5e94\u7684\u90a3\u4e2a\u4f5c\u8005id\u4e3a2\u7684\u90a3\u6761\u8bb0\u5f55\u5220\u9664 # book_obj.authors.remove(2) # book_obj.authors.clear() #\u5148\u6e05\u9664\u6389\u6240\u6709\u7684\u5173\u7cfb\u6570\u636e\uff0c\u7136\u540e\u53ea\u7ed9\u8fd9\u4e2a\u4e66\u5bf9\u8c61\u7ed1\u5b9a\u8fd9\u4e2aid\u4e3a2\u7684\u4f5c\u8005\uff0c\u6240\u4ee5\u53ea\u5269\u4e0b\u4e00\u6761\u8bb0\u5f55 # \u6bd4\u5982\u7528\u6237\u7f16\u8f91\u6570\u636e\u7684\u65f6\u5019\uff0c\u9009\u62e9\u4f5c\u8005\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u90a3\u4e48\u9700\u8981\u91cd\u65b0\u9009\u62e9\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u5148\u6e05\u7a7a\uff0c\u7136\u540e\u518d\u91cd\u65b0\u7ed1\u5b9a\u5173\u7cfb\u6570\u636e, # \u6ce8\u610f\u8fd9\u91cc\u5199\u7684\u662f\u5b57\u7b26\u4e32\uff0c\u6570\u5b57\u7c7b\u578b\u4e0d\u53ef\u4ee5 # book_obj.authors.set('2') #\u8fd9\u4e48\u5199\u4e5f\u53ef\u4ee5\uff0c\u4f46\u662f\u6ce8\u610f\u5217\u8868\u4e2d\u7684\u5143\u7d20\u662f\u5b57\u7b26\u4e32\uff0c\u5217\u8868\u524d\u9762\u6ca1\u6709*\uff0c\u4e4b\u524d\u6211\u6d4b\u8bd5\u6709*\uff0c\u53ef\u80fd\u662f\u7248\u672c\u7684\u95ee\u9898 book_obj.authors.set(['1',])","title":"\u591a\u5bf9\u591a\u4fee\u6539\u4e0e\u5220\u9664"},{"location":"Django\u6838\u5fc3/ORM\u591a\u8868/#_5","text":"\u57fa\u4e8e\u5bf9\u8c61\u7684\u8de8\u8868\u67e5\u8be2\u6700\u7ec8\u7ffb\u8bd1\u6210SQL\u8bed\u53e5\u90fd\u662f \u5b50\u67e5\u8be2 \u3002 \u6570\u636e\u5e93\u4e2d\u7684\u4e00\u4e2a\u8868\u8bb0\u5f55\u5176\u5b9e\u5c31\u662f\u7b5b\u9009\u51fa\u6765\u7684\u201c\u5bf9\u8c61\u201d\u7684\u4e00\u4e2a\u5bf9\u8c61\u53ef\u4ee5\u5229\u7528 .\u64cd\u4f5c\u7b26 \u64cd\u4f5c\u3002 values()\u7b49\u540c\u4e8eselect\u3002 filter()\u7b49\u540c\u4e8ewhere\u3002 \u4e00\u5bf9\u591a\u67e5\u8be2\uff08Book\u4e0ePublish\uff09 \u4ee5Book\u8868\u4e3a\u57fa\u51c6\uff0c\u7531\u4e8e\u6211\u4eec\u5c06\u5173\u8054\u7684\u5b57\u6bb5\u5b9a\u4e49\u5728\u4e86Book\u8868\u4e2d\uff0c\u4e5f\u5c31\u662f\u8bf4\u201c\u5173\u8054\u5b57\u6bb5\u201d\u5728Book\u8868\u4e2d\uff0c\u6240\u4ee5\u4eceBook\u5f00\u59cb\u67e5\u662f\u201c\u6b63\u5411\u201d\uff0c\u4ecePublish\u5f00\u59cb\u67e5\u662f\u201c\u53cd\u5411\u201d\u3002 Book\u7c7b\u4e2d\u662f\u8fd9\u6837\u5199\u7684\uff1a publish = models.ForeignKey(to='Publish',to_field='nid',on_delete=models.CASCADE,null=True) Book book_obj.publish >> Publish \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014 <<< publish_obj.book_set.all()#QuerySet author_boj1,author_obj2,......] \u6b63\u5411\u67e5\u8be2\u6309\u5b57\u6bb5\u2014\u2014publish #\u67e5\u8be2\u4e3b\u952e\u4e3a1\u7684\u4e66\u7c4d\u7684\u51fa\u7248\u793e\u7684\u57ce\u5e02 book_obj = Book.objects.filter(pk=1).first() #\u6b63\u5411\u67e5\u8be2\u6309\u5b57\u6bb5 ##\u6ce8\u610f\u8fd9\u91cc\u7684book_obj.publish\u2014\u2014\u2014\u2014\u662f\u4e3b\u952e\u4e3a1\u7684\u4e66\u7c4d\u5bf9\u8c61\u5173\u8054\u7684\u51fa\u7248\u793e\u5bf9\u8c61 ret = book_obj.publish.city print(ret) #\u540c\u6837\u7684\uff1a\u201c\u897f\u6e38\u8bb0\u201d\u4e66\u7c4d\u7684\u51fa\u7248\u793e\u7684\u540d\u5b57\uff1a book_o = Book.objects.filter(title='\u6c34\u6d52\u4f20').first() ret = book_o.publish.name print(ret) \u53cd\u5411\u67e5\u8be2\u6309\u8868\u540d\u5c0f\u5199_set.all()\uff1abook_set.all() #\u67e5\u8be2\u201c\u82f9\u679c\u51fa\u7248\u793e\u201d\u51fa\u7248\u8fc7\u7684\u6240\u6709\u4e66\u7c4d\u7684\u4e66\u540d publish_obj = Publish.objects.filter(name='\u82f9\u679c\u51fa\u7248\u793e').first() #\u53cd\u5411\u67e5\u8be2\u6309\u8868\u540d\u5c0f\u5199_set ##\u6ce8\u610f publish.book_set.all() \u2014\u2014\u2014\u2014\u662f\u82f9\u679c\u51fa\u7248\u793e\u5173\u8054\u7684\u6240\u6709\u201c\u4e66\u7c4d\u5bf9\u8c61\u201d\u7684\u96c6\u5408 book_list = publish.book_set.all() for book_obj in book_list: print(book_obj.title) \u591a\u5bf9\u591a\u67e5\u8be2(Book\u4e0eAuthor\uff0c\u5916\u52a0book_authors\u8868) \u4ee5Book\u8868\u4e3a\u57fa\u51c6\uff0c\u7531\u4e8e\u6211\u4eec\u5c06\u5173\u8054\u7684\u5b57\u6bb5\u5b9a\u4e49\u5728\u4e86Book\u8868\u4e2d\uff0c\u4e5f\u5c31\u662f\u8bf4\u201c\u5173\u8054\u5b57\u6bb5\u201d\u5728Book\u8868\u4e2d\uff0c\u6240\u4ee5\u4eceBook\u5f00\u59cb\u67e5\u662f\u201c\u6b63\u5411\u201d\uff0c\u4eceAuthor\u5f00\u59cb\u67e5\u662f\u201c\u53cd\u5411\u201d\u3002 Book\u7c7b\u4e2d\u662f\u8fd9\u6837\u5199\u7684\uff1a authors = models.ManyToManyField(to='Author') Book book_obj.authors.all() >> Author #QuerySet[author_boj1,author_obj2,...] \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014 <<< author_obj.book_set.all() \u6b63\u5411\u67e5\u8be2\u6309\u5b57\u6bb5\u2014authors #\u201c\u4e09\u56fd\u7fa4\u82f1\u201d\u6240\u6709\u7684\u4f5c\u8005\u53ca\u624b\u673a\u53f7 ##\u5148\u201c\u8fc7\u6ee4\u201d book_obj = Book.objects.filter(title='\u4e09\u56fd\u7fa4\u82f1').first() ##\u6b63\u5411\u67e5\u8be2\u6309\u5b57\u6bb5 ##\u6ce8\u610f\u8fd9\u91cc\u5f97\u5230\u7684 authors \u662f\u4e0e\u8fd9\u672c\u4e66\u5173\u8054\u7684\u6240\u6709 \u4f5c\u8005\u5bf9\u8c61\u7684\u96c6\u5408 authors = book_obj.authors.all() for author_obj in authors: name = author_obj.name ##\u624b\u673a\u53f7\u5728\u201c\u4f5c\u8005\u8be6\u7ec6\u8868\u201d\u4e2d\uff0c\u800c\u4e14\u201c\u4f5c\u8005\u8868\u201d\u76f8\u5bf9\u4e8e\u201c\u4f5c\u8005\u8be6\u7ec6\u8868\u201d\u662f\u6b63\u5411\uff0c\u5173\u8054\u5b57\u6bb5\u4e3aauthordetail telephone = author_obj.authordetail.telephone print('\u4f5c\u8005:%s\uff0c\u624b\u673a\u53f7:%s'%(name,telephone)) \u53cd\u5411\u67e5\u8be2\u6309\u8868\u540d_set.all()\u2014book_set.all() #\u67e5\u8be2\u4f5c\u8005whw\u51fa\u7248\u8fc7\u7684\u6240\u6709\u4e66\u7c4d\u7684\u540d\u5b57 ##\u5148\u201c\u8fc7\u6ee4\u201d author_obj = Author.objects.filter(name='whw').first() ##\u53cd\u5411\u67e5\u8be2\u6309\u8868\u540d\u5c0f\u5199_set ##\u6ce8\u610f\u8fd9\u91cc\u5f97\u5230\u7684\u662f\u8be5\u4f5c\u8005\u5199\u8fc7\u7684\u4e66\u7684\u5bf9\u8c61\u7684\u96c6\u5408 book_list = author_obj.book_set.all() for book_obj in book_list: print(book_obj.title) \u4e00\u5bf9\u4e00\u67e5\u8be2(Author\u4e0eAuthorDetail) \u4ee5Author\u8868\u4e3a\u57fa\u51c6\uff0c\u7531\u4e8e\u6211\u4eec\u5c06\u5173\u8054\u7684\u5b57\u6bb5\u5b9a\u4e49\u5728\u4e86Author\u8868\u4e2d\uff0c\u4e5f\u5c31\u662f\u8bf4\u201c\u5173\u8054\u5b57\u6bb5\u201d\u5728Author\u8868\u4e2d\uff0c\u6240\u4ee5\u4eceAuthor\u5f00\u59cb\u67e5\u662f\u201c\u6b63\u5411\u201d\uff0c\u4eceAuthorDetail\u5f00\u59cb\u67e5\u662f\u201c\u53cd\u5411\u201d\u3002 Author\u7c7b\u4e2d\u662f\u8fd9\u6837\u5199\u7684\uff1a authordetail = models.OneToOneField(to='AuthorDetail',to_field='nid',on_delete=models.CASCADE) Author author_obj.authordetail >> AuthorDetail \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014 <<< author_detail_obj.author_set \u6b63\u5411\u67e5\u8be2\u6309\u5b57\u6bb5 #\u67e5\u8be2\u4f5c\u8005whw\u7684\u7535\u8bdd author = Author.objects.filter(name='whw').first() ##\u6b63\u5411\u67e5\u8be2\u6309\u5b57\u6bb5 ret = author.authordetail.telephone print(ret) \u53cd\u5411\u67e5\u8be2\u6309\u8868\u540d\u5c0f\u5199 #\u67e5\u8be2\u7535\u8bdd\u662f12312312\u7684\u4f5c\u8005\u540d\u5b57 (1)##\u6ce8\u610f\u8fd9\u91cc\u7684 authordetail_list \u662f\u4e00\u4e2aQuerySet\u5bf9\u8c61\uff0c\u540e\u9762\u6ca1\u6709\u7528first authordetail_list = AuthorDetail.objects.filter(telephone=12312312) for obj in authordetail_list: #\u53cd\u5411\u67e5\u8be2\u7528\u8868\u540d\u5c0f\u5199 print(obj.author.name) (2)\u4e5f\u53ef\u4ee5\u5728\u540e\u9762\u52a0first() add = AuthorDetail.objects.filter(telephone=12312312).first() #\u53cd\u5411\u67e5\u8be2\u6309\u8868\u540d\u5c0f\u5199\uff1a print(add.author.name)","title":"\u591a\u8868\u64cd\u4f5c\u4e4b\u57fa\u4e8e\u5bf9\u8c61\u7684\u8de8\u8868\u67e5\u8be2"},{"location":"Django\u6838\u5fc3/ORM\u591a\u8868/#_6","text":"1\u3001\u57fa\u4e8e\u53cc\u4e0b\u5212\u7ebf\u7684\u8de8\u8868\u67e5\u8be2\u6700\u7ec8\u7ffb\u8bd1\u6210SQL\u8bed\u53e5\u90fd\u662f\u201cjoin\u67e5\u8be2\u201d \u3002 2\u3001\u6b63\u5411\u67e5\u8be2\u6309\u5b57\u6bb5\uff0c\u53cd\u5411\u67e5\u8be2\u6309\u8868\u540d\u5c0f\u5199\uff1a\u7528\u6765\u544a\u8bc9ORM\u5f15\u64cejoin\u54ea\u5f20\u8868\u3002 3\u3001\u57fa\u4e8e\u53cc\u4e0b\u5212\u7ebf\u7684\u8de8\u8868\u67e5\u8be2\u5148join\u6210\u4e00\u5f20\u8868\uff0c\u518d\u6267\u884c\u201c\u5355\u8868\u67e5\u8be2\u201d\u3002 4\u3001values()\u7b49\u540c\u4e8eselect\uff1bfilter()\u7b49\u540c\u4e8ewhere\u3002 \u4e00\u5bf9\u591a\u5173\u7cfb \u6b63\u5411\u67e5\u8be2\u6309\u5b57\u6bb5\uff0c\u53cd\u5411\u67e5\u8be2\u6309\u8868\u540d\u5c0f\u5199\u7528\u6765\u544a\u8bc9ORM\u5f15\u64cejoin\u54ea\u5f20\u8868\u3002 \u67e5\u8be2\u6c34\u6d52\u4f20\u8fd9\u672c\u4e66\u7684\u51fa\u7248\u793e\u7684\u540d\u5b57\uff1aBook\u4e0ePublish\u3002 SQL\u8bed\u53e5\u8fd9\u6837\u5199\uff1a select publish.name from book inner join publish on book.publish_id = publish.nid where book.title = '\u6c34\u6d52\u4f20' \u6b63\u5411\u67e5\u8be2 \u4ee5Book\u4e3a\u57fa\u51c6\uff0c\u56e0\u4e3a\u201c\u5173\u8054\u5b57\u6bb5\u201d\u5728Book\u7c7b\u4e2d Book\u91cc\u9762\u8fd9\u6837\u5b9a\u4e49\u7684\uff1a publish = models.ForeignKey(to='Publish',to_field='nid',on_delete=models.CASCADE,null=True) \u56e0\u6b64\u8fd9\u6837\u8fdb\u884c\u6b63\u5411\u67e5\u8be2 values()\u7b49\u540c\u4e8eselect\uff1bfilter()\u7b49\u540c\u4e8ewhere\u3002 ret = Book.objects.filter(title='\u6c34\u6d52\u4f20').values('publish__name') print(ret) #<QuerySet [{'publish__name': '333'}]> \u53cd\u5411\u67e5\u8be2 \u4ecePublish\u67e5Book ##\u53cd\u5411\u67e5\u8be2\u6309\u8868\u540d\u5c0f\u5199~ ## values()\u7b49\u540c\u4e8eselect\uff1bfilter()\u7b49\u540c\u4e8ewhere ret = Publish.objects.filter(book__title='\u6c34\u6d52\u4f20').values('name') print(ret) #<QuerySet [{'name': '333'}]> \u591a\u5bf9\u591a\u5173\u7cfb \u67e5\u8be2\u4e09\u56fd\u7fa4\u82f1\u8fd9\u672c\u4e66\u6240\u6709\u4f5c\u8005\u7684\u540d\u5b57 Book\u3001Author\u3001book_authors\u8868\u3002 SQL\u8bed\u53e5\u8fd9\u6837\u5199 select author.name from book inner join book_authors on book.nid = book_authors.book_id inner join author on book_authors.author_id = author.nid where book.title = '\u4e09\u56fd\u7fa4\u82f1' \u6b63\u5411\u67e5\u8be2 \u4ee5Book\u4e3a\u57fa\u51c6\uff0c\u56e0\u4e3a\u201c\u5173\u8054\u5b57\u6bb5\u201d\u5728Book\u7c7b\u4e2d ##Book\u91cc\u9762\u662f\u8fd9\u6837\u5b9a\u4e49\u7684\uff1a authors = models.ManyToManyField(to='Author') ##\u6b63\u5411\u67e5\u8be2\u65b9\u6cd5\uff1a ##\u901a\u8fc7Book\u8868join\u4e0e\u5176\u5173\u8054\u7684Author\u8868\u2014\u2014\u2014\u2014\u6309\u5b57\u6bb5authors\u901a\u77e5ORM\u5f15\u64ce\u53bbjoin \u8868book_authors\u4e0e\u8868author\u3002 ##\u6b63\u5411\u67e5\u8be2\u6309\u5b57\u6bb5 ret = Book.objects.filter(title='\u4e09\u56fd\u7fa4\u82f1').values('authors__name') print(ret) #<QuerySet [{'authors__name': 'whw'}, {'authors__name': 'www'}]> \u53cd\u5411\u67e5\u8be2 \u4ee5AUthor\u4e3a\u57fa\u51c6\u53cd\u67e5 ##\u53cd\u5411\u67e5\u8be2\u7684\u65b9\u6cd5\uff1a ##\u901a\u8fc7Author\u8868join\u4e0e\u5176\u5173\u8054\u7684Book\u8868\u2014\u2014\u2014\u2014\u6309\u8868\u540d\u5c0f\u5199book\u901a\u77e5ORM\u5f15\u64ce\u53bbjoin \u8868book_authors\u4e0e\u8868book\u3002 ##\u53cd\u5411\u67e5\u8be2\u6309\u8868\u540d\u5c0f\u5199 ret = Author.objects.filter(book__title='\u4e09\u56fd\u7fa4\u82f1').values('name') print(ret) #<QuerySet [{'name': 'whw'}, {'name': 'www'}]> \u4e00\u5bf9\u4e00\u5173\u7cfb Author\u4e0eAuthorDetail \u67e5\u8be2whw\u7684\u624b\u673a\u53f7 \u6b63\u5411\u67e5\u8be2 \u6b63\u5411\u67e5\u8be2\u6309\u5b57\u6bb5\u2014\u2014##\u901a\u8fc7Author\u8868join\u4e0e\u5176\u5173\u8054\u7684AUthorDetail\u8868\uff0c\u6309\u5b57\u6bb5authordetail\u901a\u77e5ORM\u5f15\u64ce\u53bbjoin \u8868authordetail ret = Author.objects.filter(name='whw').values('authordetail__telephone') print(ret) #<QuerySet [{'authordetail__telephone': 123123123}]> \u53cd\u5411\u67e5\u8be2 \u53cd\u5411\u67e5\u8be2\u6309\u8868\u540d\u5c0f\u5199\u2014\u2014##\u901a\u8fc7AuthorDetail\u8868join\u4e0e\u5176\u5173\u8054\u7684AUthor\u8868\uff0c\u6309\u8868\u540d\u5c0f\u5199author\u901a\u77e5ORM\u5f15\u64ce\u53bbjoin \u8868author ret = AuthorDetail.objects.filter(author__name='whw').values('telephone') print(ret) #<QuerySet [{'telephone': 123123123}]>","title":"\u591a\u8868\u64cd\u4f5c\u4e4b\u57fa\u4e8e\u53cc\u4e0b\u5212\u7ebf\u7684\u8de8\u8868\u67e5\u8be2"},{"location":"Django\u6838\u5fc3/ORM\u591a\u8868/#related_name","text":"\u8fd9\u91cc\u4ee5\u51e0\u4e2a\u4f8b\u5b50\u6765\u8fdb\u884c\u8bb2\u89e3\u3002 \u4f8b1 \u67e5\u8be2\u5730\u5740\u4ee5'as'\u5f00\u5934\u7684\u4f5c\u8005\u51fa\u7248\u8fc7\u7684\u6240\u6709\u4e66\u7c4d\u540d\u79f0\u4ee5\u53ca\u4e66\u7c4d\u7684\u51fa\u7248\u793e\u540d\u79f0\u3002 (1) \u901a\u8fc7Book\u8868join\u8868AuthorDetail\uff0c\u4f46Book\u4e0eAuthorDetail\u65e0\u5173\u8054\uff0c\u56e0\u6b64\u5fc5\u987b\u4ee5Author\u4e3a\u6865\u6881 \u8fde\u7eed\u8de8\u8868 \uff1a ##\u6ce8\u610f\u8fd9\u91cc\u662f value_list ret = Book.objects.filter(authors__authordetail__addr__startswith='as').values('title','publish__name') print(ret) #<QuerySet [{'title': '\u4e09\u56fd\u7fa4\u82f1', 'publish__name': '333'}]> (2) \u4ee5Author\u8868\u4e3a\u57fa\u51c6\uff0c\u5b83\u4e0eAuthorDetail\u8868\u6709\u5173\u8054\uff0c\u4f46\u662f\u4e0ePublish\u65e0\u5173\u8054\uff0c\u56e0\u6b64\u5f97\u4ee5Book\u8868\u4e3a\u6865\u6881 ret = Author.objects.filter(authordetail__addr__startswith='as').values('book__title','book__publish__name') print(ret) #<QuerySet [{'book__title': '\u4e09\u56fd\u7fa4\u82f1', 'book__publish__name': '333'}]> \u4f8b2 \u67e5\u8be2\u4eba\u6c11\u51fa\u7248\u793e\u51fa\u7248\u8fc7\u7684\u6240\u6709\u4e66\u7c4d\u7684\u540d\u5b57\u4ee5\u53ca\u4f5c\u8005\u7684\u59d3\u540d\u3002 (1)\u6b63\u5411\u67e5\u8be2 ##Book\u76f8\u5bf9\u4e8ePublish\u4e0eAuthor\u90fd\u662f\u201c\u6b63\u5411\u7684\u201d ##\u6ce8\u610f\u7528 values_list ret = Book.objects.filter(publish__name='\u4eba\u6c11\u51fa\u7248\u793e').values_list('title','authors__name') print(ret) (2)\u53cd\u5411\u67e5\u8be2 \u8fc7\u7a0b\u8bf4\u660e A_\u9996\u5148\uff0cfilter\u7b49\u4ef7\u4e8ewhere\uff0c\u6211\u4eec\u4ee5Publish\u4e3a\u57fa\u51c6\u67e5\uff0c\u56e0\u6b64filter\u91cc\u76f4\u63a5\u5199name='\u4eba\u6c11\u51fa\u7248\u793e'\u5373\u53ef\uff1b B_\u7136\u540e\uff0c\u7531\u4e8ePublish\u8ddfAuthor\u6ca1\u6709\u76f4\u63a5\u8054\u7cfb\uff0c\u6211\u4eec\u5f97\u501f\u52a9Book\u4f5c\u4e3a\u6865\u6881\uff1a (B1)\u8981\u627e\u4e66\u7c4d\u7684\u540d\u5b57\uff0c\u7531\u4e8ePublish\u67e5Book\u662f\u53cd\u5411\u67e5\u8be2\uff0c\u201c\u7528\u8868\u660e\u5c0f\u5199\u201d\u2014\u2014\u2014\u2014\u56e0\u6b64\u201c\u4e66\u7c4d\u540d\u5b57\u201d\u662f book__title (B2)\u800c\u8981\u627e\u4f5c\u8005\u540d\u5b57\uff0c\u7531\u4e8eBook\u627eAuthor\u662f\u6b63\u5411\u67e5\u8be2\uff0c\u201c\u7528\u5b57\u6bb5\u201d\u2014\u2014\u2014\u2014\u56e0\u6b64\u201c\u5728Book\u7684\u57fa\u7840\u4e0a\u201d\u6211\u4eec\u7528\uff1abook__authors__name\u3002 \u67e5\u8be2\u8bed\u53e5 ##\u6ce8\u610f\u7528 values_list ret = Publish.objects.filter(name='\u4eba\u6c11\u51fa\u7248\u793e').values__list('book__title','book__authors__name') print(ret) related_name \u201c\u53cd\u5411\u67e5\u8be2\u201d\u65f6\uff0c\u5982\u679c\u5b9a\u4e49\u4e86related_name \uff0c\u5219\u7528related_name\u66ff\u6362\u8868\u540d \u4f8b\u5982\u5728Book\u4e2d\u8fd9\u6837\u5b9a\u4e49\uff1a publish = models.ForeignKey(to='Publish',to_field='nid',on_delete=models.CASCADE,null=True,related_name='booklist') \u90a3\u4e48\uff1a\u67e5\u8be2\u4eba\u6c11\u51fa\u7248\u793e\u51fa\u7248\u8fc7\u7684\u6240\u6709\u4e66\u7c4d\u7684\u540d\u5b57\u4e0e\u4ef7\u683c(\u4e00\u5bf9\u591a) (1)\u6b63\u5411\u67e5\u8be2\u201c\u7528\u4e0d\u5230\u201d ret = Book.objects.filter(publish__name='\u4eba\u6c11\u51fa\u7248\u793e').values('title','price') print(ret) (2)\u53cd\u5411\u67e5\u8be2\u7528\u5230related_names ret = Publish.objects.filter(name='\u4eba\u6c11\u51fa\u7248\u793e').values('booklist__title','booklist__price')","title":"\u591a\u8868\u64cd\u4f5c\u4e4b\u8fde\u7eed\u8de8\u8868\u4e0erelated_name"},{"location":"Django\u6838\u5fc3/ORM\u591a\u8868/#_7","text":"\u7528\u6cd5 (1)\u5bfc\u5165django.db.models \u4e2d\u7684Avg,Max,Min,Count\u7b49\u6a21\u5757 (2)\u627e\u51fa\u6765\u6240\u6709\u5bf9\u8c61 Book.objects.all() \u540e \u7528aggregate()\u65b9\u6cd5 \u4e3e\u4f8b \u67e5\u8be2\u6240\u6709\u4e66\u7c4d\u7684\u5e73\u5747\u4ef7\u683c\u4ee5\u53ca\u6700\u9ad8\u7684\u4ef7\u683c from django.db.models import Avg,Max,Min,Count ret = Book.objects.all().aggregate(avg_price=Avg('price'),max_price=Max('price')) print(ret) #{'avg_price': 160.0, 'max_price': Decimal('200.00')}","title":"\u591a\u8868\u64cd\u4f5c\u4e4b\u805a\u5408\u67e5\u8be2"},{"location":"Django\u6838\u5fc3/ORM\u591a\u8868/#fq","text":"\u62d3\u5c55\u65e2\u6709\u7684Book\u6a21\u578b \u5728Book\u8868\u4e2d\u65b0\u589e\u4e24\u4e2a\u5b57\u6bb5\uff1aread_num\u4e0econtent_num\u3002\u7531\u4e8e\u4e4b\u524d\u5df2\u7ecf\u52a0\u4e86\u6570\u636e\u4e86\uff0c\u60f3\u8981\u5728\u6709\u6570\u636e\u7684\u8868\u4e2d\u518d\u65b0\u589e\u5b57\u6bb5\uff0c\u90a3\u4e48\u9700\u8981\u4e3a\u4e4b\u524d\u7684\u8bb0\u5f55\u8bbe\u7f6edefault\u503c\u3002 \u5728Book\u7c7b\u4e2d\u65b0\u589e\uff1a class Book(models.Model): ##\u524d\u9762\u7684\u5b57\u6bb5\u7565## ##\u65b0\u589e\u4e24\u4e2a\u5b57\u6bb5 ##\u52a0\u4e0a default=0 \u6dfb\u52a0\u8fd9\u4e24\u4e2a\u5b57\u6bb5\u540e\uff0c\u4e4b\u524d\u7684\u8bb0\u5f55\u7684\u8fd9\u4e24\u4e2a\u5b57\u6bb5\u90fd\u9ed8\u8ba4\u4e3a0 read_num = models.IntegerField(default=0) content_num = models.IntegerField(default=0) \u7136\u540e\uff0c\u5728Terminal\u4e2d\u8fd0\u884c\uff1a python3 manage.py makemigrations python3 manage.py migrate \u5c31\u53ef\u4ee5\u5c06\u4e0a\u9762\u4e24\u4e2a\u5b57\u6bb5\u6dfb\u52a0\u5230book\u8868\u4e2d\u3002 F\u67e5\u8be2 \u8bf4\u660e 1\u3001\u5728\u4e0a\u9762\u6240\u6709\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u6784\u9020\u7684\u8fc7\u6ee4\u5668\u90fd\u53ea\u662f\u5c06\u5b57\u6bb5\u503c\u4e0e\u67d0\u4e2a\u5e38\u91cf\u505a\u6bd4\u8f83\u3002\u5982\u679c\u6211\u4eec\u8981\u5bf9\u4e24\u4e2a\u5b57\u6bb5\u7684\u503c\u505a\u6bd4\u8f83\uff0c\u90a3\u8be5\u600e\u4e48\u505a\u5462\uff1f 2\u3001Django\u63d0\u4f9bF()\u6765\u505a\u8fd9\u6837\u7684\u6bd4\u8f83\u3002F()\u7684\u5b9e\u4f8b\u53ef\u4ee5\u5728\u67e5\u8be2\u4e2d\u5f15\u7528\u5b57\u6bb5\uff0c\u6765\u6bd4\u8f83\u540c\u4e00\u4e2amodel\u5b9e\u4f8b\u4e2d\u4e24\u4e2a\u4e0d\u540c\u5b57\u6bb5\u7684\u503c\u3002 3\u3001\u9700\u8981\u5148\u5f15\u5165F\u3002 from django.db.models import F \u4e3e\u4f8b 1 \u5b57\u6bb5\u95f4\u7684\u6bd4\u8f83 \u67e5\u8be2\u540c\u4e00\u5f20\u8868\u4e2d\u8bc4\u8bba\u6570\u5927\u4e8e\u70b9\u8d5e\u6570\u7684\u4e66\u7c4d\u7684\u540d\u5b57\uff1a\u67e5\u8be2content_num\u5927\u4e8eread_num\u7684\u4e66\u7c4d\u7684\u540d\u5b57 ret = Book.objects.filter(content_num__gt=F('read_num')).values('title') print(ret) #<QuerySet [{'title': '\u6c34\u6d52\u4f20'}, {'title': '\u91d1\u74f6'}, {'title': '\u4e09\u56fd\u7fa4\u82f1\u4f20'}, {'title': '\u4e09\u56fd\u7fa4\u82f1'}]> 2 \u7edf\u4e00\u4fee\u6539\uff1a\u4e0eupdate\u7ed3\u5408 2-1 \u5c06\u6bcf\u4e2a\u4e66\u7c4d\u7684\u4ef7\u683c\u52a010\u5143 Book.objects.all().update(price=F('price')+10) 2-2 \u7ed9\u4ef7\u683c\u5c0f\u4e8e10\u5143\u7684\u4e66\u7c4d\u7684\u4ef7\u683c\u589e\u52a010\u5143 Book.objects.filter(price__lt=10).update(price=F('price')+10) Q\u67e5\u8be2 \u8bf4\u660e 1\u3001filter() \u7b49\u65b9\u6cd5\u4e2d\u7684\u5173\u952e\u5b57\u53c2\u6570\u67e5\u8be2\u90fd\u662f\u4e00\u8d77\u8fdb\u884c\u201cAND\u201d \u7684\u3002 \u5982\u679c\u4f60\u9700\u8981\u6267\u884c\u66f4\u590d\u6742\u7684\u67e5\u8be2\uff08\u4f8b\u5982OR\u8bed\u53e5\uff09\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528Q\u5bf9\u8c61\u3002 2\u3001\u9700\u8981\u5148\u5f15\u5165Q from django.db.models import Q \u4e3e\u4f8b 1 \u67e5\u627e\u4e66\u540d\u4ee5\u201c\u4e09\u56fd\u201d\u5f00\u5934\u6216\u8005\u4ef7\u683c\u7b49\u4e8e100\u7684\u4e66\u7c4d\u540d\u79f0 ret = Book.objects.filter(Q(title__startswith='\u4e09\u56fd') | Q(price=100)).values('title') print(ret) #<QuerySet [{'title': '\u4e09\u56fd\u7fa4\u82f1\u4f20'}, {'title': '\u4e09\u56fd\u7fa4\u82f1'}]> 2 \u67e5\u627e\u4e66\u540d\u4e0d\u4ee5\u201c\u4e09\u56fd\u201d\u5f00\u5934\u7684\u4e66\u7c4d\u540d\u79f0 ret = Book.objects.filter(~Q(title__startswith='\u4e09')).values('title') print(ret) #<QuerySet [{'title': '\u91d1\u74f6'}, {'title': '\u6c34\u6d52\u4f20'}, {'title': '\u91d1\u74f6'}]> 3 Q\u67e5\u8be2\u4e0e\u952e\u503c\u5bf9\u7684\u5173\u7cfb\uff1a\u5148\u5199Q\u518d\u5199\u952e\u503c\u5bf9\uff0c\u800c\u4e14\u662f\u201c\u4e14\u201d\u7684\u5173\u7cfb\uff1a ret = Book.objects.filter(~Q(title__startswith='\u4e09'),title__startswith='\u6c34').values('title') print(ret) #<QuerySet [{'title': '\u6c34\u6d52\u4f20'}]>","title":"\u591a\u8868\u64cd\u4f5c\u4e4bF\u67e5\u8be2\u4e0eQ\u67e5\u8be2"},{"location":"Django\u6838\u5fc3/ORM\u591a\u8868/#_8","text":"\u591a\u8868\u4e0b\u7684\u5206\u7ec4\u67e5\u8be2\u8bed\u6cd5(\u6ce8\u610f\u662fvalues\u4e0d\u662ffilter)\uff1a # \u6ce8\u610f\u4ee5\u54ea\u5f20\u8868\u4e2d\u7684\u5b57\u6bb5\u5206\u7ec4\uff0c\u54ea\u4e00\u5f20\u8868\u5c31\u662f\u201c\u540e\u8868\u201d \u6bcf\u4e00\u4e2a\u540e\u8868\u6a21\u578b.objects.values('pk').annotate(\u805a\u5408\u51fd\u6570('\u5173\u8054\u8868__\u7edf\u8ba1\u5b57\u6bb5')).values('\u8868\u6a21\u578b\u7684\u6240\u6709\u5b57\u6bb5\u4ee5\u53ca\u7edf\u8ba1\u5b57\u6bb5') \u53e6\u5916\u4e00\u79cd\u5199\u6cd5\uff1a \u6bcf\u4e00\u4e2a\u540e\u8868\u6a21\u578b.objects.annotate(\u805a\u5408\u51fd\u6570('\u5173\u8054\u8868__\u7edf\u8ba1\u5b57\u6bb5')).values('\u8868\u6a21\u578b\u7684\u6240\u6709\u5b57\u6bb5\u4ee5\u53ca\u7edf\u8ba1\u5b57\u6bb5') # \u8fd9\u79cd\u5199\u6cd5\u7b49\u4ef7\u4e8e \u6bcf\u4e00\u4e2a\u540e\u8868\u6a21\u578b.objects.all().annotate(\u805a\u5408\u51fd\u6570('\u5173\u8054\u8868__\u7edf\u8ba1\u5b57\u6bb5')).values('\u8868\u6a21\u578b\u7684\u6240\u6709\u5b57\u6bb5\u4ee5\u53ca\u7edf\u8ba1\u5b57\u6bb5')","title":"\u591a\u8868\u64cd\u4f5c\u4e4b\u591a\u8868\u4e0b\u7684\u5206\u7ec4\u67e5\u8be2"},{"location":"Django\u6838\u5fc3/ORM\u591a\u8868/#_9","text":"1\u3001\u67e5\u8be2\u6bcf\u4e00\u4e2a\u51fa\u7248\u793e\u51fa\u7248\u7684\u4e66\u7c4d\u7684\u4e2a\u6570 ##\u540e\u9762\u8fd9\u5f15\u5165\u6bb5\u7701\u7565 from django.db.models import Avg,Max,Min,Count ##\u67e5\u8be2\u6bcf\u4e00\u4e2a\u51fa\u7248\u793e\u51fa\u7248\u7684\u4e66\u7c4d\u7684\u4e2a\u6570 ret = Book.objects.values('publish_id').annotate(Cout('title')) print(ret) 2\u3001\u67e5\u8be2\u6bcf\u4e00\u4e2a\u51fa\u7248\u793e\u7684\u540d\u79f0\u4ee5\u53ca\u51fa\u7248\u4e66\u7c4d\u7684\u4e2a\u6570 (1)SQL\u65b9\u6cd5\uff1a select publish.name,Count('title') from book inner join publish on book.publish_id = publish.nid group by publish_nid (2)annotate\u65b9\u6cd5\uff1a \u6ce8\u610f\uff0cPublish\u67e5Book\u662f\u53cd\u5411\u67e5\u8be2\uff0c\u6309\u201c\u8868\u540d\u201d A: ret = Publish.objects.values('name').annotate(count=Count('book__title')) print(ret) #<QuerySet [{'name': '\u82f9\u679c\u51fa\u7248\u793e', 'count': 1}, {'name': '333', 'count': 4}]> ############################################################################### B: ret = Publish.objects.values('name').annotate(count=Count('book__title')).values('name', 'count') print(ret) #<QuerySet [{'name': '\u82f9\u679c\u51fa\u7248\u793e', 'count': 1}, {'name': '333', 'count': 4}]> 3\u3001\u67e5\u8be2\u6bcf\u4e00\u4e2a\u4f5c\u8005\u7684\u540d\u5b57\u4ee5\u53ca\u51fa\u7248\u8fc7\u7684\u4e66\u7c4d\u7684\u6700\u9ad8\u4ef7\u683c (1)SQL\u65b9\u6cd5 select author.name,Max(book.price) from book inner join book_authors on book.nid = book_authors.book_id inner join author on autohr.nid = book_authors.author_id group by author.nid (2)annotate\u65b9\u6cd5 \u6ce8\u610f\u4e3b\u952e\u53ef\u4ee5\u7528 pk \u8868\u793a\uff1bAuthor\u627eBook\u662f\u201c\u53cd\u5411\u67e5\u8be2\u201d\u6309\u8868\u540d\u5c0f\u5199 ret = Author.objects.values('pk').annotate(max_price=Max('book__price')).values('name','max_price') print(ret) #<QuerySet[{'name':'whw','max_price':Decimal('200.00')},{'name':'www','max_price': Decimal('200.00')}]> 4\u3001\u67e5\u8be2\u6bcf\u4e00\u4e2a\u4e66\u7c4d\u7684\u540d\u79f0\u4ee5\u53ca\u5bf9\u5e94\u7684\u4f5c\u8005\u7684\u4e2a\u6570 \u201c\u6b63\u5411\u67e5\u8be2\u6309\u5b57\u6bb5\u201d ret = Book.objects.values('pk').annotate(c=Count('authors__name')).values('title','c') print(ret) # <QuerySet [{'title': '\u4e09\u56fd\u7fa4\u82f1\u4f20', 'c': 1}, {'title': '\u4e09\u56fd\u7fa4\u82f1', 'c': 2}, {'title': '\u91d1\u74f6', 'c': 0}, {'title': '\u6c34\u6d52\u4f20', 'c': 0}, {'title': '\u91d1\u74f6', 'c': 0}]> 5\u3001\u7edf\u8ba1\u6bcf\u4e00\u672c\u4ee5\u201c\u4e09\u201d\u5b57\u5f00\u5934\u7684\u4e66\u7c4d\u7684\u4f5c\u8005\u7684\u4e2a\u6570\uff1aBook\u627eAuthor\u662f\u591a\u5bf9\u591a\uff0c\u800c\u4e14\u662f\u201c\u6b63\u5411\u67e5\u8be2\u201d\u6309\u5b57\u6bb5 ret = Book.objects.filter(title__startswith='\u4e09').annotate(c=Count('authors__name')).values('title','c') print(ret) #<QuerySet [{'title': '\u4e09\u56fd\u7fa4\u82f1\u4f20', 'c': 1}, {'title': '\u4e09\u56fd\u7fa4\u82f1', 'c': 2}]> 6\u3001\u7edf\u8ba1\u4e0d\u6b62\u4e00\u4e2a\u4f5c\u8005\u7684\u4e66\u7c4d\u7684\u540d\u5b57\uff1aBook\u627eAuthor\u662f\u591a\u5bf9\u591a\uff0c\u800c\u4e14\u662f\u201c\u6b63\u5411\u67e5\u8be2\u201d\u6309\u5b57\u6bb5 ret = Book.objects.values('pk').annotate(num_authors=Count('authors__name')).filter(num_authors__gt=1).values('title','num_authors') print(ret) 7\u3001\u6839\u636e\u4e00\u672c\u56fe\u4e66\u4f5c\u8005\u6570\u91cf\u7684\u591a\u5c11\u5bf9\u67e5\u8be2\u96c6 QuerySet\u8fdb\u884c\u6392\u5e8f Book.objects.annotate(num_authors=Count('authors')).order_by('num_authors') 8\u3001\u67e5\u8be2\u5404\u4e2a\u4f5c\u8005\u51fa\u7684\u4e66\u7684\u603b\u4ef7\u683c #\u6309author\u8868\u7684\u6240\u6709\u5b57\u6bb5 group by queryResult=Author.objects .annotate(SumPrice=Sum(\"book__price\")) \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"name\",\"SumPrice\") print(queryResult)","title":"\u4e00\u4e9b\u591a\u8868\u5206\u7ec4\u67e5\u8be2\u7684\u7ec3\u4e60"},{"location":"Django\u6838\u5fc3/\u4e2d\u95f4\u4ef6/","text":"Django\u4e2d\u7684\u4e2d\u95f4\u4ef6\u7b80\u4ecb \u4e2d\u95f4\u4ef6 \u987e\u540d\u601d\u4e49\uff0c\u662f\u4ecb\u4e8erequest\u4e0eresponse\u5904\u7406\u4e4b\u95f4\u7684\u4e00\u9053\u5904\u7406\u8fc7\u7a0b\uff0c\u76f8\u5bf9\u6bd4\u8f83\u8f7b\u91cf\u7ea7\uff0c\u5e76\u4e14\u5728 \u5168\u5c40 \u4e0a\u6539\u53d8django\u7684\u8f93\u5165\u4e0e\u8f93\u51fa\u3002 \u56e0\u4e3a\u6539\u53d8\u7684\u662f\u5168\u5c40\uff0c\u6240\u4ee5\u9700\u8981\u8c28\u614e\u5b9e\u7528\uff0c\u7528\u4e0d\u597d\u4f1a\u5f71\u54cd\u5230\u6027\u80fd \u3002 \u5982\u679c\u4f60\u60f3\u4fee\u6539\u8bf7\u6c42\uff0c\u4f8b\u5982\u88ab\u4f20\u9001\u5230view\u4e2d\u7684HttpRequest\u5bf9\u8c61\uff0c \u6216\u8005\u4f60\u60f3\u4fee\u6539view\u8fd4\u56de\u7684HttpResponse\u5bf9\u8c61\uff0c\u4f60\u8fd8\u60f3\u5728view\u6267\u884c\u4e4b\u524d\u505a\u4e00\u4e9b\u64cd\u4f5c\uff0c\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u901a\u8fc7\u4e2d\u95f4\u4ef6\u6765\u5b9e\u73b0\u3002 \u8bf4\u7684\u76f4\u767d\u4e00\u70b9\u4e2d\u95f4\u4ef6\u662f\u5e2e\u52a9\u6211\u4eec\u5728\u89c6\u56fe\u51fd\u6570\u6267\u884c\u4e4b\u524d\u548c\u6267\u884c\u4e4b\u540e\u90fd\u53ef\u4ee5\u505a\u4e00\u4e9b\u989d\u5916\u7684\u64cd\u4f5c\uff0c\u5b83\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7c7b\uff0c\u7c7b\u4e2d\u5b9a\u4e49\u4e86\u51e0\u4e2a\u65b9\u6cd5\uff0cDjango\u6846\u67b6\u4f1a\u5728\u8bf7\u6c42\u7684\u7279\u5b9a\u7684\u65f6\u95f4\u53bb\u6267\u884c\u8fd9\u4e9b\u65b9\u6cd5\u3002 \u6253\u5f00Django\u9879\u76ee\u7684Settings.py\u6587\u4ef6\uff0c\u770b\u5230\u4e0b\u9762\u7684MIDDLEWARE\u914d\u7f6e\u9879\uff0cdjango\u9ed8\u8ba4\u81ea\u5e26\u7684\u4e00\u4e9b\u4e2d\u95f4\u4ef6\uff087\u4e2a\uff09\uff1a MIDDLEWARE = [ 'django.middleware.security.SecurityMiddleware', 'django.contrib.sessions.middleware.SessionMiddleware', 'django.middleware.common.CommonMiddleware', 'django.middleware.csrf.CsrfViewMiddleware', 'django.contrib.auth.middleware.AuthenticationMiddleware', 'django.contrib.messages.middleware.MessageMiddleware', 'django.middleware.clickjacking.XFrameOptionsMiddleware', ] MIDDLEWARE\u914d\u7f6e\u9879\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u5217\u8868\u4e2d\u662f\u4e00\u4e2a\u4e2a\u5b57\u7b26\u4e32\uff0c\u8fd9\u4e9b\u5b57\u7b26\u4e32\u5176\u5b9e\u662f\u4e00\u4e2a\u4e2a\u7c7b\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u4e2a\u4e2d\u95f4\u4ef6\u3002 \u5173\u4e8eDjango\u5185\u7f6e\u7684\u4e2d\u95f4\u4ef6\uff0c\u5982\u679c\u6709\u5174\u8da3\u7684\u8bdd\u5efa\u8bae\u5927\u5bb6\u53c2\u8003\u4e0b\u9762\u8fd9\u7bc7\u6587\u7ae0\uff1a Django\u5185\u7f6e\u7684\u4e2d\u95f4\u4ef6\u8bf4\u660e \u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u7684\u4f7f\u7528 \u5728\u9879\u76ee\u4e2d\u521b\u5efa\u4e00\u4e2a\u5305\uff0c\u968f\u4fbf\u8d77\u540d\u5b57\uff0c\u4e00\u822c\u90fd\u653e\u5728\u4e00\u4e2a\u53eb\u505autils\u7684\u5305\u91cc\u9762\uff0c\u8868\u793a\u4e00\u4e2a\u516c\u7528\u7684\u7ec4\u4ef6\uff0c\u521b\u5efa\u4e00\u4e2apy\u6587\u4ef6\uff0c\u968f\u4fbf\u8d77\u540d\u5b57\uff0c\u4f8b\u5982\u53eb\u505amiddlewares.py\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a from django.utils.deprecation import MiddlewareMixin class MD1(MiddlewareMixin): #\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\uff0c\u4e0d\u662f\u5fc5\u987b\u8981\u6709\u4e0b\u9762\u8fd9\u4e24\u4e2a\u65b9\u6cd5\uff0c\u6709request\u65b9\u6cd5\u8bf4\u660e\u8bf7\u6c42\u6765\u4e86\u8981\u5904\u7406\uff0c\u6709response\u65b9\u6cd5\u8bf4\u660e\u54cd\u5e94\u51fa\u53bb\u65f6\u9700\u8981\u5904\u7406\uff0c\u4e0d\u662f\u975e\u8981\u5199\u8fd9\u4e24\u4e2a\u65b9\u6cd5\uff0c #\u5982\u679c\u4f60\u6ca1\u5199process_response\u65b9\u6cd5\uff0c\u90a3\u4e48\u4f1a\u4e00\u5c42\u4e00\u5c42\u7684\u5f80\u4e0a\u627e\uff0c\u54ea\u4e2a\u4e2d\u95f4\u4ef6\u6709process_response\u65b9\u6cd5\u5c31\u5c06\u8fd4\u56de\u5bf9\u8c61\u7ed9\u54ea\u4e2a\u4e2d\u95f4\u4ef6 def process_request(self, request): print(\"MD1\u91cc\u9762\u7684 process_request\") def process_response(self, request, response): print(\"MD1\u91cc\u9762\u7684 process_response\") return response \u5728settings.py\u7684MIDDLEWARE\u914d\u7f6e\u9879\u4e2d\u6ce8\u518c: MIDDLEWARE = [ 'django.middleware.security.SecurityMiddleware', 'django.contrib.sessions.middleware.SessionMiddleware', 'django.middleware.common.CommonMiddleware', 'django.middleware.csrf.CsrfViewMiddleware', 'django.contrib.auth.middleware.AuthenticationMiddleware', 'django.contrib.messages.middleware.MessageMiddleware', 'django.middleware.clickjacking.XFrameOptionsMiddleware', # \u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6MD1\uff0c\u8fd9\u4e2a\u5199\u7684\u662f\u4f60\u9879\u76ee\u8def\u5f84\u4e0b\u7684\u4e00\u4e2a\u8def\u5f84 # \u4f8b\u5982\uff0c\u5982\u679c\u4f60\u653e\u5728\u9879\u76ee\u4e0b\uff0c\u6587\u4ef6\u5939\u540d\u6210\u4e3autils\uff0c\u90a3\u4e48\u8fd9\u91cc\u5e94\u8be5\u5199utils.middlewares.MD1 'utils.middlewares.MD1', ] \u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u81ea\u5df1\u5b9a\u5236\u7684\u4e2d\u95f4\u4ef6\u5b9e\u73b0\u5177\u4f53\u7684\u529f\u80fd\u4e86\u3002 Django\u4e2d\u95f4\u4ef6\u76845\u4e2a\u65b9\u6cd5\u4ee5\u53ca\u6267\u884c\u987a\u5e8f\u4ecb\u7ecd \u5173\u4e8eDjango\u4e2d\u95f4\u4ef6\u76845\u4e2a\u65b9\u6cd5\u9700\u8981\u5927\u5bb6\u7262\u8bb0\u4e0b\u9762\u51e0\u70b9\uff1a 1\u3001\u6bcf\u4e2a\u65b9\u6cd5\u7684\u89e6\u53d1\u6761\u4ef6\uff1b 2\u3001\u6bcf\u4e2a\u65b9\u6cd5\u5728 \u4e2d\u95f4\u4ef6\u6ce8\u518c\u987a\u5e8f \u4e0b\u7684 \u6267\u884c\u987a\u5e8f \uff1b 3\u3001\u4e2d\u95f4\u4ef6\u7684\u6ce8\u518c\u987a\u5e8f\u5c31\u662fMIDDLEWARE\u5217\u8868\u5404\u4e2a\u4e2d\u95f4\u4ef6\"\u5b57\u7b26\u4e32\"\u7684\u987a\u5e8f\uff0c\u89c4\u5b9a\u4e0b\u6807\u7531\u5c0f\u5230\u5927\u4e3a\u987a\u5e8f\u3002 \u8bf4\u660e \u5b9e\u9645\u4e2d\u6700\u5e38\u7528\u7684\u662f process_request \u4e0e process_response \u65b9\u6cd5\uff0c\u672c\u7bc7\u7740\u91cd\u4ecb\u7ecd\u524d\u4e24\u4e2a\u65b9\u6cd5\uff0c\u540e\u9762\u7684\u65b9\u6cd5\u5927\u5bb6\u77e5\u9053\u5176 \u89e6\u53d1\u6761\u4ef6 \u4e0e \u6267\u884c\u987a\u5e8f \u5373\u53ef\u3002 \u4e00\u3001process_request\u65b9\u6cd5 \u8bf7\u6c42\u6765\u7684\u65f6\u5019\u8fc7\u4e2d\u95f4\u4ef6\u4f1a\u81ea\u52a8\u6267\u884c\u7684\u65b9\u6cd5 process_request(self,request) process_request\u6709\u4e00\u4e2a\u53c2\u6570\uff0c\u5c31\u662frequest\uff0c\u8fd9\u4e2arequest\u548c\u89c6\u56fe\u51fd\u6570\u4e2d\u7684request\u662f\u4e00\u6837\u7684\u3002 \u5b83\u7684\u8fd4\u56de\u503c\u53ef\u4ee5\u662fNone\u4e5f\u53ef\u4ee5\u662fHttpResponse\u5bf9\u8c61\u3002\u8fd4\u56de\u503c\u662fNone\u7684\u8bdd\uff0c\u6309\u6b63\u5e38\u6d41\u7a0b\u7ee7\u7eed\u8d70\uff0c\u4ea4\u7ed9\u4e0b\u4e00\u4e2a\u4e2d\u95f4\u4ef6\u5904\u7406\uff0c\u5982\u679c\u662fHttpResponse\u5bf9\u8c61\uff0cDjango\u5c06\u4e0d\u6267\u884c\u89c6\u56fe\u51fd\u6570\uff0c\u800c\u5c06\u76f8\u5e94\u5bf9\u8c61\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668\u3002 \u6267\u884c\u987a\u5e8f\uff1a \u6839\u636e\u4e2d\u95f4\u4ef6\u7684\u6ce8\u518c\u987a\u5e8f\uff0c\u987a\u5e8f\u6267\u884c \u3002 process_request\u65b9\u6cd5\u7684\u4e00\u4e2a\u7b80\u5355\u5b9e\u4f8b \u5148\u81ea\u5b9a\u4e492\u4e2a\u4e2d\u95f4\u4ef6\uff1a from django.utils.deprecation import MiddlewareMixin class MD1(MiddlewareMixin): def process_request(self, request): print(\"MD1\u91cc\u9762\u7684 process_request\") class MD2(MiddlewareMixin): def process_request(self, request): print(\"MD2\u91cc\u9762\u7684 process_request\") \u7136\u540e\u5728settings\u4e2d\u6ce8\u518c\uff08\u6ce8\u518c\u7684\u987a\u5e8f\u662fMD1\u5728MD2\u7684\u4e0a\u9762\uff09\uff1a MIDDLEWARE = [ 'django.middleware.security.SecurityMiddleware', 'django.contrib.sessions.middleware.SessionMiddleware', 'django.middleware.common.CommonMiddleware', 'django.middleware.csrf.CsrfViewMiddleware', 'django.contrib.auth.middleware.AuthenticationMiddleware', 'django.contrib.messages.middleware.MessageMiddleware', 'django.middleware.clickjacking.XFrameOptionsMiddleware', 'utils.middlewares.MD1', #\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6MD1 'utils.middlewares.MD2' #\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6MD2 ] \u6b64\u65f6\uff0c\u6211\u4eec\u8bbf\u95ee\u4e00\u4e2a\u89c6\u56fe\uff0c\u4f1a\u53d1\u73b0\u7ec8\u7aef\u4e2d\u6253\u5370\u5982\u4e0b\u5185\u5bb9\uff1a # \u5148\u6267\u884c\u5b8c\u4e2d\u95f4\u4ef6\u4e2d\u7684process_request\u65b9\u6cd5\u518d\u6267\u884c\u89c6\u56fe\u51fd\u6570\u4e2d\u7684\u5185\u5bb9 MD1\u91cc\u9762\u7684 process_request MD2\u91cc\u9762\u7684 process_request app \u4e2d\u7684 index\u89c6\u56fe \u4e8c\u3001process_response\u65b9\u6cd5 \u54cd\u5e94\u56de\u53bb\u4f1a\u81ea\u52a8\u6267\u884c\u7684\u65b9\u6cd5\u3002 process_response(self, request, response) \u5b83\u6709\u4e24\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a\u662frequest\uff0c\u4e00\u4e2a\u662fresponse\uff0crequest\u5c31\u662f\u4e0a\u8ff0\u4f8b\u5b50\u4e2d\u4e00\u6837\u7684\u5bf9\u8c61\uff0cresponse\u662f\u89c6\u56fe\u51fd\u6570\u8fd4\u56de\u7684HttpResponse\u5bf9\u8c61\u3002 \u8be5\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u4e5f\u5fc5\u987b\u662fHttpResponse\u5bf9\u8c61 \u3002 \u4efb\u610f\u4e00\u4e2a\u4e2d\u95f4\u4ef6\u7684process_request\u65b9\u6cd5\u91cc\u9762\u5982\u679c\u51fa\u73b0\u4e86return\u4e00\u4e2aHttpResponse\u5bf9\u8c61,\u90a3\u4e48\u5c31\u4f1a\u4e0d\u7ee7\u7eed\u6267\u884c\u5176\u4ed6\u5185\u5bb9\u4e86,\u800c\u662f\u76f4\u63a5\u6267\u884c\u5404\u4e2a\u4e2d\u95f4\u4ef6\u7684process_response\u65b9\u6cd5\u3002 \u5982\u679c\u81ea\u5df1\u7684\u4e2d\u95f4\u4ef6\u91cc\u9762\u6709process_response\u8fd9\u4e2a\u65b9\u6cd5,\u4f1a\u5148\u6267\u884c\u5b83\u81ea\u5df1\u7684\uff0c\u5982\u679c\u81ea\u5df1\u7684\u4e2d\u95f4\u4ef6\u91cc\u9762\u6709process_response\u8fd9\u4e2a\u65b9\u6cd5 \u8fd4\u56de\u81ea\u5df1return\u7684\u5185\u5bb9\u3002 \u6267\u884c\u987a\u5e8f\uff1a \u6839\u636e\u4e2d\u95f4\u4ef6\u7684\u6ce8\u518c\u987a\u5e8f\uff0c\u5012\u5e8f\u6267\u884c \u3002 process_response\u65b9\u6cd5\u5177\u4f53\u4ee3\u7801\u8bf4\u660e\uff1a from django.utils.deprecation import MiddlewareMixin class MD1(MiddlewareMixin): def process_request(self, request): print(\"MD1\u91cc\u9762\u7684 process_request\") #\u4e0d\u5fc5\u987b\u5199return\u503c #request\u548cresponse\u4e24\u4e2a\u53c2\u6570\u5fc5\u987b\u6709\uff0c\u540d\u5b57\u968f\u4fbf\u53d6 def process_response(self, request, response): print(\"MD1\u91cc\u9762\u7684 process_response\") #print(response.__dict__['_container'][0].decode('utf-8')) #\u67e5\u770b\u54cd\u5e94\u4f53\u91cc\u9762\u7684\u5185\u5bb9\u7684\u65b9\u6cd5\uff0c\u6216\u8005\u76f4\u63a5\u4f7f\u7528response.content\u4e5f\u53ef\u4ee5\u770b\u5230\u54cd\u5e94\u4f53\u91cc\u9762\u7684\u5185\u5bb9\uff0c #\u7531\u4e8eresponse\u662f\u4e2a\u53d8\u91cf\uff0c\u76f4\u63a5\u70b9\u51fb\u770b\u6e90\u7801\u662f\u770b\u4e0d\u5230\u7684\uff0c\u4f60\u6253\u5370type(response)\u53d1\u73b0\u662fHttpResponse\u5bf9\u8c61\uff0c #\u67e5\u770b\u8fd9\u4e2a\u5bf9\u8c61\u7684\u6e90\u7801\u5c31\u77e5\u9053\u6709\u4ec0\u4e48\u65b9\u6cd5\u53ef\u4ee5\u7528\u4e86\u3002 #\u5fc5\u987b\u6709\u8fd4\u56de\u503c\uff0c\u5199return response \uff0c\u8fd9\u4e2aresponse\u5c31\u50cf\u4e00\u4e2a\u63a5\u529b\u68d2\u4e00\u6837 \u3000\u3000\u3000\u3000 return response #return HttpResponse('666') ,\u5982\u679c\u4f60\u5199\u4e86\u8fd9\u4e2a\uff0c\u90a3\u4e48\u4f60\u89c6\u56fe\u8fd4\u56de\u8fc7\u6765\u7684\u5185\u5bb9\u5c31\u88ab\u5b83\u7ed9\u66ff\u4ee3\u4e86 class MD2(MiddlewareMixin): def process_request(self, request): print(\"MD2\u91cc\u9762\u7684 process_request\") pass #request\u548cresponse\u4e24\u4e2a\u53c2\u6570\u5fc5\u987b\u8981\u6709\uff0c\u540d\u5b57\u968f\u4fbf\u53d6 def process_response(self, request, response): print(\"MD2\u91cc\u9762\u7684 process_response\") #\u5fc5\u987b\u8fd4\u56deresponse\uff0c\u4e0d\u7136\u4f60\u4e0a\u5c42\u7684\u4e2d\u95f4\u4ef6\u5c31\u6ca1\u6709\u62ff\u5230httpresponse\u5bf9\u8c61\uff0c\u5c31\u4f1a\u62a5\u9519 return response \u8bbf\u95ee\u4e00\u4e2a\u89c6\u56fe\uff0c\u770b\u4e00\u4e0b\u7ec8\u7aef\u7684\u8f93\u51fa\uff1a MD2\u91cc\u9762\u7684 process_request MD1\u91cc\u9762\u7684 process_request app \u4e2d\u7684 index\u89c6\u56fe MD1\u91cc\u9762\u7684 process_response MD2\u91cc\u9762\u7684 process_response process_request\u65b9\u6cd5\u4e0eprocess_response\u7684\u91cd\u8981\u7ed3\u8bba 1\u3001\u4e2d\u95f4\u4ef6\u7684process_request\u65b9\u6cd5\u662f\u5728\u6267\u884c\u89c6\u56fe\u51fd\u6570\u4e4b\u524d\u6267\u884c\u7684\u3002 2\u3001\u5f53\u914d\u7f6e\u591a\u4e2a\u4e2d\u95f4\u4ef6\u65f6\uff0c\u4f1a\u6309\u7167MIDDLEWARE\u4e2d\u7684\u6ce8\u518c\u987a\u5e8f\uff0c\u4e5f\u5c31\u662f\u5217\u8868\u7684\u7d22\u5f15\u503c\uff0c\u4ece\u524d\u5230\u540e\u4f9d\u6b21\u6267\u884c\u7684\u3002 3\u3001\u4e0d\u540c\u4e2d\u95f4\u4ef6\u4e4b\u95f4\u4f20\u9012\u7684request\u90fd\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\u3002 4\u3001\u591a\u4e2a\u4e2d\u95f4\u4ef6\u4e2d\u7684process_response\u65b9\u6cd5\u662f\u6309\u7167MIDDLEWARE\u4e2d\u7684\u6ce8\u518c\u987a\u5e8f\u5012\u5e8f\u6267\u884c\u7684\uff0c \u4e5f\u5c31\u662f\u8bf4\u7b2c\u4e00\u4e2a\u4e2d\u95f4\u4ef6\u7684process_request\u65b9\u6cd5\u9996\u5148\u6267\u884c\uff0c\u800c\u5b83\u7684process_response\u65b9\u6cd5\u6700\u540e\u6267\u884c\uff0c \u6700\u540e\u4e00\u4e2a\u4e2d\u95f4\u4ef6\u7684process_request\u65b9\u6cd5\u6700\u540e\u4e00\u4e2a\u6267\u884c\uff0c\u5b83\u7684process_response\u65b9\u6cd5\u662f\u6700\u5148\u6267\u884c\u3002 process_request\u4e2d\u65ad\u8bf7\u6c42\u7684\u4f8b\u5b50 from django.utils.deprecation import MiddlewareMixin from django.shortcuts import HttpResponse class Md1(MiddlewareMixin): def process_request(self,request): print(\"Md1\u8bf7\u6c42\") \u3000\u3000\u3000\u3000 #process_request\u65b9\u6cd5\u91cc\u9762\u4e0d\u5199\u8fd4\u56de\u503c\uff0c\u9ed8\u8ba4\u4e5f\u662f\u8fd4\u56deNone\uff0c #\u5982\u679c\u4f60\u81ea\u5df1\u5199\u4e86return None\uff0c\u4e5f\u662f\u4e00\u6837\u7684\u6548\u679c\uff0c\u4e0d\u4f1a\u4e2d\u65ad\u4f60\u7684\u8bf7\u6c42\uff0c\u4f46\u662f\u5982\u679c\u4f60return\u7684\u4e00\u4e2ahttpresponse\u5bf9\u8c61\uff0c #\u90a3\u4e48\u5c31\u4f1a\u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u65ad\u4f60\u7684\u8bf7\u6c42\uff0c\u76f4\u63a5\u8fd4\u56de\u7ed9\u7528\u6237\uff0c\u8fd9\u5c31\u6210\u4e86\u975e\u6b63\u5e38\u7684\u6d41\u7a0b\u4e86 #\u5e76\u4e14\uff0c\u5982\u679c\u4f60\u5728\u8fd9\u91ccreturn\u4e86httpresponse\u5bf9\u8c61\uff0c\u90a3\u4e48\u4f1a\u4ece\u4f60\u8fd9\u4e2a\u4e2d\u95f4\u4ef6\u7c7b\u4e2d\u7684process_response\u65b9\u6cd5\u5f00\u59cb\u6267\u884c\u8fd4\u56de\u64cd\u4f5c\uff0c #\u6240\u4ee5\u8fd9\u4e2a\u7c7b\u91cc\u9762\u53ea\u8981\u6709process_response\u65b9\u6cd5\uff0c\u80af\u5b9a\u4f1a\u6267\u884c def process_response(self,request,response): print(\"Md1\u8fd4\u56de\") return response class Md2(MiddlewareMixin): def process_request(self,request): print(\"Md2\u8bf7\u6c42\") return HttpResponse(\"Md2\u4e2d\u65ad\") def process_response(self,request,response): print(\"Md2\u8fd4\u56de\") return response \u540e\u53f0\u6253\u5370\u5982\u4e0b\uff1a Md1\u8bf7\u6c42 Md2\u8bf7\u6c42 Md2\u8fd4\u56de Md1\u8fd4\u56de \u7b80\u5355\u7684session\u8ba4\u8bc1\u7684\u4f8b\u5b50 \u6ce8\u610f\uff0c\u8fd9\u4e2a\u65b0\u5b9a\u4e49\u7684\u4e2d\u95f4\u4ef6\u4e0d\u80fd\u6ce8\u518c\u5728session\u4e2d\u95f4\u4ef6\u4e0a\u9762\uff01 class M1(MiddlewareMixin): def process_request(self,request): #\u8bbe\u7f6e\u8def\u5f84\u767d\u540d\u5355\uff0c\u53ea\u8981\u8bbf\u95ee\u7684\u662flogin\u767b\u9646\u8def\u5f84\uff0c\u5c31\u4e0d\u505a\u8fd9\u4e2acookie\u8ba4\u8bc1 if request.path not in [reverse('login'),]: print('\u6211\u662fM1\u4e2d\u95f4\u4ef6') #\u5ba2\u6237\u7aefIP\u5730\u5740 # return HttpResponse('sorry,\u6ca1\u6709\u901a\u8fc7\u6211\u7684M1\u4e2d\u95f4\u4ef6') is_login = request.COOKIES.get('is_login', False) if is_login: pass else: # return render(request,'login.html') return redirect(reverse('login')) else: return None #\u522b\u5fd8\u4e86return None\uff0c\u6216\u8005\u76f4\u63a5\u5199\u4e2apass def process_response(self,request,response): print('M1\u54cd\u5e94\u90e8\u5206') # print(response.__dict__['_container'][0].decode('utf-8')) return response # return HttpResponse('\u778e\u641e') \u4e09\u3001process_view\u65b9\u6cd5 process_view(self, request, view_func, view_args, view_kwargs) \u89e6\u53d1\u6761\u4ef6\uff1aurl\u5206\u53d1\u4e4b\u540e\uff0c\u89c6\u56fe\u6267\u884c\u4e4b\u524d\u6267\u884c\u3002 \u6267\u884c\u987a\u5e8f\uff1a\u6839\u636e\u6ce8\u518c\u7684\u987a\u5e8f\uff0c\u987a\u5e8f\u6267\u884c\u3002 \u56db\u3001process_exception\u65b9\u6cd5 process_exception(self, request, exception) \u89e6\u53d1\u6761\u4ef6\uff1a\u89c6\u56fe\u51fd\u6570\u62a5\u9519\u4e86\u4f1a\u6267\u884c\u3002 \u6267\u884c\u987a\u5e8f\uff1a\u6839\u636e\u6ce8\u518c\u7684\u987a\u5e8f\uff0c\u5012\u5e8f\u6267\u884c\u3002 \u4e94\u3001process_template_response\u65b9\u6cd5 process_template_response(self,request,response) \u89e6\u53d1\u6761\u4ef6\uff1aHttpResponse\u5bf9\u8c61\u91cc\u9762\u5fc5\u987b\u6709\u4e2arender\u51fd\u6570\u624d\u4f1a\u6267\u884cprocess_template_response\u65b9\u6cd5\u3002 \u6267\u884c\u987a\u5e8f\uff1a\u6839\u636e\u6ce8\u518c\u7684\u987a\u5e8f\uff0c\u5012\u5e8f\u6267\u884c\u3002 \u6ce8\u610f\uff0crender\u51fd\u6570\u91cc\u9762\u5fc5\u987breturn\u4e00\u4e2aHttpResponse\u5bf9\u8c61\u3002 \u56fe\u89e3\u4e2d\u95f4\u4ef6\u7684\u6267\u884c\u6d41\u7a0b 1\u3001\u8bf7\u6c42\u5230\u8fbe\u4e2d\u95f4\u4ef6\u4e4b\u540e\uff0c\u5148\u6309\u7167\u6b63\u5e8f\u6267\u884c\u6bcf\u4e2a\u6ce8\u518c\u4e2d\u95f4\u4ef6\u7684process_reques\u65b9\u6cd5\uff0cprocess_request\u65b9\u6cd5\u8fd4\u56de\u7684\u503c\u662fNone\uff0c\u5c31\u4f9d\u6b21\u6267\u884c\uff0c\u5982\u679c\u8fd4\u56de\u7684\u503c\u662fHttpResponse\u5bf9\u8c61\uff0c\u4e0d\u518d\u6267\u884c\u540e\u9762\u7684process_request\u65b9\u6cd5\uff0c\u800c\u662f\u6267\u884c\u5f53\u524d\u5bf9\u5e94\u4e2d\u95f4\u4ef6\u7684process_response\u65b9\u6cd5\uff0c\u5c06HttpResponse\u5bf9\u8c61\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668\u3002\uff08\u4e5f\u5c31\u662f\u8bf4\uff1a\u5982\u679cMIDDLEWARE\u4e2d\u6ce8\u518c\u4e866\u4e2a\u4e2d\u95f4\u4ef6\uff0c\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u7b2c3\u4e2a\u4e2d\u95f4\u4ef6\u8fd4\u56de\u4e86\u4e00\u4e2aHttpResponse\u5bf9\u8c61\uff0c\u90a3\u4e48\u7b2c4,5,6\u4e2d\u95f4\u4ef6\u7684process_request\u548cprocess_response\u65b9\u6cd5\u90fd\u4e0d\u6267\u884c\uff0c\u987a\u5e8f\u6267\u884c3,2,1\u4e2d\u95f4\u4ef6\u7684process_response\u65b9\u6cd5\u3002\uff09 2\u3001process_request\u65b9\u6cd5\u90fd\u6267\u884c\u5b8c\u540e\uff0c\u5339\u914d\u8def\u7531\uff0c\u627e\u5230\u8981\u6267\u884c\u7684\u89c6\u56fe\u51fd\u6570\uff0c\u5148\u4e0d\u6267\u884c\u89c6\u56fe\u51fd\u6570\uff0c\u5148\u6267\u884c\u4e2d\u95f4\u4ef6\u4e2d\u7684process_view\u65b9\u6cd5\uff0cprocess_view\u65b9\u6cd5\u8fd4\u56deNone\uff0c\u7ee7\u7eed\u6309\u987a\u5e8f\u6267\u884c\uff0c\u6240\u6709process_view\u65b9\u6cd5\u6267\u884c\u5b8c\u540e\u6267\u884c\u89c6\u56fe\u51fd\u6570\u3002\uff08\u52a0\u5165\u4e2d\u95f4\u4ef63 \u7684process_view\u65b9\u6cd5\u8fd4\u56de\u4e86HttpResponse\u5bf9\u8c61\uff0c\u52194,5,6\u7684process_view\u4ee5\u53ca\u89c6\u56fe\u51fd\u6570\u90fd\u4e0d\u6267\u884c\uff0c\u76f4\u63a5\u4ece\u6700\u540e\u4e00\u4e2a\u4e2d\u95f4\u4ef6\uff0c\u4e5f\u5c31\u662f\u4e2d\u95f4\u4ef66\u7684process_response\u65b9\u6cd5\u5f00\u59cb\u5012\u5e8f\u6267\u884c\u3002\uff09 3\u3001process_template_response\u548cprocess_exception\u4e24\u4e2a\u65b9\u6cd5\u7684\u89e6\u53d1\u662f\u6709\u6761\u4ef6\u7684\uff0c\u6267\u884c\u987a\u5e8f\u4e5f\u662f\u5012\u5e8f\u3002\u603b\u7ed3\u6240\u6709\u7684\u6267\u884c\u6d41\u7a0b\u5982\u4e0b\uff1a \u4e2d\u95f4\u4ef6\u4f7f\u7528\u7684\u51e0\u4e2a\u7b80\u5355\u5b9e\u4f8b \u4e2d\u95f4\u4ef6\u7684\u51e0\u4e2a\u7b80\u5355\u5b9e\u4f8b","title":"06 \u4e2d\u95f4\u4ef6"},{"location":"Django\u6838\u5fc3/\u4e2d\u95f4\u4ef6/#django","text":"\u4e2d\u95f4\u4ef6 \u987e\u540d\u601d\u4e49\uff0c\u662f\u4ecb\u4e8erequest\u4e0eresponse\u5904\u7406\u4e4b\u95f4\u7684\u4e00\u9053\u5904\u7406\u8fc7\u7a0b\uff0c\u76f8\u5bf9\u6bd4\u8f83\u8f7b\u91cf\u7ea7\uff0c\u5e76\u4e14\u5728 \u5168\u5c40 \u4e0a\u6539\u53d8django\u7684\u8f93\u5165\u4e0e\u8f93\u51fa\u3002 \u56e0\u4e3a\u6539\u53d8\u7684\u662f\u5168\u5c40\uff0c\u6240\u4ee5\u9700\u8981\u8c28\u614e\u5b9e\u7528\uff0c\u7528\u4e0d\u597d\u4f1a\u5f71\u54cd\u5230\u6027\u80fd \u3002 \u5982\u679c\u4f60\u60f3\u4fee\u6539\u8bf7\u6c42\uff0c\u4f8b\u5982\u88ab\u4f20\u9001\u5230view\u4e2d\u7684HttpRequest\u5bf9\u8c61\uff0c \u6216\u8005\u4f60\u60f3\u4fee\u6539view\u8fd4\u56de\u7684HttpResponse\u5bf9\u8c61\uff0c\u4f60\u8fd8\u60f3\u5728view\u6267\u884c\u4e4b\u524d\u505a\u4e00\u4e9b\u64cd\u4f5c\uff0c\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u901a\u8fc7\u4e2d\u95f4\u4ef6\u6765\u5b9e\u73b0\u3002 \u8bf4\u7684\u76f4\u767d\u4e00\u70b9\u4e2d\u95f4\u4ef6\u662f\u5e2e\u52a9\u6211\u4eec\u5728\u89c6\u56fe\u51fd\u6570\u6267\u884c\u4e4b\u524d\u548c\u6267\u884c\u4e4b\u540e\u90fd\u53ef\u4ee5\u505a\u4e00\u4e9b\u989d\u5916\u7684\u64cd\u4f5c\uff0c\u5b83\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7c7b\uff0c\u7c7b\u4e2d\u5b9a\u4e49\u4e86\u51e0\u4e2a\u65b9\u6cd5\uff0cDjango\u6846\u67b6\u4f1a\u5728\u8bf7\u6c42\u7684\u7279\u5b9a\u7684\u65f6\u95f4\u53bb\u6267\u884c\u8fd9\u4e9b\u65b9\u6cd5\u3002 \u6253\u5f00Django\u9879\u76ee\u7684Settings.py\u6587\u4ef6\uff0c\u770b\u5230\u4e0b\u9762\u7684MIDDLEWARE\u914d\u7f6e\u9879\uff0cdjango\u9ed8\u8ba4\u81ea\u5e26\u7684\u4e00\u4e9b\u4e2d\u95f4\u4ef6\uff087\u4e2a\uff09\uff1a MIDDLEWARE = [ 'django.middleware.security.SecurityMiddleware', 'django.contrib.sessions.middleware.SessionMiddleware', 'django.middleware.common.CommonMiddleware', 'django.middleware.csrf.CsrfViewMiddleware', 'django.contrib.auth.middleware.AuthenticationMiddleware', 'django.contrib.messages.middleware.MessageMiddleware', 'django.middleware.clickjacking.XFrameOptionsMiddleware', ] MIDDLEWARE\u914d\u7f6e\u9879\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u5217\u8868\u4e2d\u662f\u4e00\u4e2a\u4e2a\u5b57\u7b26\u4e32\uff0c\u8fd9\u4e9b\u5b57\u7b26\u4e32\u5176\u5b9e\u662f\u4e00\u4e2a\u4e2a\u7c7b\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u4e2a\u4e2d\u95f4\u4ef6\u3002 \u5173\u4e8eDjango\u5185\u7f6e\u7684\u4e2d\u95f4\u4ef6\uff0c\u5982\u679c\u6709\u5174\u8da3\u7684\u8bdd\u5efa\u8bae\u5927\u5bb6\u53c2\u8003\u4e0b\u9762\u8fd9\u7bc7\u6587\u7ae0\uff1a Django\u5185\u7f6e\u7684\u4e2d\u95f4\u4ef6\u8bf4\u660e","title":"Django\u4e2d\u7684\u4e2d\u95f4\u4ef6\u7b80\u4ecb"},{"location":"Django\u6838\u5fc3/\u4e2d\u95f4\u4ef6/#_1","text":"\u5728\u9879\u76ee\u4e2d\u521b\u5efa\u4e00\u4e2a\u5305\uff0c\u968f\u4fbf\u8d77\u540d\u5b57\uff0c\u4e00\u822c\u90fd\u653e\u5728\u4e00\u4e2a\u53eb\u505autils\u7684\u5305\u91cc\u9762\uff0c\u8868\u793a\u4e00\u4e2a\u516c\u7528\u7684\u7ec4\u4ef6\uff0c\u521b\u5efa\u4e00\u4e2apy\u6587\u4ef6\uff0c\u968f\u4fbf\u8d77\u540d\u5b57\uff0c\u4f8b\u5982\u53eb\u505amiddlewares.py\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a from django.utils.deprecation import MiddlewareMixin class MD1(MiddlewareMixin): #\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\uff0c\u4e0d\u662f\u5fc5\u987b\u8981\u6709\u4e0b\u9762\u8fd9\u4e24\u4e2a\u65b9\u6cd5\uff0c\u6709request\u65b9\u6cd5\u8bf4\u660e\u8bf7\u6c42\u6765\u4e86\u8981\u5904\u7406\uff0c\u6709response\u65b9\u6cd5\u8bf4\u660e\u54cd\u5e94\u51fa\u53bb\u65f6\u9700\u8981\u5904\u7406\uff0c\u4e0d\u662f\u975e\u8981\u5199\u8fd9\u4e24\u4e2a\u65b9\u6cd5\uff0c #\u5982\u679c\u4f60\u6ca1\u5199process_response\u65b9\u6cd5\uff0c\u90a3\u4e48\u4f1a\u4e00\u5c42\u4e00\u5c42\u7684\u5f80\u4e0a\u627e\uff0c\u54ea\u4e2a\u4e2d\u95f4\u4ef6\u6709process_response\u65b9\u6cd5\u5c31\u5c06\u8fd4\u56de\u5bf9\u8c61\u7ed9\u54ea\u4e2a\u4e2d\u95f4\u4ef6 def process_request(self, request): print(\"MD1\u91cc\u9762\u7684 process_request\") def process_response(self, request, response): print(\"MD1\u91cc\u9762\u7684 process_response\") return response \u5728settings.py\u7684MIDDLEWARE\u914d\u7f6e\u9879\u4e2d\u6ce8\u518c: MIDDLEWARE = [ 'django.middleware.security.SecurityMiddleware', 'django.contrib.sessions.middleware.SessionMiddleware', 'django.middleware.common.CommonMiddleware', 'django.middleware.csrf.CsrfViewMiddleware', 'django.contrib.auth.middleware.AuthenticationMiddleware', 'django.contrib.messages.middleware.MessageMiddleware', 'django.middleware.clickjacking.XFrameOptionsMiddleware', # \u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6MD1\uff0c\u8fd9\u4e2a\u5199\u7684\u662f\u4f60\u9879\u76ee\u8def\u5f84\u4e0b\u7684\u4e00\u4e2a\u8def\u5f84 # \u4f8b\u5982\uff0c\u5982\u679c\u4f60\u653e\u5728\u9879\u76ee\u4e0b\uff0c\u6587\u4ef6\u5939\u540d\u6210\u4e3autils\uff0c\u90a3\u4e48\u8fd9\u91cc\u5e94\u8be5\u5199utils.middlewares.MD1 'utils.middlewares.MD1', ] \u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u81ea\u5df1\u5b9a\u5236\u7684\u4e2d\u95f4\u4ef6\u5b9e\u73b0\u5177\u4f53\u7684\u529f\u80fd\u4e86\u3002","title":"\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u7684\u4f7f\u7528"},{"location":"Django\u6838\u5fc3/\u4e2d\u95f4\u4ef6/#django5","text":"\u5173\u4e8eDjango\u4e2d\u95f4\u4ef6\u76845\u4e2a\u65b9\u6cd5\u9700\u8981\u5927\u5bb6\u7262\u8bb0\u4e0b\u9762\u51e0\u70b9\uff1a 1\u3001\u6bcf\u4e2a\u65b9\u6cd5\u7684\u89e6\u53d1\u6761\u4ef6\uff1b 2\u3001\u6bcf\u4e2a\u65b9\u6cd5\u5728 \u4e2d\u95f4\u4ef6\u6ce8\u518c\u987a\u5e8f \u4e0b\u7684 \u6267\u884c\u987a\u5e8f \uff1b 3\u3001\u4e2d\u95f4\u4ef6\u7684\u6ce8\u518c\u987a\u5e8f\u5c31\u662fMIDDLEWARE\u5217\u8868\u5404\u4e2a\u4e2d\u95f4\u4ef6\"\u5b57\u7b26\u4e32\"\u7684\u987a\u5e8f\uff0c\u89c4\u5b9a\u4e0b\u6807\u7531\u5c0f\u5230\u5927\u4e3a\u987a\u5e8f\u3002 \u8bf4\u660e \u5b9e\u9645\u4e2d\u6700\u5e38\u7528\u7684\u662f process_request \u4e0e process_response \u65b9\u6cd5\uff0c\u672c\u7bc7\u7740\u91cd\u4ecb\u7ecd\u524d\u4e24\u4e2a\u65b9\u6cd5\uff0c\u540e\u9762\u7684\u65b9\u6cd5\u5927\u5bb6\u77e5\u9053\u5176 \u89e6\u53d1\u6761\u4ef6 \u4e0e \u6267\u884c\u987a\u5e8f \u5373\u53ef\u3002 \u4e00\u3001process_request\u65b9\u6cd5 \u8bf7\u6c42\u6765\u7684\u65f6\u5019\u8fc7\u4e2d\u95f4\u4ef6\u4f1a\u81ea\u52a8\u6267\u884c\u7684\u65b9\u6cd5 process_request(self,request) process_request\u6709\u4e00\u4e2a\u53c2\u6570\uff0c\u5c31\u662frequest\uff0c\u8fd9\u4e2arequest\u548c\u89c6\u56fe\u51fd\u6570\u4e2d\u7684request\u662f\u4e00\u6837\u7684\u3002 \u5b83\u7684\u8fd4\u56de\u503c\u53ef\u4ee5\u662fNone\u4e5f\u53ef\u4ee5\u662fHttpResponse\u5bf9\u8c61\u3002\u8fd4\u56de\u503c\u662fNone\u7684\u8bdd\uff0c\u6309\u6b63\u5e38\u6d41\u7a0b\u7ee7\u7eed\u8d70\uff0c\u4ea4\u7ed9\u4e0b\u4e00\u4e2a\u4e2d\u95f4\u4ef6\u5904\u7406\uff0c\u5982\u679c\u662fHttpResponse\u5bf9\u8c61\uff0cDjango\u5c06\u4e0d\u6267\u884c\u89c6\u56fe\u51fd\u6570\uff0c\u800c\u5c06\u76f8\u5e94\u5bf9\u8c61\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668\u3002 \u6267\u884c\u987a\u5e8f\uff1a \u6839\u636e\u4e2d\u95f4\u4ef6\u7684\u6ce8\u518c\u987a\u5e8f\uff0c\u987a\u5e8f\u6267\u884c \u3002 process_request\u65b9\u6cd5\u7684\u4e00\u4e2a\u7b80\u5355\u5b9e\u4f8b \u5148\u81ea\u5b9a\u4e492\u4e2a\u4e2d\u95f4\u4ef6\uff1a from django.utils.deprecation import MiddlewareMixin class MD1(MiddlewareMixin): def process_request(self, request): print(\"MD1\u91cc\u9762\u7684 process_request\") class MD2(MiddlewareMixin): def process_request(self, request): print(\"MD2\u91cc\u9762\u7684 process_request\") \u7136\u540e\u5728settings\u4e2d\u6ce8\u518c\uff08\u6ce8\u518c\u7684\u987a\u5e8f\u662fMD1\u5728MD2\u7684\u4e0a\u9762\uff09\uff1a MIDDLEWARE = [ 'django.middleware.security.SecurityMiddleware', 'django.contrib.sessions.middleware.SessionMiddleware', 'django.middleware.common.CommonMiddleware', 'django.middleware.csrf.CsrfViewMiddleware', 'django.contrib.auth.middleware.AuthenticationMiddleware', 'django.contrib.messages.middleware.MessageMiddleware', 'django.middleware.clickjacking.XFrameOptionsMiddleware', 'utils.middlewares.MD1', #\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6MD1 'utils.middlewares.MD2' #\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6MD2 ] \u6b64\u65f6\uff0c\u6211\u4eec\u8bbf\u95ee\u4e00\u4e2a\u89c6\u56fe\uff0c\u4f1a\u53d1\u73b0\u7ec8\u7aef\u4e2d\u6253\u5370\u5982\u4e0b\u5185\u5bb9\uff1a # \u5148\u6267\u884c\u5b8c\u4e2d\u95f4\u4ef6\u4e2d\u7684process_request\u65b9\u6cd5\u518d\u6267\u884c\u89c6\u56fe\u51fd\u6570\u4e2d\u7684\u5185\u5bb9 MD1\u91cc\u9762\u7684 process_request MD2\u91cc\u9762\u7684 process_request app \u4e2d\u7684 index\u89c6\u56fe \u4e8c\u3001process_response\u65b9\u6cd5 \u54cd\u5e94\u56de\u53bb\u4f1a\u81ea\u52a8\u6267\u884c\u7684\u65b9\u6cd5\u3002 process_response(self, request, response) \u5b83\u6709\u4e24\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a\u662frequest\uff0c\u4e00\u4e2a\u662fresponse\uff0crequest\u5c31\u662f\u4e0a\u8ff0\u4f8b\u5b50\u4e2d\u4e00\u6837\u7684\u5bf9\u8c61\uff0cresponse\u662f\u89c6\u56fe\u51fd\u6570\u8fd4\u56de\u7684HttpResponse\u5bf9\u8c61\u3002 \u8be5\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u4e5f\u5fc5\u987b\u662fHttpResponse\u5bf9\u8c61 \u3002 \u4efb\u610f\u4e00\u4e2a\u4e2d\u95f4\u4ef6\u7684process_request\u65b9\u6cd5\u91cc\u9762\u5982\u679c\u51fa\u73b0\u4e86return\u4e00\u4e2aHttpResponse\u5bf9\u8c61,\u90a3\u4e48\u5c31\u4f1a\u4e0d\u7ee7\u7eed\u6267\u884c\u5176\u4ed6\u5185\u5bb9\u4e86,\u800c\u662f\u76f4\u63a5\u6267\u884c\u5404\u4e2a\u4e2d\u95f4\u4ef6\u7684process_response\u65b9\u6cd5\u3002 \u5982\u679c\u81ea\u5df1\u7684\u4e2d\u95f4\u4ef6\u91cc\u9762\u6709process_response\u8fd9\u4e2a\u65b9\u6cd5,\u4f1a\u5148\u6267\u884c\u5b83\u81ea\u5df1\u7684\uff0c\u5982\u679c\u81ea\u5df1\u7684\u4e2d\u95f4\u4ef6\u91cc\u9762\u6709process_response\u8fd9\u4e2a\u65b9\u6cd5 \u8fd4\u56de\u81ea\u5df1return\u7684\u5185\u5bb9\u3002 \u6267\u884c\u987a\u5e8f\uff1a \u6839\u636e\u4e2d\u95f4\u4ef6\u7684\u6ce8\u518c\u987a\u5e8f\uff0c\u5012\u5e8f\u6267\u884c \u3002 process_response\u65b9\u6cd5\u5177\u4f53\u4ee3\u7801\u8bf4\u660e\uff1a from django.utils.deprecation import MiddlewareMixin class MD1(MiddlewareMixin): def process_request(self, request): print(\"MD1\u91cc\u9762\u7684 process_request\") #\u4e0d\u5fc5\u987b\u5199return\u503c #request\u548cresponse\u4e24\u4e2a\u53c2\u6570\u5fc5\u987b\u6709\uff0c\u540d\u5b57\u968f\u4fbf\u53d6 def process_response(self, request, response): print(\"MD1\u91cc\u9762\u7684 process_response\") #print(response.__dict__['_container'][0].decode('utf-8')) #\u67e5\u770b\u54cd\u5e94\u4f53\u91cc\u9762\u7684\u5185\u5bb9\u7684\u65b9\u6cd5\uff0c\u6216\u8005\u76f4\u63a5\u4f7f\u7528response.content\u4e5f\u53ef\u4ee5\u770b\u5230\u54cd\u5e94\u4f53\u91cc\u9762\u7684\u5185\u5bb9\uff0c #\u7531\u4e8eresponse\u662f\u4e2a\u53d8\u91cf\uff0c\u76f4\u63a5\u70b9\u51fb\u770b\u6e90\u7801\u662f\u770b\u4e0d\u5230\u7684\uff0c\u4f60\u6253\u5370type(response)\u53d1\u73b0\u662fHttpResponse\u5bf9\u8c61\uff0c #\u67e5\u770b\u8fd9\u4e2a\u5bf9\u8c61\u7684\u6e90\u7801\u5c31\u77e5\u9053\u6709\u4ec0\u4e48\u65b9\u6cd5\u53ef\u4ee5\u7528\u4e86\u3002 #\u5fc5\u987b\u6709\u8fd4\u56de\u503c\uff0c\u5199return response \uff0c\u8fd9\u4e2aresponse\u5c31\u50cf\u4e00\u4e2a\u63a5\u529b\u68d2\u4e00\u6837 \u3000\u3000\u3000\u3000 return response #return HttpResponse('666') ,\u5982\u679c\u4f60\u5199\u4e86\u8fd9\u4e2a\uff0c\u90a3\u4e48\u4f60\u89c6\u56fe\u8fd4\u56de\u8fc7\u6765\u7684\u5185\u5bb9\u5c31\u88ab\u5b83\u7ed9\u66ff\u4ee3\u4e86 class MD2(MiddlewareMixin): def process_request(self, request): print(\"MD2\u91cc\u9762\u7684 process_request\") pass #request\u548cresponse\u4e24\u4e2a\u53c2\u6570\u5fc5\u987b\u8981\u6709\uff0c\u540d\u5b57\u968f\u4fbf\u53d6 def process_response(self, request, response): print(\"MD2\u91cc\u9762\u7684 process_response\") #\u5fc5\u987b\u8fd4\u56deresponse\uff0c\u4e0d\u7136\u4f60\u4e0a\u5c42\u7684\u4e2d\u95f4\u4ef6\u5c31\u6ca1\u6709\u62ff\u5230httpresponse\u5bf9\u8c61\uff0c\u5c31\u4f1a\u62a5\u9519 return response \u8bbf\u95ee\u4e00\u4e2a\u89c6\u56fe\uff0c\u770b\u4e00\u4e0b\u7ec8\u7aef\u7684\u8f93\u51fa\uff1a MD2\u91cc\u9762\u7684 process_request MD1\u91cc\u9762\u7684 process_request app \u4e2d\u7684 index\u89c6\u56fe MD1\u91cc\u9762\u7684 process_response MD2\u91cc\u9762\u7684 process_response process_request\u65b9\u6cd5\u4e0eprocess_response\u7684\u91cd\u8981\u7ed3\u8bba 1\u3001\u4e2d\u95f4\u4ef6\u7684process_request\u65b9\u6cd5\u662f\u5728\u6267\u884c\u89c6\u56fe\u51fd\u6570\u4e4b\u524d\u6267\u884c\u7684\u3002 2\u3001\u5f53\u914d\u7f6e\u591a\u4e2a\u4e2d\u95f4\u4ef6\u65f6\uff0c\u4f1a\u6309\u7167MIDDLEWARE\u4e2d\u7684\u6ce8\u518c\u987a\u5e8f\uff0c\u4e5f\u5c31\u662f\u5217\u8868\u7684\u7d22\u5f15\u503c\uff0c\u4ece\u524d\u5230\u540e\u4f9d\u6b21\u6267\u884c\u7684\u3002 3\u3001\u4e0d\u540c\u4e2d\u95f4\u4ef6\u4e4b\u95f4\u4f20\u9012\u7684request\u90fd\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\u3002 4\u3001\u591a\u4e2a\u4e2d\u95f4\u4ef6\u4e2d\u7684process_response\u65b9\u6cd5\u662f\u6309\u7167MIDDLEWARE\u4e2d\u7684\u6ce8\u518c\u987a\u5e8f\u5012\u5e8f\u6267\u884c\u7684\uff0c \u4e5f\u5c31\u662f\u8bf4\u7b2c\u4e00\u4e2a\u4e2d\u95f4\u4ef6\u7684process_request\u65b9\u6cd5\u9996\u5148\u6267\u884c\uff0c\u800c\u5b83\u7684process_response\u65b9\u6cd5\u6700\u540e\u6267\u884c\uff0c \u6700\u540e\u4e00\u4e2a\u4e2d\u95f4\u4ef6\u7684process_request\u65b9\u6cd5\u6700\u540e\u4e00\u4e2a\u6267\u884c\uff0c\u5b83\u7684process_response\u65b9\u6cd5\u662f\u6700\u5148\u6267\u884c\u3002 process_request\u4e2d\u65ad\u8bf7\u6c42\u7684\u4f8b\u5b50 from django.utils.deprecation import MiddlewareMixin from django.shortcuts import HttpResponse class Md1(MiddlewareMixin): def process_request(self,request): print(\"Md1\u8bf7\u6c42\") \u3000\u3000\u3000\u3000 #process_request\u65b9\u6cd5\u91cc\u9762\u4e0d\u5199\u8fd4\u56de\u503c\uff0c\u9ed8\u8ba4\u4e5f\u662f\u8fd4\u56deNone\uff0c #\u5982\u679c\u4f60\u81ea\u5df1\u5199\u4e86return None\uff0c\u4e5f\u662f\u4e00\u6837\u7684\u6548\u679c\uff0c\u4e0d\u4f1a\u4e2d\u65ad\u4f60\u7684\u8bf7\u6c42\uff0c\u4f46\u662f\u5982\u679c\u4f60return\u7684\u4e00\u4e2ahttpresponse\u5bf9\u8c61\uff0c #\u90a3\u4e48\u5c31\u4f1a\u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u65ad\u4f60\u7684\u8bf7\u6c42\uff0c\u76f4\u63a5\u8fd4\u56de\u7ed9\u7528\u6237\uff0c\u8fd9\u5c31\u6210\u4e86\u975e\u6b63\u5e38\u7684\u6d41\u7a0b\u4e86 #\u5e76\u4e14\uff0c\u5982\u679c\u4f60\u5728\u8fd9\u91ccreturn\u4e86httpresponse\u5bf9\u8c61\uff0c\u90a3\u4e48\u4f1a\u4ece\u4f60\u8fd9\u4e2a\u4e2d\u95f4\u4ef6\u7c7b\u4e2d\u7684process_response\u65b9\u6cd5\u5f00\u59cb\u6267\u884c\u8fd4\u56de\u64cd\u4f5c\uff0c #\u6240\u4ee5\u8fd9\u4e2a\u7c7b\u91cc\u9762\u53ea\u8981\u6709process_response\u65b9\u6cd5\uff0c\u80af\u5b9a\u4f1a\u6267\u884c def process_response(self,request,response): print(\"Md1\u8fd4\u56de\") return response class Md2(MiddlewareMixin): def process_request(self,request): print(\"Md2\u8bf7\u6c42\") return HttpResponse(\"Md2\u4e2d\u65ad\") def process_response(self,request,response): print(\"Md2\u8fd4\u56de\") return response \u540e\u53f0\u6253\u5370\u5982\u4e0b\uff1a Md1\u8bf7\u6c42 Md2\u8bf7\u6c42 Md2\u8fd4\u56de Md1\u8fd4\u56de \u7b80\u5355\u7684session\u8ba4\u8bc1\u7684\u4f8b\u5b50 \u6ce8\u610f\uff0c\u8fd9\u4e2a\u65b0\u5b9a\u4e49\u7684\u4e2d\u95f4\u4ef6\u4e0d\u80fd\u6ce8\u518c\u5728session\u4e2d\u95f4\u4ef6\u4e0a\u9762\uff01 class M1(MiddlewareMixin): def process_request(self,request): #\u8bbe\u7f6e\u8def\u5f84\u767d\u540d\u5355\uff0c\u53ea\u8981\u8bbf\u95ee\u7684\u662flogin\u767b\u9646\u8def\u5f84\uff0c\u5c31\u4e0d\u505a\u8fd9\u4e2acookie\u8ba4\u8bc1 if request.path not in [reverse('login'),]: print('\u6211\u662fM1\u4e2d\u95f4\u4ef6') #\u5ba2\u6237\u7aefIP\u5730\u5740 # return HttpResponse('sorry,\u6ca1\u6709\u901a\u8fc7\u6211\u7684M1\u4e2d\u95f4\u4ef6') is_login = request.COOKIES.get('is_login', False) if is_login: pass else: # return render(request,'login.html') return redirect(reverse('login')) else: return None #\u522b\u5fd8\u4e86return None\uff0c\u6216\u8005\u76f4\u63a5\u5199\u4e2apass def process_response(self,request,response): print('M1\u54cd\u5e94\u90e8\u5206') # print(response.__dict__['_container'][0].decode('utf-8')) return response # return HttpResponse('\u778e\u641e') \u4e09\u3001process_view\u65b9\u6cd5 process_view(self, request, view_func, view_args, view_kwargs) \u89e6\u53d1\u6761\u4ef6\uff1aurl\u5206\u53d1\u4e4b\u540e\uff0c\u89c6\u56fe\u6267\u884c\u4e4b\u524d\u6267\u884c\u3002 \u6267\u884c\u987a\u5e8f\uff1a\u6839\u636e\u6ce8\u518c\u7684\u987a\u5e8f\uff0c\u987a\u5e8f\u6267\u884c\u3002 \u56db\u3001process_exception\u65b9\u6cd5 process_exception(self, request, exception) \u89e6\u53d1\u6761\u4ef6\uff1a\u89c6\u56fe\u51fd\u6570\u62a5\u9519\u4e86\u4f1a\u6267\u884c\u3002 \u6267\u884c\u987a\u5e8f\uff1a\u6839\u636e\u6ce8\u518c\u7684\u987a\u5e8f\uff0c\u5012\u5e8f\u6267\u884c\u3002 \u4e94\u3001process_template_response\u65b9\u6cd5 process_template_response(self,request,response) \u89e6\u53d1\u6761\u4ef6\uff1aHttpResponse\u5bf9\u8c61\u91cc\u9762\u5fc5\u987b\u6709\u4e2arender\u51fd\u6570\u624d\u4f1a\u6267\u884cprocess_template_response\u65b9\u6cd5\u3002 \u6267\u884c\u987a\u5e8f\uff1a\u6839\u636e\u6ce8\u518c\u7684\u987a\u5e8f\uff0c\u5012\u5e8f\u6267\u884c\u3002 \u6ce8\u610f\uff0crender\u51fd\u6570\u91cc\u9762\u5fc5\u987breturn\u4e00\u4e2aHttpResponse\u5bf9\u8c61\u3002","title":"Django\u4e2d\u95f4\u4ef6\u76845\u4e2a\u65b9\u6cd5\u4ee5\u53ca\u6267\u884c\u987a\u5e8f\u4ecb\u7ecd"},{"location":"Django\u6838\u5fc3/\u4e2d\u95f4\u4ef6/#_2","text":"1\u3001\u8bf7\u6c42\u5230\u8fbe\u4e2d\u95f4\u4ef6\u4e4b\u540e\uff0c\u5148\u6309\u7167\u6b63\u5e8f\u6267\u884c\u6bcf\u4e2a\u6ce8\u518c\u4e2d\u95f4\u4ef6\u7684process_reques\u65b9\u6cd5\uff0cprocess_request\u65b9\u6cd5\u8fd4\u56de\u7684\u503c\u662fNone\uff0c\u5c31\u4f9d\u6b21\u6267\u884c\uff0c\u5982\u679c\u8fd4\u56de\u7684\u503c\u662fHttpResponse\u5bf9\u8c61\uff0c\u4e0d\u518d\u6267\u884c\u540e\u9762\u7684process_request\u65b9\u6cd5\uff0c\u800c\u662f\u6267\u884c\u5f53\u524d\u5bf9\u5e94\u4e2d\u95f4\u4ef6\u7684process_response\u65b9\u6cd5\uff0c\u5c06HttpResponse\u5bf9\u8c61\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668\u3002\uff08\u4e5f\u5c31\u662f\u8bf4\uff1a\u5982\u679cMIDDLEWARE\u4e2d\u6ce8\u518c\u4e866\u4e2a\u4e2d\u95f4\u4ef6\uff0c\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u7b2c3\u4e2a\u4e2d\u95f4\u4ef6\u8fd4\u56de\u4e86\u4e00\u4e2aHttpResponse\u5bf9\u8c61\uff0c\u90a3\u4e48\u7b2c4,5,6\u4e2d\u95f4\u4ef6\u7684process_request\u548cprocess_response\u65b9\u6cd5\u90fd\u4e0d\u6267\u884c\uff0c\u987a\u5e8f\u6267\u884c3,2,1\u4e2d\u95f4\u4ef6\u7684process_response\u65b9\u6cd5\u3002\uff09 2\u3001process_request\u65b9\u6cd5\u90fd\u6267\u884c\u5b8c\u540e\uff0c\u5339\u914d\u8def\u7531\uff0c\u627e\u5230\u8981\u6267\u884c\u7684\u89c6\u56fe\u51fd\u6570\uff0c\u5148\u4e0d\u6267\u884c\u89c6\u56fe\u51fd\u6570\uff0c\u5148\u6267\u884c\u4e2d\u95f4\u4ef6\u4e2d\u7684process_view\u65b9\u6cd5\uff0cprocess_view\u65b9\u6cd5\u8fd4\u56deNone\uff0c\u7ee7\u7eed\u6309\u987a\u5e8f\u6267\u884c\uff0c\u6240\u6709process_view\u65b9\u6cd5\u6267\u884c\u5b8c\u540e\u6267\u884c\u89c6\u56fe\u51fd\u6570\u3002\uff08\u52a0\u5165\u4e2d\u95f4\u4ef63 \u7684process_view\u65b9\u6cd5\u8fd4\u56de\u4e86HttpResponse\u5bf9\u8c61\uff0c\u52194,5,6\u7684process_view\u4ee5\u53ca\u89c6\u56fe\u51fd\u6570\u90fd\u4e0d\u6267\u884c\uff0c\u76f4\u63a5\u4ece\u6700\u540e\u4e00\u4e2a\u4e2d\u95f4\u4ef6\uff0c\u4e5f\u5c31\u662f\u4e2d\u95f4\u4ef66\u7684process_response\u65b9\u6cd5\u5f00\u59cb\u5012\u5e8f\u6267\u884c\u3002\uff09 3\u3001process_template_response\u548cprocess_exception\u4e24\u4e2a\u65b9\u6cd5\u7684\u89e6\u53d1\u662f\u6709\u6761\u4ef6\u7684\uff0c\u6267\u884c\u987a\u5e8f\u4e5f\u662f\u5012\u5e8f\u3002\u603b\u7ed3\u6240\u6709\u7684\u6267\u884c\u6d41\u7a0b\u5982\u4e0b\uff1a","title":"\u56fe\u89e3\u4e2d\u95f4\u4ef6\u7684\u6267\u884c\u6d41\u7a0b"},{"location":"Django\u6838\u5fc3/\u4e2d\u95f4\u4ef6/#_3","text":"\u4e2d\u95f4\u4ef6\u7684\u51e0\u4e2a\u7b80\u5355\u5b9e\u4f8b","title":"\u4e2d\u95f4\u4ef6\u4f7f\u7528\u7684\u51e0\u4e2a\u7b80\u5355\u5b9e\u4f8b"},{"location":"Django\u6838\u5fc3/\u6a21\u578b\u5c42/","text":"ORM\u7b80\u4ecb MTV\u6846\u67b6\u5305\u542b\u4e00\u4e2a\u91cd\u8981\u7684\u90e8\u5206\u5c31\u662fORM\u2014\u2014\u5bf9\u8c61\u5173\u7cfb\u6620\u5c04\uff08Object Relational Mapping\uff09\uff0c\u5b83\u5b9e\u73b0\u4e86\u6570\u636e\u6a21\u578b\u4e0e\u6570\u636e\u5e93\u7684\u89e3\u8026\uff0c\u5373\u6570\u636e\u6a21\u578b\u7684\u8bbe\u8ba1\u4e0d\u9700\u8981\u4f9d\u8d56\u4e8e\u7279\u5b9a\u7684\u6570\u636e\u5e93\uff0c\u901a\u8fc7\u7b80\u5355\u7684\u914d\u7f6e\u5c31\u53ef\u4ee5\u8f7b\u677e\u66f4\u6362\u6570\u636e\u5e93\uff0c\u8fd9\u6781\u5927\u7684\u51cf\u8f7b\u4e86\u5f00\u53d1\u4eba\u5458\u7684\u5de5\u4f5c\u91cf\uff0c\u4e0d\u9700\u8981\u9762\u5bf9\u56e0\u6570\u636e\u5e93\u53d8\u66f4\u800c\u5bfc\u81f4\u7684\u65e0\u6548\u52b3\u52a8\u3002 \u6570\u636e\u5e93\u5fc5\u987b\u63d0\u524d\u521b\u5efa\u597d\uff0c\u7136\u540eORM\u518d\u5728\u6570\u636e\u5e93\u4e2d\u8fdb\u884c\u8868\u7684\u64cd\u4f5c\uff0c\u56e0\u4e3aORM\u4e0d\u80fd\u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u64cd\u4f5c\uff0c\u4e0d\u80fd\u521b\u5efa\u4e0e\u5220\u9664\u6570\u636e\u5e93\u3002\u867d\u7136\u591a\u4e86\u4e00\u6b65ORM\u7ffb\u8bd1\u6210sql\u7684\u8fc7\u7a0b\uff0c\u6548\u7387\u770b\u8d77\u6765\u4f4e\u4e86\uff0c\u4f46\u662f\u5b9e\u9645\u4e2d\u6ca1\u6709\u592a\u5927\u7684\u635f\u4f24\uff0c\u5f53\u4f60 \u4e0d\u80fd\u5fcd \u7684\u65f6\u5019\uff0c\u4f60\u53ef\u4ee5 \u5728Django\u4e2d\u6267\u884c\u539f\u751fsql \uff0c\u4e00\u822c\u7684\u573a\u666fORM\u90fd\u591f\u7528\u4e86\uff0c\u5f00\u53d1\u8d77\u6765\u901f\u5ea6\u66f4\u5feb\uff0c\u5199\u6cd5\u66f4\u8d34\u8fd1\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u3002 \u539f\u751fSQL\u4e0eDjango\u4e2dORM\u7684\u5bf9\u6bd4 SQL\u4e2d\u7684\u8868\u64cd\u4f5c #\u521b\u5efa\u8868: CREATE TABLE employee( id INT PRIMARY KEY auto_increment , name VARCHAR (20), gender BIT default 1, birthday DATA , department VARCHAR (20), salary DECIMAL (8,2) unsigned, ); #\u6dfb\u52a0\u4e00\u6761\u8868\u7eaa\u5f55: INSERT employee (name,gender,birthday,salary,department) VALUES (\"whw\",1,\"1992-12-12\",8000,\"IT\"); #\u67e5\u8be2\u4e00\u6761\u8868\u7eaa\u5f55: SELECT * FROM employee WHERE age=24; #\u66f4\u65b0\u4e00\u6761\u8868\u7eaa\u5f55: UPDATE employee SET birthday=\"1991-10-24\" WHERE id=1; #\u5220\u9664\u4e00\u6761\u8868\u7eaa\u5f55: DELETE FROM employee WHERE name=\"whw\"; Django\u4e2dORM\u7684\u64cd\u4f5c #\u521b\u5efa\u8868 class Employee(models.Model): id=models.AutoField(primary_key=True) name=models.CharField(max_length=32) gender=models.BooleanField() birthday=models.DateField() department=models.CharField(max_length=32) salary=models.DecimalField(max_digits=8,decimal_places=2) #\u6dfb\u52a0\u4e00\u6761\u8868\u7eaa\u5f55: emp=Employee(name=\"whw\",gender=True,birthday=\"1991-12-12\",epartment=\"IT\") emp.save() #\u67e5\u8be2\u4e00\u6761\u8868\u7eaa\u5f55: Employee.objects.filter(age=24) #\u66f4\u65b0\u4e00\u6761\u8868\u7eaa\u5f55: Employee.objects.filter(id=1).update(birthday=\"1991-10-24\") #\u5220\u9664\u4e00\u6761\u8868\u7eaa\u5f55: Employee.objects.filter(name=\"whw\").delete() Django\u4e2dORM\u7684\u8bf4\u660e \u5728\u672c\u6559\u7a0b\u7684 Django\u6846\u67b6\u5165\u95e8 \u7684\u90e8\u5206\u4e3a\u5927\u5bb6\u8be6\u7ec6\u4ecb\u7ecd\u4e86 Django\u4e0eMySQL\u7684\u4ea4\u4e92 \u4e0e ORM\u7684\u7b80\u5355\u4f7f\u7528 \uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u91cd\u590d\u8bf4\u660e\u521b\u5efa\u6587\u4ef6\u3001\u8fde\u63a5\u6570\u636e\u5e93\u3001\u751f\u6210Model\u8fd9\u4e9b\u6b65\u9aa4\u4e86\uff0c\u5927\u5bb6\u53ef\u4ee5\u5230\u672c\u6559\u7a0b\u7684\u5165\u95e8\u90e8\u5206\u8be6\u7ec6\u56de\u987e\u4e00\u4e0b\u5177\u4f53\u7684\u5185\u5bb9\u3002\u8fd9\u91cc\u4e3a\u5927\u5bb6\u8be6\u7ec6\u8bf4\u660e\u4e00\u4e0bDjango\u4e2dORM\u7684\u7ec6\u8282\u77e5\u8bc6\u70b9\u3002 ORM\u5b57\u6bb5\u4e0e\u6570\u636e\u5e93\u5b9e\u9645\u5b57\u6bb5\u7684\u5bf9\u5e94\u5173\u7cfb \u6211\u4eec\u5728\u521b\u5efaModel\u7684\u7c7b\u4e2d\u7684\u5b57\u6bb5\u4f1a\u5728\u6267\u884c\u6570\u636e\u5e93\u8fc1\u79fb\u6307\u4ee4\u7684\u65f6\u5019\u81ea\u52a8\u5c06Model\u4e2d\u7684\u5b57\u6bb5\u8f6c\u6362\u4e3aMySQL\u6570\u636e\u5e93\u4e2d\u7684\u5b57\u6bb5\uff0c\u5b83\u4eec\u7684\u5bf9\u5e94\u5173\u7cfb\u5982\u4e0b\uff1a # \u8fd9\u4e2a\u5bf9\u5e94\u5173\u7cfb\u5728\u4f60python3\u5b89\u88c5\u76ee\u5f55\u4e0b\uff1a # site-packages/django/db/mysql/base.py\u6587\u4ef6\u91cc\u7684\u4e00\u4e2adata_types\u5b57\u5178\u91cc\uff1a # This dictionary maps Field objects to their associated MySQL column # types, as strings. Column-type strings can contain format strings; they'll # be interpolated against the values of Field.__dict__ before being output. # If a column type is set to None, it won't be included in the output. data_types = { 'AutoField': 'integer AUTO_INCREMENT', 'BigAutoField': 'bigint AUTO_INCREMENT', 'BinaryField': 'longblob', 'BooleanField': 'bool', 'CharField': 'varchar(%(max_length)s)', 'DateField': 'date', 'DateTimeField': 'datetime(6)', 'DecimalField': 'numeric(%(max_digits)s, %(decimal_places)s)', 'DurationField': 'bigint', 'FileField': 'varchar(%(max_length)s)', 'FilePathField': 'varchar(%(max_length)s)', 'FloatField': 'double precision', 'IntegerField': 'integer', 'BigIntegerField': 'bigint', 'IPAddressField': 'char(15)', 'GenericIPAddressField': 'char(39)', 'NullBooleanField': 'bool', 'OneToOneField': 'integer', 'PositiveIntegerField': 'integer UNSIGNED', 'PositiveSmallIntegerField': 'smallint UNSIGNED', 'SlugField': 'varchar(%(max_length)s)', 'SmallIntegerField': 'smallint', 'TextField': 'longtext', 'TimeField': 'time(6)', 'UUIDField': 'char(32)', } ORM\u5e38\u7528\u7684\u5b57\u6bb5\u53ca\u8bf4\u660e <1> CharField \u5b57\u7b26\u4e32\u5b57\u6bb5, \u7528\u4e8e\u8f83\u77ed\u7684\u5b57\u7b26\u4e32. CharField \u8981\u6c42\u5fc5\u987b\u6709\u4e00\u4e2a\u53c2\u6570 maxlength, \u7528\u4e8e\u4ece\u6570\u636e\u5e93\u5c42\u548cDjango\u6821\u9a8c\u5c42\u9650\u5236\u8be5\u5b57\u6bb5\u6240\u5141\u8bb8\u7684\u6700\u5927\u5b57\u7b26\u6570. <2> IntegerField #\u7528\u4e8e\u4fdd\u5b58\u4e00\u4e2a\u6574\u6570. <3> FloatField \u4e00\u4e2a\u6d6e\u70b9\u6570. \u5fc5\u987b \u63d0\u4f9b\u4e24\u4e2a\u53c2\u6570: \u53c2\u6570 \u63cf\u8ff0 max_digits \u603b\u4f4d\u6570(\u4e0d\u5305\u62ec\u5c0f\u6570\u70b9\u548c\u7b26\u53f7) decimal_places \u5c0f\u6570\u4f4d\u6570 \u4e3e\u4f8b\u6765\u8bf4, \u8981\u4fdd\u5b58\u6700\u5927\u503c\u4e3a 999 (\u5c0f\u6570\u70b9\u540e\u4fdd\u5b582\u4f4d),\u4f60\u8981\u8fd9\u6837\u5b9a\u4e49\u5b57\u6bb5: models.FloatField(..., max_digits=5, decimal_places=2) \u8981\u4fdd\u5b58\u6700\u5927\u503c\u4e00\u767e\u4e07(\u5c0f\u6570\u70b9\u540e\u4fdd\u5b5810\u4f4d)\u7684\u8bdd,\u4f60\u8981\u8fd9\u6837\u5b9a\u4e49: models.FloatField(..., max_digits=17, decimal_places=10) #max_digits\u5927\u4e8e\u7b49\u4e8e17\u5c31\u80fd\u5b58\u50a8\u767e\u4e07\u4ee5\u4e0a\u7684\u6570\u4e86 admin \u7528\u4e00\u4e2a\u6587\u672c\u6846(<input type=\"text\">)\u8868\u793a\u8be5\u5b57\u6bb5\u4fdd\u5b58\u7684\u6570\u636e. <4> AutoField \u4e00\u4e2a IntegerField, \u6dfb\u52a0\u8bb0\u5f55\u65f6\u5b83\u4f1a\u81ea\u52a8\u589e\u957f. \u4f60\u901a\u5e38\u4e0d\u9700\u8981\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e2a\u5b57\u6bb5; \u81ea\u5b9a\u4e49\u4e00\u4e2a\u4e3b\u952e\uff1amy_id=models.AutoField(primary_key=True) \u5982\u679c\u4f60\u4e0d\u6307\u5b9a\u4e3b\u952e\u7684\u8bdd,\u7cfb\u7edf\u4f1a\u81ea\u52a8\u6dfb\u52a0\u4e00\u4e2a\u4e3b\u952e\u5b57\u6bb5\u5230\u4f60\u7684 model. <5> BooleanField A true/false field. admin \u7528 checkbox \u6765\u8868\u793a\u6b64\u7c7b\u5b57\u6bb5. <6> TextField \u4e00\u4e2a\u5bb9\u91cf\u5f88\u5927\u7684\u6587\u672c\u5b57\u6bb5. admin \u7528\u4e00\u4e2a <textarea> (\u6587\u672c\u533a\u57df)\u8868\u793a\u8be5\u5b57\u6bb5\u6570\u636e.(\u4e00\u4e2a\u591a\u884c\u7f16\u8f91\u6846). <7> EmailField \u4e00\u4e2a\u5e26\u6709\u68c0\u67e5Email\u5408\u6cd5\u6027\u7684 CharField,\u4e0d\u63a5\u53d7 maxlength \u53c2\u6570. <8> DateField \u4e00\u4e2a\u65e5\u671f\u5b57\u6bb5. \u5171\u6709\u4e0b\u5217\u989d\u5916\u7684\u53ef\u9009\u53c2\u6570: Argument \u63cf\u8ff0 auto_now \u5f53\u5bf9\u8c61\u88ab\u4fdd\u5b58\u65f6,\u81ea\u52a8\u5c06\u8be5\u5b57\u6bb5\u7684\u503c\u8bbe\u7f6e\u4e3a\u5f53\u524d\u65f6\u95f4.\u901a\u5e38\u7528\u4e8e\u8868\u793a \"last-modified\" \u65f6\u95f4\u6233. auto_now_add \u5f53\u5bf9\u8c61\u9996\u6b21\u88ab\u521b\u5efa\u65f6,\u81ea\u52a8\u5c06\u8be5\u5b57\u6bb5\u7684\u503c\u8bbe\u7f6e\u4e3a\u5f53\u524d\u65f6\u95f4.\u901a\u5e38\u7528\u4e8e\u8868\u793a\u5bf9\u8c61\u521b\u5efa\u65f6\u95f4. \uff08\u4ec5\u4ec5\u5728admin\u4e2d\u6709\u610f\u4e49...) <9> DateTimeField \u4e00\u4e2a\u65e5\u671f\u65f6\u95f4\u5b57\u6bb5. \u7c7b\u4f3c DateField \u652f\u6301\u540c\u6837\u7684\u9644\u52a0\u9009\u9879. <10> ImageField \u7c7b\u4f3c FileField, \u4e0d\u8fc7\u8981\u6821\u9a8c\u4e0a\u4f20\u5bf9\u8c61\u662f\u5426\u662f\u4e00\u4e2a\u5408\u6cd5\u56fe\u7247.#\u5b83\u6709\u4e24\u4e2a\u53ef\u9009\u53c2\u6570:height_field\u548cwidth_field, \u5982\u679c\u63d0\u4f9b\u8fd9\u4e24\u4e2a\u53c2\u6570,\u5219\u56fe\u7247\u5c06\u6309\u63d0\u4f9b\u7684\u9ad8\u5ea6\u548c\u5bbd\u5ea6\u89c4\u683c\u4fdd\u5b58. <11> FileField \u4e00\u4e2a\u6587\u4ef6\u4e0a\u4f20\u5b57\u6bb5. \u8981\u6c42\u4e00\u4e2a\u5fc5\u987b\u6709\u7684\u53c2\u6570: upload_to, \u4e00\u4e2a\u7528\u4e8e\u4fdd\u5b58\u4e0a\u8f7d\u6587\u4ef6\u7684\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u8def\u5f84. \u8fd9\u4e2a\u8def\u5f84\u5fc5\u987b\u5305\u542b strftime #formatting, \u8be5\u683c\u5f0f\u5c06\u88ab\u4e0a\u8f7d\u6587\u4ef6\u7684 date/time \u66ff\u6362(so that uploaded files dont fill up the given directory). admin \u7528\u4e00\u4e2a<input type=\"file\">\u90e8\u4ef6\u8868\u793a\u8be5\u5b57\u6bb5\u4fdd\u5b58\u7684\u6570\u636e(\u4e00\u4e2a\u6587\u4ef6\u4e0a\u4f20\u90e8\u4ef6) . \u6ce8\u610f\uff1a\u5728\u4e00\u4e2a model \u4e2d\u4f7f\u7528 FileField \u6216 ImageField \u9700\u8981\u4ee5\u4e0b\u6b65\u9aa4: \uff081\uff09\u5728\u4f60\u7684 settings \u6587\u4ef6\u4e2d, \u5b9a\u4e49\u4e00\u4e2a\u5b8c\u6574\u8def\u5f84\u7ed9 MEDIA_ROOT \u4ee5\u4fbf\u8ba9 Django\u5728\u6b64\u5904\u4fdd\u5b58\u4e0a\u4f20\u6587\u4ef6. (\u51fa\u4e8e\u6027\u80fd\u8003\u8651,\u8fd9\u4e9b\u6587\u4ef6\u5e76\u4e0d\u4fdd\u5b58\u5230\u6570\u636e\u5e93.) \u5b9a\u4e49MEDIA_URL \u4f5c\u4e3a\u8be5\u76ee\u5f55\u7684\u516c\u5171 URL. \u8981\u786e\u4fdd\u8be5\u76ee\u5f55\u5bf9 WEB\u670d\u52a1\u5668\u7528\u6237\u5e10\u53f7\u662f\u53ef\u5199\u7684. \uff082\uff09 \u5728\u4f60\u7684 model \u4e2d\u6dfb\u52a0 FileField \u6216 ImageField, \u5e76\u786e\u4fdd\u5b9a\u4e49\u4e86 upload_to \u9009\u9879,\u4ee5\u544a\u8bc9 Django \u4f7f\u7528 MEDIA_ROOT \u7684\u54ea\u4e2a\u5b50\u76ee\u5f55\u4fdd\u5b58\u4e0a\u4f20\u6587\u4ef6.\u4f60\u7684\u6570\u636e\u5e93\u4e2d\u8981\u4fdd\u5b58\u7684\u53ea\u662f\u6587\u4ef6\u7684\u8def\u5f84(\u76f8\u5bf9\u4e8e MEDIA_ROOT). \u51fa\u4e8e\u4e60\u60ef\u4f60\u4e00\u5b9a\u5f88\u60f3\u4f7f\u7528 Django \u63d0\u4f9b\u7684 get_<#fieldname>_url \u51fd\u6570.\u4e3e\u4f8b\u6765\u8bf4,\u5982\u679c\u4f60\u7684 ImageField \u53eb\u4f5c mug_shot, \u4f60\u5c31\u53ef\u4ee5\u5728\u6a21\u677f\u4e2d\u4ee5 {{ object.#get_mug_shot_url }} \u8fd9\u6837\u7684\u65b9\u5f0f\u5f97\u5230\u56fe\u50cf\u7684\u7edd\u5bf9\u8def\u5f84. <12> URLField \u7528\u4e8e\u4fdd\u5b58 URL. \u82e5 verify_exists \u53c2\u6570\u4e3a True (\u9ed8\u8ba4), \u7ed9\u5b9a\u7684 URL \u4f1a\u9884\u5148\u68c0\u67e5\u662f\u5426\u5b58\u5728( \u5373URL\u662f\u5426\u88ab\u6709\u6548\u88c5\u5165\u4e14 \u6ca1\u6709\u8fd4\u56de404\u54cd\u5e94). admin \u7528\u4e00\u4e2a <input type=\"text\"> \u6587\u672c\u6846\u8868\u793a\u8be5\u5b57\u6bb5\u4fdd\u5b58\u7684\u6570\u636e(\u4e00\u4e2a\u5355\u884c\u7f16\u8f91\u6846) <13> NullBooleanField \u7c7b\u4f3c BooleanField, \u4e0d\u8fc7\u5141\u8bb8 NULL \u4f5c\u4e3a\u5176\u4e2d\u4e00\u4e2a\u9009\u9879. \u63a8\u8350\u4f7f\u7528\u8fd9\u4e2a\u5b57\u6bb5\u800c\u4e0d\u8981\u7528 BooleanField \u52a0 null=True \u9009\u9879 admin \u7528\u4e00\u4e2a\u9009\u62e9\u6846 <select> (\u4e09\u4e2a\u53ef\u9009\u62e9\u7684\u503c: \"Unknown\", \"Yes\" \u548c \"No\" ) \u6765\u8868\u793a\u8fd9\u79cd\u5b57\u6bb5\u6570\u636e. <14> SlugField \"Slug\" \u662f\u4e00\u4e2a\u62a5\u7eb8\u672f\u8bed. slug \u662f\u67d0\u4e2a\u4e1c\u897f\u7684\u5c0f\u5c0f\u6807\u8bb0(\u77ed\u7b7e), \u53ea\u5305\u542b\u5b57\u6bcd,\u6570\u5b57,\u4e0b\u5212\u7ebf\u548c\u8fde\u5b57\u7b26.#\u5b83\u4eec\u901a\u5e38\u7528\u4e8eURLs \u82e5\u4f60\u4f7f\u7528 Django \u5f00\u53d1\u7248\u672c,\u4f60\u53ef\u4ee5\u6307\u5b9a maxlength. \u82e5 maxlength \u672a\u6307\u5b9a, Django \u4f1a\u4f7f\u7528\u9ed8\u8ba4\u957f\u5ea6: 50. \u5728\u4ee5\u524d\u7684 Django \u7248\u672c,\u6ca1\u6709\u4efb\u4f55\u529e\u6cd5\u6539\u53d850 \u8fd9\u4e2a\u957f\u5ea6.\u8fd9\u6697\u793a\u4e86 db_index=True. <15> XMLField \u4e00\u4e2a\u6821\u9a8c\u503c\u662f\u5426\u4e3a\u5408\u6cd5XML\u7684 TextField,\u5fc5\u987b\u63d0\u4f9b\u53c2\u6570: schema_path, \u5b83\u662f\u4e00\u4e2a\u7528\u6765\u6821\u9a8c\u6587\u672c\u7684 RelaxNG schema #\u7684\u6587\u4ef6\u7cfb\u7edf\u8def\u5f84. <16> FilePathField \u53ef\u9009\u9879\u76ee\u4e3a\u67d0\u4e2a\u7279\u5b9a\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u540d. \u652f\u6301\u4e09\u4e2a\u7279\u6b8a\u7684\u53c2\u6570, \u5176\u4e2d\u7b2c\u4e00\u4e2a\u662f\u5fc5\u987b\u63d0\u4f9b\u7684. \u53c2\u6570 \u63cf\u8ff0 path \u5fc5\u9700\u53c2\u6570. \u4e00\u4e2a\u76ee\u5f55\u7684\u7edd\u5bf9\u6587\u4ef6\u7cfb\u7edf\u8def\u5f84. FilePathField \u636e\u6b64\u5f97\u5230\u53ef\u9009\u9879\u76ee. Example: \"/home/images\". match \u53ef\u9009\u53c2\u6570. \u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f, \u4f5c\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32, FilePathField \u5c06\u4f7f\u7528\u5b83\u8fc7\u6ee4\u6587\u4ef6\u540d. \u6ce8\u610f\u8fd9\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u53ea\u4f1a\u5e94\u7528\u5230 base filename \u800c\u4e0d\u662f \u8def\u5f84\u5168\u540d. Example: \"foo.*\\.txt^\", \u5c06\u5339\u914d\u6587\u4ef6 foo23.txt \u5374\u4e0d\u5339\u914d bar.txt \u6216 foo23.gif. recursive\u53ef\u9009\u53c2\u6570.\u8981\u4e48 True \u8981\u4e48 False. \u9ed8\u8ba4\u503c\u662f False. \u662f\u5426\u5305\u62ec path \u4e0b\u9762\u7684\u5168\u90e8\u5b50\u76ee\u5f55. \u8fd9\u4e09\u4e2a\u53c2\u6570\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528. match \u4ec5\u5e94\u7528\u4e8e base filename, \u800c\u4e0d\u662f\u8def\u5f84\u5168\u540d. \u90a3\u4e48,\u8fd9\u4e2a\u4f8b\u5b50: FilePathField(path=\"/home/images\", match=\"foo.*\", recursive=True) ...\u4f1a\u5339\u914d /home/images/foo.gif \u800c\u4e0d\u5339\u914d /home/images/foo/bar.gif <17> IPAddressField \u4e00\u4e2a\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684 IP \u5730\u5740, (i.e. \"24.124.1.30\"). <18> CommaSeparatedIntegerField \u7528\u4e8e\u5b58\u653e\u9017\u53f7\u5206\u9694\u7684\u6574\u6570\u503c. \u7c7b\u4f3c CharField, \u5fc5\u987b\u8981\u6709maxlength\u53c2\u6570. \u6570\u636e\u5e93\u540c\u6b65\u6307\u4ee4\u89e3\u6790 \u6570\u636e\u5e93\u540c\u6b65\u6307\u4ee4\u5982\u4e0b\uff1a # \u751f\u6210\u8bb0\u5f55\uff0c\u6bcf\u6b21\u4fee\u6539\u4e86models\u91cc\u9762\u7684\u5185\u5bb9\u6216\u8005\u6dfb\u52a0\u4e86\u65b0\u7684app # \u65b0\u7684app\u91cc\u9762\u5199\u4e86models\u91cc\u9762\u7684\u5185\u5bb9\uff0c\u90fd\u8981\u6267\u884c\u8fd9\u4e24\u6761 python manage.py makemigrations # \u6267\u884c\u4e0a\u9762\u8fd9\u4e2a\u8bed\u53e5\u7684\u8bb0\u5f55\u6765\u521b\u5efa\u8868\uff0c\u751f\u6210\u7684\u8868\u540d\u5b57\u524d\u9762\u4f1a\u81ea\u5e26\u5e94\u7528\u7684\u540d\u5b57 # \u4f8b\u5982\uff1a\u4f60\u7684book\u8868\u5728mysql\u91cc\u9762\u53eb\u505aapp01_book\u8868 python manage.py migrate \u5173\u4e8e\u540c\u6b65\u6307\u4ee4\u6267\u884c\u7684\u539f\u7406\u53ca\u8fc1\u79fb\u5931\u8d25\u7684\u53ef\u80fd\u539f\u56e0\uff1a 1-\u5728\u6267\u884c python manager.py magrations\u65f6django\u4f1a\u5728\u76f8\u5e94\u7684app\u7684migration\u6587\u4ef6\u5939\u4e0b\u9762\u751f\u6210\u4e00\u4e2apython\u811a\u672c\u6587\u4ef6\u3002 2-\u5728\u6267\u884c python manager.py migrate\u65f6django\u624d\u4f1a\u751f\u6210\u6570\u636e\u5e93\u8868\uff0cdjango\u6839\u636e migration\u4e0b\u9762\u7684\u811a\u672c\u6587\u4ef6\u6765\u751f\u6210\u6570\u636e\u8868\u7684\u3002 \u7ecf\u8fc7\u591a\u6b21\u8fc1\u79fb\u7684\u8bdd\uff0c\u6bcf\u4e2amigration\u6587\u4ef6\u5939\u4e0b\u9762\u6709\u591a\u4e2a\u811a\u672c\uff0c\u5728django\u4e2d\u6709\u4e00\u5f20django-migrations\u8868\uff0c \u8868\u4e2d\u8bb0\u5f55\u4e86\u5df2\u7ecf\u6267\u884c\u7684\u811a\u672c\uff0c\u5bf9\u4e8e\u8868\u4e2d\u6ca1\u6709\u7684\u5c31\u662f\u8fd8\u6ca1\u6267\u884c\u7684\u811a\u672c\uff0c\u5728\u6267\u884cmigrate\u7684\u65f6\u5019\u5c31\u53ea\u6267\u884c\u8868\u4e2d\u6ca1\u6709\u8bb0\u5f55\u7684\u90a3\u4e9b\u811a\u672c\u3002 3-\u6709\u65f6\u5728\u6267\u884c migrate\u7684\u65f6\u5019\u5982\u679c\u53d1\u73b0\u6ca1\u6709\u751f\u6210\u76f8\u5e94\u7684\u8868\uff0c\u53ef\u4ee5\u770b\u770b\u5728 django-migrations\u8868\u4e2d\u770b\u770b\u811a\u672c\u662f\u5426\u5df2\u7ecf\u6267\u884c\u4e86\uff0c \u53ef\u4ee5\u5220\u9664django-migrations\u8868\u4e2d\u7684\u76f8\u5173\u8bb0\u5f55\uff0c\u7136\u540e\u91cd\u65b0\u6267\u884c\u3002 QuerySet\u65b9\u6cd5\u5927\u5168 ORM\u67e5\u8be2\u4e2d\u4f1a\u5f97\u5230\u4e00\u4e2a QuerySet\u5bf9\u8c61 \uff0c\u5f97\u5230\u8fd9\u4e2a\u5bf9\u8c61\u6211\u4eec\u53ef\u4ee5\u505a\u8fdb\u4e00\u6b65\u7684\u67e5\u8be2\uff08\u8fde\u8868\u3001\u53bb\u91cd\u7b49\u7b49\uff09\uff0c\u8fd9\u91cc\u7f57\u5217\u4e00\u4e0bQuery\u7684\u6240\u6709\u65b9\u6cd5\uff08\u90fd\u662f\u5728\u6e90\u7801\u4e2d\u627e\u7684\uff09\uff1a ################################################################## # PUBLIC METHODS THAT ALTER ATTRIBUTES AND RETURN A NEW QUERYSET # ################################################################## def all(self) # \u83b7\u53d6\u6240\u6709\u7684\u6570\u636e\u5bf9\u8c61 def filter(self, *args, **kwargs) # \u6761\u4ef6\u67e5\u8be2 # \u6761\u4ef6\u53ef\u4ee5\u662f\uff1a\u53c2\u6570\uff0c\u5b57\u5178\uff0cQ def exclude(self, *args, **kwargs) # \u6761\u4ef6\u67e5\u8be2 # \u6761\u4ef6\u53ef\u4ee5\u662f\uff1a\u53c2\u6570\uff0c\u5b57\u5178\uff0cQ def select_related(self, *fields) \u6027\u80fd\u76f8\u5173\uff1a\u8868\u4e4b\u95f4\u8fdb\u884cjoin\u8fde\u8868\u64cd\u4f5c\uff0c\u4e00\u6b21\u6027\u83b7\u53d6\u5173\u8054\u7684\u6570\u636e\u3002 \u603b\u7ed3\uff1a 1. select_related\u4e3b\u8981\u9488\u4e00\u5bf9\u4e00\u548c\u591a\u5bf9\u4e00\u5173\u7cfb\u8fdb\u884c\u4f18\u5316\u3002 2. select_related\u4f7f\u7528SQL\u7684JOIN\u8bed\u53e5\u8fdb\u884c\u4f18\u5316\uff0c\u901a\u8fc7\u51cf\u5c11SQL\u67e5\u8be2\u7684\u6b21\u6570\u6765\u8fdb\u884c\u4f18\u5316\u3001\u63d0\u9ad8\u6027\u80fd\u3002 def prefetch_related(self, *lookups) \u6027\u80fd\u76f8\u5173\uff1a\u591a\u8868\u8fde\u8868\u64cd\u4f5c\u65f6\u901f\u5ea6\u4f1a\u6162\uff0c\u4f7f\u7528\u5176\u6267\u884c\u591a\u6b21SQL\u67e5\u8be2\u5728Python\u4ee3\u7801\u4e2d\u5b9e\u73b0\u8fde\u8868\u64cd\u4f5c\u3002 \u603b\u7ed3\uff1a 1. \u5bf9\u4e8e\u591a\u5bf9\u591a\u5b57\u6bb5\uff08ManyToManyField\uff09\u548c\u4e00\u5bf9\u591a\u5b57\u6bb5\uff0c\u53ef\u4ee5\u4f7f\u7528prefetch_related()\u6765\u8fdb\u884c\u4f18\u5316\u3002 2. prefetch_related()\u7684\u4f18\u5316\u65b9\u5f0f\u662f\u5206\u522b\u67e5\u8be2\u6bcf\u4e2a\u8868\uff0c\u7136\u540e\u7528Python\u5904\u7406\u4ed6\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\u3002 def annotate(self, *args, **kwargs) # \u7528\u4e8e\u5b9e\u73b0\u805a\u5408group by\u67e5\u8be2 from django.db.models import Count, Avg, Max, Min, Sum v = models.UserInfo.objects.values('u_id').annotate(uid=Count('u_id')) # SELECT u_id, COUNT(ui) AS `uid` FROM UserInfo GROUP BY u_id v = models.UserInfo.objects.values('u_id').annotate(uid=Count('u_id')).filter(uid__gt=1) # SELECT u_id, COUNT(ui_id) AS `uid` FROM UserInfo GROUP BY u_id having count(u_id) > 1 v = models.UserInfo.objects.values('u_id').annotate(uid=Count('u_id',distinct=True)).filter(uid__gt=1) # SELECT u_id, COUNT( DISTINCT ui_id) AS `uid` FROM UserInfo GROUP BY u_id having count(u_id) > 1 def distinct(self, *field_names) # \u7528\u4e8edistinct\u53bb\u91cd models.UserInfo.objects.values('nid').distinct() # select distinct nid from userinfo \u6ce8\uff1a\u53ea\u6709\u5728PostgreSQL\u4e2d\u624d\u80fd\u4f7f\u7528distinct\u8fdb\u884c\u53bb\u91cd def order_by(self, *field_names) # \u7528\u4e8e\u6392\u5e8f models.UserInfo.objects.all().order_by('-id','age') def extra(self, select=None, where=None, params=None, tables=None, order_by=None, select_params=None) # \u6784\u9020\u989d\u5916\u7684\u67e5\u8be2\u6761\u4ef6\u6216\u8005\u6620\u5c04\uff0c\u5982\uff1a\u5b50\u67e5\u8be2 Entry.objects.extra(select={'new_id': \"select col from sometable where othercol > %s\"}, select_params=(1,)) Entry.objects.extra(where=['headline=%s'], params=['Lennon']) Entry.objects.extra(where=[\"foo='a' OR bar = 'a'\", \"baz = 'a'\"]) Entry.objects.extra(select={'new_id': \"select id from tb where id > %s\"}, select_params=(1,), order_by=['-nid']) def reverse(self): # \u5012\u5e8f models.UserInfo.objects.all().order_by('-nid').reverse() # \u6ce8\uff1a\u5982\u679c\u5b58\u5728order_by\uff0creverse\u5219\u662f\u5012\u5e8f\uff0c\u5982\u679c\u591a\u4e2a\u6392\u5e8f\u5219\u4e00\u4e00\u5012\u5e8f def defer(self, *fields): models.UserInfo.objects.defer('username','id') \u6216 models.UserInfo.objects.filter(...).defer('username','id') #\u6620\u5c04\u4e2d\u6392\u9664\u67d0\u5217\u6570\u636e def only(self, *fields): #\u4ec5\u53d6\u67d0\u4e2a\u8868\u4e2d\u7684\u6570\u636e models.UserInfo.objects.only('username','id') \u6216 models.UserInfo.objects.filter(...).only('username','id') def using(self, alias): \u6307\u5b9a\u4f7f\u7528\u7684\u6570\u636e\u5e93\uff0c\u53c2\u6570\u4e3a\u522b\u540d\uff08setting\u4e2d\u7684\u8bbe\u7f6e\uff09 ################################################## # PUBLIC METHODS THAT RETURN A QUERYSET SUBCLASS # ################################################## def raw(self, raw_query, params=None, translations=None, using=None): # \u6267\u884c\u539f\u751fSQL models.UserInfo.objects.raw('select * from userinfo') # \u5982\u679cSQL\u662f\u5176\u4ed6\u8868\u65f6\uff0c\u5fc5\u987b\u5c06\u540d\u5b57\u8bbe\u7f6e\u4e3a\u5f53\u524dUserInfo\u5bf9\u8c61\u7684\u4e3b\u952e\u5217\u540d models.UserInfo.objects.raw('select id as nid from \u5176\u4ed6\u8868') # \u4e3a\u539f\u751fSQL\u8bbe\u7f6e\u53c2\u6570 models.UserInfo.objects.raw('select id as nid from userinfo where nid>%s', params=[12,]) # \u5c06\u83b7\u53d6\u7684\u5230\u5217\u540d\u8f6c\u6362\u4e3a\u6307\u5b9a\u5217\u540d name_map = {'first': 'first_name', 'last': 'last_name', 'bd': 'birth_date', 'pk': 'id'} Person.objects.raw('SELECT * FROM some_other_table', translations=name_map) # \u6307\u5b9a\u6570\u636e\u5e93 models.UserInfo.objects.raw('select * from userinfo', using=\"default\") ################### \u539f\u751fSQL ################### from django.db import connection, connections cursor = connection.cursor() # cursor = connections['default'].cursor() cursor.execute(\"\"\"SELECT * from auth_user where id = %s\"\"\", [1]) row = cursor.fetchone() # fetchall()/fetchmany(..) def values(self, *fields): # \u83b7\u53d6\u6bcf\u884c\u6570\u636e\u4e3a\u5b57\u5178\u683c\u5f0f def values_list(self, *fields, **kwargs): # \u83b7\u53d6\u6bcf\u884c\u6570\u636e\u4e3a\u5143\u7956 def dates(self, field_name, kind, order='ASC'): # \u6839\u636e\u65f6\u95f4\u8fdb\u884c\u67d0\u4e00\u90e8\u5206\u8fdb\u884c\u53bb\u91cd\u67e5\u627e\u5e76\u622a\u53d6\u6307\u5b9a\u5185\u5bb9 # kind\u53ea\u80fd\u662f\uff1a\"year\"\uff08\u5e74\uff09, \"month\"\uff08\u5e74-\u6708\uff09, \"day\"\uff08\u5e74-\u6708-\u65e5\uff09 # order\u53ea\u80fd\u662f\uff1a\"ASC\" \"DESC\" # \u5e76\u83b7\u53d6\u8f6c\u6362\u540e\u7684\u65f6\u95f4 - year : \u5e74-01-01 - month: \u5e74-\u6708-01 - day : \u5e74-\u6708-\u65e5 models.DatePlus.objects.dates('ctime','day','DESC') def datetimes(self, field_name, kind, order='ASC', tzinfo=None): # \u6839\u636e\u65f6\u95f4\u8fdb\u884c\u67d0\u4e00\u90e8\u5206\u8fdb\u884c\u53bb\u91cd\u67e5\u627e\u5e76\u622a\u53d6\u6307\u5b9a\u5185\u5bb9\uff0c\u5c06\u65f6\u95f4\u8f6c\u6362\u4e3a\u6307\u5b9a\u65f6\u533a\u65f6\u95f4 # kind\u53ea\u80fd\u662f \"year\", \"month\", \"day\", \"hour\", \"minute\", \"second\" # order\u53ea\u80fd\u662f\uff1a\"ASC\" \"DESC\" # tzinfo\u65f6\u533a\u5bf9\u8c61 models.DDD.objects.datetimes('ctime','hour',tzinfo=pytz.UTC) models.DDD.objects.datetimes('ctime','hour',tzinfo=pytz.timezone('Asia/Shanghai')) \"\"\" pip3 install pytz import pytz pytz.all_timezones pytz.timezone(\u2018Asia/Shanghai\u2019) \"\"\" def none(self): # \u7a7aQuerySet\u5bf9\u8c61 #################################### # METHODS THAT DO DATABASE QUERIES # #################################### def aggregate(self, *args, **kwargs): # \u805a\u5408\u51fd\u6570\uff0c\u83b7\u53d6\u5b57\u5178\u7c7b\u578b\u805a\u5408\u7ed3\u679c from django.db.models import Count, Avg, Max, Min, Sum result = models.UserInfo.objects.aggregate(k=Count('u_id', distinct=True), n=Count('nid')) ===> {'k': 3, 'n': 4} def count(self): # \u83b7\u53d6\u4e2a\u6570 def get(self, *args, **kwargs): # \u83b7\u53d6\u5355\u4e2a\u5bf9\u8c61 def create(self, **kwargs): # \u521b\u5efa\u5bf9\u8c61 def bulk_create(self, objs, batch_size=None): # \u6279\u91cf\u63d2\u5165 # batch_size\u8868\u793a\u4e00\u6b21\u63d2\u5165\u7684\u4e2a\u6570 objs = [ models.DDD(name='r11'), models.DDD(name='r22') ] models.DDD.objects.bulk_create(objs, 10) def get_or_create(self, defaults=None, **kwargs): # \u5982\u679c\u5b58\u5728\uff0c\u5219\u83b7\u53d6\uff0c\u5426\u5219\uff0c\u521b\u5efa # defaults \u6307\u5b9a\u521b\u5efa\u65f6\uff0c\u5176\u4ed6\u5b57\u6bb5\u7684\u503c obj, created = models.UserInfo.objects.get_or_create(username='root1', defaults={'email': '1111111','u_id': 2, 't_id': 2}) def update_or_create(self, defaults=None, **kwargs): # \u5982\u679c\u5b58\u5728\uff0c\u5219\u66f4\u65b0\uff0c\u5426\u5219\uff0c\u521b\u5efa # defaults \u6307\u5b9a\u521b\u5efa\u65f6\u6216\u66f4\u65b0\u65f6\u7684\u5176\u4ed6\u5b57\u6bb5 obj, created = models.UserInfo.objects.update_or_create(username='root1', defaults={'email': '1111111','u_id': 2, 't_id': 1}) def first(self): # \u83b7\u53d6\u7b2c\u4e00\u4e2a def last(self): # \u83b7\u53d6\u6700\u540e\u4e00\u4e2a def in_bulk(self, id_list=None): # \u6839\u636e\u4e3b\u952eID\u8fdb\u884c\u67e5\u627e id_list = [11,21,31] models.DDD.objects.in_bulk(id_list) def delete(self): # \u5220\u9664 def update(self, **kwargs): # \u66f4\u65b0 def exists(self): # \u662f\u5426\u6709\u7ed3\u679c distinct\u7684\u8bf4\u660e\u4e0evalues/values_list\u7684\u673a\u5236 \u5173\u4e8edistinct\u7684\u8bf4\u660e\uff1a 1\u3001\u5fc5\u987b\u5148\u7528values/values_list\u7b5b\u9009\u51fa\u6570\u636e\u540e\u518d\u8fdb\u884c\u53bb\u91cd\uff1b 2\u3001\u5982\u679c\u4e0d\u5148\u7b5b\u9009\uff0c\u5c06\u5168\u90e8\u6570\u636e\u8fdb\u884cdistinct()\u7684\u64cd\u4f5c\uff0c\u7531\u4e8eid\u80af\u5b9a\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u8fd9\u6837\u505a\u6ca1\u6709\u610f\u4e49\uff01 values\u7684\u7528\u6cd5\u548c\u8fd4\u56de\u7ed3\u679c\u4e3e\u4f8b all_books = models.Book.objects.all().values('id','title') print(all_books) # <QuerySet [{'title': 'linux', 'id': 6}, {'title': '\u4f60\u597d', 'id': 7}, {'title': 'linux', 'id': 8}, {'title': 'xxx', 'id': 9}, {'title': 'gogogo', 'id': 10}]> ''' values\u505a\u7684\u4e8b\u60c5\uff1a ret = [] #queryset\u7c7b\u578b for obj in Book.objects.all(): temp = { #\u5143\u7d20\u662f\u5b57\u5178\u7c7b\u578b 'id':obj.id, 'title':obj.title } ret.append(temp) ''' values_list\u7684\u7528\u6cd5\u548c\u8fd4\u56de\u7ed3\u679c\u8bf4\u660e all_books = models.Book.objects.all().values_list('id','title') print(all_books) #<QuerySet [(6, 'linux'), (7, '\u4f60\u597d'), (8, 'linux'), (9, 'xxx'), (10, 'gogogo')]> ''' values\u505a\u7684\u4e8b\u60c5\uff1a ret = [] #queryset\u7c7b\u578b for obj in Book.objects.all(): temp = ( #\u5143\u7d20\u662f\u5143\u7956\u7c7b\u578b obj.id,obj.title ) ret.append(temp) ''' distinct\u7684\u7528\u6cd5\u548c\u8fd4\u56de\u7ed3\u679c\u8bf4\u660e ''' all_books = models.Book.objects.all().distinct() #\u8fd9\u6837\u5199\u662f\u8868\u793a\u8bb0\u5f55\u4e2d\u6240\u6709\u7684\u5b57\u6bb5\u91cd\u590d\u624d\u53eb\u91cd\u590d\uff0c \u4f46\u662f\u6211\u4eec\u77e5\u9053\u6709\u4e3b\u952e\u7684\u5b58\u5728\uff0c\u6240\u4ee5\u4e0d\u53ef\u80fd\u6240\u6709\u5b57\u6bb5\u6570\u636e\u90fd\u91cd\u590d all_books = models.Book.objects.all().distinct('price') #\u62a5\u9519\uff0c\u4e0d\u80fd\u5728distinct\u91cc\u9762\u52a0\u5b57\u6bb5\u540d\u79f0 all_books = models.Book.objects.all().values('price').distinct()#<QuerySet [(Decimal('11.00'),), (Decimal('111.00'),), (Decimal('120.00'),), (Decimal('11111.00'),)]> ''' all_books = models.Book.objects.all().values_list('price').distinct() # <QuerySet [{'price': Decimal('11.00')}, {'price': Decimal('111.00')}, {'price': Decimal('120.00')}, {'price': Decimal('11111.00')}]> # \u53ea\u80fd\u7528\u4e8evaluse\u548cvalues_list\u8fdb\u884c\u53bb\u91cd # title\u548cprice\u4e24\u4e2a\u540c\u65f6\u91cd\u590d\u624d\u7b97\u4e00\u6761\u91cd\u590d\u7684\u8bb0\u5f55 all_books = models.Book.objects.all().values_list('title','price').distinct() \u5728MySQL\u6570\u636e\u5e93\u4e2d\u67e5\u8be2\u65e5\u671f\u7684\u95ee\u9898 # \u627e2012\u5e74\u7684\u6240\u6709\u4e66\u7c4d all_books = models.Book.objects.filter(pub_date__year=2012) # \u627e\u5927\u4e8e\u7b49\u4e8e2012\u5e74\u7684\u6240\u6709\u4e66\u7c4d all_books = models.Book.objects.filter(pub_date__year__gte=2012) # \u627e2019\u5e74\u6708\u4efd\u7684\u6240\u6709\u4e66\u7c4d\uff0c\u5982\u679c\u660e\u660e\u6709\u7ed3\u679c\uff0c\u4f60\u5374\u67e5\u4e0d\u51fa\u7ed3\u679c\uff0c\u662f\u56e0\u4e3amysql\u6570\u636e\u5e93\u7684\u65f6\u533a\u548c\u54b1\u4eecdjango\u7684\u65f6\u533a\u4e0d\u540c\u5bfc\u81f4\u7684\uff0c # \u4f60\u9700\u8981\u505a\u7684\u5c31\u662f\u5c06django\u4e2d\u7684settings\u914d\u7f6e\u6587\u4ef6\u91cc\u9762\u7684USE_TZ = True\u6539\u4e3aFalse\uff0c\u5c31\u53ef\u4ee5\u67e5\u5230\u7ed3\u679c\u4e86\uff0c # \u4ee5\u540e\u8fd9\u4e2a\u503c\u5c31\u6539\u4e3aFalse\uff0c\u800c\u4e14\u5c31\u662f\u56e0\u4e3a\u6211\u4eec\u7528\u7684mysql\u6570\u636e\u5e93\u624d\u4f1a\u6709\u8fd9\u4e2a\u95ee\u9898\uff0c\u5176\u4ed6\u6570\u636e\u5e93\u6ca1\u6709\u8fd9\u4e2a\u95ee\u9898\u3002 all_books = models.Book.objects.filter(pub_date__year=2019,pub_date__month=2) \u81ea\u5b9a\u4e49\u5b57\u6bb5 \u7528\u7684\u6bd4\u8f83\u5c11\uff0c\u8bb0\u5f55\u4e00\u4e0b\u5427: class UnsignedIntegerField(models.IntegerField): def db_type(self, connection): return 'integer UNSIGNED' \u81ea\u5b9a\u4e49char\u7c7b\u578b\u5b57\u6bb5\uff1a class FixedCharField(models.Field): \"\"\" \u81ea\u5b9a\u4e49\u7684char\u7c7b\u578b\u7684\u5b57\u6bb5\u7c7b \"\"\" def __init__(self, max_length, *args, **kwargs): super().__init__(max_length=max_length, *args, **kwargs) self.length = max_length def db_type(self, connection): \"\"\" \u9650\u5b9a\u751f\u6210\u6570\u636e\u5e93\u8868\u7684\u5b57\u6bb5\u7c7b\u578b\u4e3achar\uff0c\u957f\u5ea6\u4e3alength\u6307\u5b9a\u7684\u503c \"\"\" return 'char(%s)' % self.length class Class(models.Model): id = models.AutoField(primary_key=True) title = models.CharField(max_length=25) # \u4f7f\u7528\u4e0a\u9762\u81ea\u5b9a\u4e49\u7684char\u7c7b\u578b\u7684\u5b57\u6bb5 cname = FixedCharField(max_length=25) \u5355\u8868\u64cd\u4f5c\u51c6\u5907 \u9879\u76ee\u7684\u521b\u5efa\u3001app\u7684\u521b\u5efa\u53ca\u6ce8\u518c\u3001MySQL\u7684\u8fde\u63a5\u914d\u7f6e\u8fd9\u91cc\u5c31\u4e0d\u8d58\u8ff0\u4e86\uff0c\u6709\u4e0d\u660e\u767d\u7684\u8bf7\u5230 Django\u6846\u67b6\u5165\u95e8 \u67e5\u770b\u3002 \u6211\u4eec\u5148\u521b\u5efa\u4e00\u4e2a\u5355\u8868\u7684model\uff0c\u5b58\u653e\u4e66\u7c4d\u7684\u4fe1\u606f\uff1a from django.db import models # Create your models here. #\u6ce8\u610f\u8fd9\u4e2aBook\u7c7b\u5fc5\u987b\u7ee7\u627fmodels.Model class Book(models.Model): #AutoField\u4e3a\u81ea\u589e\u5bf9\u8c61\uff0c\u62ec\u53f7\u91cc\u9762\u7684\u662f\u9650\u5b9a\u6761\u4ef6 id = models.AutoField(primary_key=True) #CharField\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u62ec\u53f7\u91cc\u9762\u8868\u793a\u5b83\u7684\u6700\u5927\u957f\u5ea6 title = models.CharField(max_length=32) state = models.BooleanField() #DateField\u662f\u5b58\u65e5\u671f\u7684 pub_date =models.DateField() #DecimalField\u662f\u4e00\u4e2a\u6d6e\u70b9\u578b\uff1amax_digits\u4e3a\u6700\u5927\u7684\u4f4d\u6570\uff0c\u4f46\u662f\u6709\u4e24\u4f4d\u662f\u5c0f\u6570\u2014\u2014111111.11 price = models.DecimalField(max_digits=8,decimal_places=2) publish = models.CharField(max_length=32) #\u6253\u5370\u8fd9\u4e2a\u7c7b\u5c55\u793a\u7684\u662f\u5b83\u7684title def __str__(self): return self.title \u5982\u679c\u60f3\u6253\u5370orm\u8f6c\u6362\u8fc7\u7a0b\u4e2d\u7684sql\uff0c\u9700\u8981\u5728 settings \u4e2d\u8fdb\u884c\u5982\u4e0b\u914d\u7f6e\uff1a LOGGING = { 'version': 1, 'disable_existing_loggers': False, 'handlers': { 'console':{ 'level':'DEBUG', 'class':'logging.StreamHandler', }, }, 'loggers': { 'django.db.backends': { 'handlers': ['console'], 'propagate': True, 'level':'DEBUG', }, } } \u8fd8\u6709\u53e6\u5916\u4e00\u79cd\u67e5\u770bSQL\u8bed\u53e5\u7684\u65b9\u5f0f\uff1a # \u5728\u89c6\u56fe\u51fd\u6570\u4e2d\u64cd\u4f5c from book import models def add_book(request): ''' \u6dfb\u52a0\u8868\u8bb0\u5f55 :param request: http\u8bf7\u6c42\u4fe1\u606f :return: ''' book_obj = models.Book(title='python',price=123,pub_date='2012-12-12',publish='\u4eba\u6c11\u51fa\u7248\u793e') book_obj.save() # \u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u4e5f\u80fd\u67e5\u770b\u6267\u884c\u7684sql\u8bed\u53e5 from django.db import connection print(connection.queries) return HttpResponse('ok') \u5355\u8868\u64cd\u4f5c\u4e4b\u6dfb\u52a0\u8868\u8bb0\u5f55 \u65b9\u5f0f\u4e00(\u63a8\u8350): #\u6ce8\u610f\u65e5\u671f\u6309\u7167\u8fd9\u4e2a\u683c\u5f0f\u6765\uff01 book_obj=models.Book.objects.create(title='Python\u8475\u82b1\u5b9d\u5178',state=True,price=100,publish='\u82f9\u679c\u51fa\u7248\u793e',pub_date='2015-12-13') #\u6253\u5370title... print(book_obj.title) \u6ce8\u610fcreate\u662f\u6709\u8fd4\u56de\u503c\u7684\uff0ccreate\u65b9\u6cd5\u7684\u8fd4\u56de\u503cbook_obj\u5c31\u662f\u63d2\u5165book\u8868\u4e2d\u7684python\u8475\u82b1\u5b9d\u5178\u8fd9\u672c\u4e66\u7c4d\u7eaa\u5f55\u5bf9\u8c61 \u65b9\u5f0f\u4e8c : book_obj=Book(title=\"python\u8475\u82b1\u5b9d\u5178\",state=True,price=100,publish=\"\u82f9\u679c\u51fa\u7248\u793e\",pub_date=\"2012-12-12\") book_obj.save() \u65b9\u5f0f\u4e09:\u6279\u91cf\u63d2\u5165 book_list = [] for i in range(10): bk_obj = models.Book( name='chao%s'%i, addr='\u5317\u4eac%s'%i ) book_list.append(bk_obj) models.Book.objects.bulk_create(book_list) #\u6279\u91cf\u63d2\u5165\uff0c\u901f\u5ea6\u5feb \u65b9\u5f0f\u56db:update_or_create--\u6709\u5c31\u66f4\u65b0\uff0c\u6ca1\u6709\u5c31\u521b\u5efa obj,created = models.UserToken.objects.update_or_create( user=user, # \u67e5\u627e\u7b5b\u9009\u6761\u4ef6 defaults={ # \u6dfb\u52a0\u6216\u8005\u66f4\u65b0\u7684\u6570\u636e \u3000\u3000\u3000\u3000\u3000\u3000\"token\":random_str, \u3000\u3000\u3000\u3000} ) ''' \u8bf4\u660e\uff1a 1\u3001\u7b2c\u4e00\u4e2a\u503cobj\u4e3a\uff1a\u65b0\u521b\u5efa\u7684model\u5bf9\u8c61 2\u3001\u7b2c\u4e8c\u4e2a\u503ccreated\u4e3a\uff1a\u662f\u5426\u8fdb\u884c\u4e86\u65b0\u7684\u6570\u636e\u7684\u63d2\u5165\u7684\u64cd\u4f5c\uff0c\u53ea\u662f\u66f4\u65b0\u539f\u59cb\u6570\u636e\u4e3afalse\uff0c\u65b0\u52a0\u5165\u6570\u636e\u4e3atrue\uff01 3\u3001\u5982\u679c\u67e5\u8be2\u5230\u591a\u6761\u6570\u636e\uff0c\u90a3\u4e48\u5c31\u4f1a\u62a5\u9519\uff01\u56e0\u4e3a\u6e90\u7801\u91cc\u9762\u7528\u7684\u662fget\u65b9\u6cd5\uff01\u53ef\u4ee5\u7528\u5f02\u5e38\u5904\u7406\uff01 ''' \u5355\u8868\u7684\u67e5\u8be2\u4e4b\u67e5\u8be2\u7684API \u524d4\u4e2a\u6700\u91cd\u8981\uff0c5--9\u6bd4\u8f83\u5bb9\u6613\uff0c10\u4e2d\u7684\u4e09\u4e2a\u65b9\u6cd5\u6bd4\u8f83\u96be\u4e5f\u975e\u5e38\u91cd\u8981\uff01 \u4e00\u5b9a\u8981\u77e5\u9053\u6bcf\u4e2a\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u662f\u4ec0\u4e48\uff0c\u4ee5\u53ca\u6bcf\u4e2a\u65b9\u6cd5\u662f\u7531\u8c01\u6765\u8c03\u7528\u7684 (1)all() models.Book.objects\u6765\u8c03\u7528\uff0c\u8fd4\u56de\u7684\u662fQuerySet\u7c7b\u578b\u7684\u5bf9\u8c61\u2014\u2014django\u81ea\u5df1\u5b9a\u4e49\u7684\u6570\u636e\u7c7b\u578b \u5c06\u67e5\u8be2\u51fa\u6765\u7684\u67e5\u8be2\u51fa\u6765\u7684\u6240\u6709\u5bf9\u8c61\u653e\u5728\u5217\u8868\u4e2d \u5728models\u7684Book\u7c7b\u4e2d\u5199\u4e86__str__\u65b9\u6cd5\uff0c\u4e14__str__\u8fd4\u56de\u7684\u662ftitle\u7684\u503c\uff0c\u6240\u4ee5\u540e\u9762\u4f1a\u6253\u5370title book_list = models.Book.objects.all() print(book_list) #\u904d\u5386\u8fd9\u4e2a\u5b57\u5178\u53ef\u4ee5\u8fdb\u884c\u76f8\u5e94\u7684\u53d6\u503c\u64cd\u4f5c for i in book_list: print(i.title,i.price) #\u4e5f\u53ef\u4ee5\u8fdb\u884c\u7d22\u5f15\u64cd\u4f5c print(book_list[0].pub_date) (2)first\u4e0elast \u8fd4\u56de\u503c\u4e0d\u662fQuerySet\u5bf9\u8c61\uff0c\u800c\u662fmodel\u5bf9\u8c61\uff0c\u7b49\u4ef7\u4e8ebook_list[0] \u8c03\u7528\u8005\u662fQuerySet\u5bf9\u8c61 book_first = models.Book.objects.first() print(book_first) (3)filter\u65b9\u6cd5 \u5bf9\u5e94where\u8bed\u53e5 \u8c03\u7528\u8005objects\uff0c\u8fd4\u56de\u503c\u662fQuerySet\u5bf9\u8c61 book_list2 = models.Book.objects.filter(price=100) print(book_list2) (3-1)\u53ef\u4ee5\u8ddffirst\u6216\u8005last\u65b9\u6cd5 book_list2_last = models.Book.objects.filter(price=100).last() print(book_list2_last.pubdate) (3-2)\u53ef\u4ee5\u5e26\u591a\u4e2a\u591a\u8651\u6761\u4ef6 book_list2_more = models.Book.objects.filter(price=100,title='\u897f\u6e38\u8bb0') print(book_list2_more) (4)get\u65b9\u6cd5 \u5f88\u50cffilter\uff0c\u4f46\u662f\uff0cget\u65b9\u6cd5\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u67e5\u8be2\u7ed3\u679c\u662f\u624d\u6709\u610f\u4e49\uff1b\u5982\u679c\u6709\u591a\u4e2a\u67e5\u8be2\u7ed3\u679c\u4f1a\u62a5\u9519! \u8fd4\u56de\u503c\u662f\u4e00\u4e2amodel\u5bf9\u8c61\uff0c\u5229\u7528objects\u8c03\u7528! book_get = models.Book.objects.get(title='\u897f\u6e38\u8bb0') print(book_get) (5)exclude\u65b9\u6cd5 \u6392\u9664\u2014\u2014\u5f97\u5230\u7684\u662f\u4e2aQuerySet\u5bf9\u8c61\uff0c\u7531objects\u8c03\u7528,\u4e5f\u53ef\u4ee5\u7528QuerySet\u5bf9\u8c61\u8c03\u7528 models\u8c03\u7528\uff1a book_exclude = models.Book.objects.exclude(title='\u897f\u6e38\u8bb0') print(book_exclude) QuerySet\u8c03\u7528\uff1a ret = models.Book.objects.filter(price=11).exclude(id=2) print(ret) (6)order_by\u6392\u5e8f \u5f97\u5230\u7684\u662fQuerySet\u5bf9\u8c61\uff0c\u7531objects\u8c03\u7528 (6-1)\u9ed8\u8ba4\u5347\u5e8f book_order_by_asc = models.Book.objects.order_by('title') print('\u5347\u5e8f\uff1a',book_order_by_asc) (6-2)\u964d\u5e8f\u6392\u5e8f book_order_by_desc = models.Book.objects.order_by('-title') print('\u964d\u5e8f\uff1a',book_order_by_desc) (6-3)\u4e5f\u53ef\u4ee5\u5229\u7528\u4e24\u4e2a\u5b57\u6bb5\u6392\u5e8f\uff1a\u2014\u2014\u7b2c\u4e00\u4e2a\u5b57\u6bb5\u76f8\u7b49\u7684\u65f6\u5019\u518d\u7528\u7b2c\u4e8c\u4e2a\u5b57\u6bb5\u6392\u5e8f book_order_by1 = models.Book.objects.order_by('title','price') print('\u4e24\u4e2a\u5b57\u6bb5\u6392\u5e8f\uff1a',book_order_by1) (7)reverse\u53cd\u8f6c \u53ef\u4ee5\u5728order_by\u7684\u57fa\u7840\u4e0a\u52a0\u4e0areverse book_reverse = models.Book.objects.order_by('title').reverse() print('\u6392\u5e8f\u53cd\u8f6c\uff1a',book_reverse) (8)count\u8ba1\u6570 \u8fd4\u56deint\u7c7b\u578b\u7684\u6570\u636e\uff0c\u8c03\u7528\u8005\u662fQuerySet count = models.Book.objects.all().count() print('\u6570\u636e\u7684\u603b\u6570\uff1a',(count,type(count))) (9)exists\u68c0\u6d4b\u662f\u5426\u5b58\u5728\u8bb0\u5f55 \u5982\u679c\u4e0d\u52a0exists\u5219\u8868\u793a\u53d6\u51fa\u6765\u6240\u6709\u7684\u503c\u4e86\uff0c\u6ca1\u5fc5\u8981\u53d6\u6240\u6709\u7684\u503c\uff0c\u8fd9\u6837\u6548\u7387\u4e0d\u9ad8\uff1b \u52a0\u4e0aexists\u76f8\u5f53\u4e8e\u5229\u7528limit\u9650\u5236\u53ea\u53d6\u51fa\u6765\u4e00\u6761\u6570\u636e\u53bb\u5224\u65ad\u6709\u6ca1\u6709\u8bb0\u5f55\u3002 ret = models.Book.objects.all().exists() if ret: print('OK!\u6709\u6570\u636e\uff01') \u91cd\u70b9\uff1a(10)values( field)\u3001values_list( field)\u3001distinct() (10-1)values(*field) \u67e5\u8be2\u6240\u6709\u4e66\u7c4d\u7684\u540d\u79f0\uff1a \u5f97\u5230\u7684\u662f\u4e00\u4e2aQuerySet\u5bf9\u8c61\uff1a <QuerySet [{'title': 'Python\u8475\u82b1\u5b9d\u5178'}, {'title': 'Python\u8475\u82b1\u5b9d\u51781'}, {'title': '\u91d1\u74f6\u74f6'}]> \u7531QuerySet\u5bf9\u8c61\u8c03\u7528\u4f46\u662f\u5217\u8868\u4e2d\u653e\u7684\u4e0d\u662f\u4e00\u4e2a\u4e2a\u7684\u5bf9\u8c61\u4e86\uff0c\u800c\u662f\u4e00\u4e2a\u4e2a\u7684\u5b57\u5178\uff01 book_titles = models.Book.objects.all().values('title') print('\u6240\u6709\u4e66\u7c4d\u7684\u540d\u79f0\uff1a',book_titles) \"\"\" values\u7684\u5de5\u4f5c\u539f\u7406\uff1a \u73b0\u5728\u5c06values\u4e2d\u7684\u53c2\u6570\u6539\u4e3a\u4e3a'title','price'\uff08\u6ce8\u610fvalue\u4e0evalue_list\u4e2d\u53ef\u4ee5\u653e\u4e24\u4e2a\u53c2\u6570\uff09 temp = [] for obj in models.Book.objects.all() temp.append( 'title':obj.title, 'price':obj.price ) return temp \"\"\" (10-1-1)\u4e5f\u53ef\u4ee5\u5229\u7528\u64cd\u4f5c\u5b57\u5178\u7684\u65b9\u6cd5\u6765\u64cd\u4f5c\u7ed3\u679c\uff1a book_title_1_title = book_titles[1].get('title') print('\u7b2c\u4e8c\u4e2a\u4e66\u7c4d\u7684\u540d\u5b57:',book_title_1_title) (10-2)values_list(*field)\u65b9\u6cd5 \u4e0evalue\u65b9\u6cd5\u4e00\u6837\uff0c\u8c03\u7528\u8005\u4e0e\u8fd4\u56de\u503c\u5747\u662fQuerySet\u5bf9\u8c61 \u4f46\u662f\uff0cvalue_list\u7684\u7ed3\u679c\u662f\u5217\u8868\u91cc\u9762\u5d4c\u5957\u5143\u7ec4 book_values_list = models.Book.objects.all().values_list('title') print(book_values_list) (10-3)distinct\u65b9\u6cd5\u53bb\u91cd price_distinct = models.Book.objects.all().values('price').distinct() print('price\u53bb\u91cd\uff1a',price_distinct) \u5355\u8868\u7684\u67e5\u8be2\u4e4b\u5e26\u53cc\u4e0b\u5212\u7ebf\u7684\u6a21\u7cca\u67e5\u8be2 \u6ce8\u610f\u8981\u7528filter\u8fc7\u6ee4 (1)\u67e5\u8be2\u4ef7\u683c\u5927\u4e8e100\u7684\uff1agt gt_100 = models.Book.objects.filter(price__gt=100) print('\u4ef7\u683c\u5927\u4e8e100\u7684\uff1a',gt_100) \u6ce8\u610f\u5927\u4e8e\u7b49\u4e8e\u7684\u8bdd\u662f gte \uff1a gte_100 = models.Book.objects.filter(price__gte=100) (2)\u5c0f\u4e8e\uff1alt lt_10000 = models.Book.objects.filter(price__lt=10000) print('\u4ef7\u683c\u5c0f\u4e8e10000\u7684\uff1a',lt_10000) (3)\u5927\u4e8e100\u5c0f\u4e8e10000\u7684\uff1a gt_100_lt_10000 = models.Book.objects.filter(price__gt=100,price__lt=10000) print('\u4ef7\u683c\u5927\u4e8e100\u5c0f\u4e8e10000\u7684:',gt_100_lt_10000) (4)\u4ef7\u683c\u5305\u542b[100,200,300]\u8fd9\u51e0\u4e2a\u7684\uff1a price_in = models.Book.objects.filter(price__in=[100,200,300]) print('\u4ef7\u683c\u5305\u542b\uff1a',price_in) (5)title\u4ee5\u201c\u897f\u201d\u5b57\u5f00\u5934\u7684\u6570\u636e\uff1a title_starts_xi = models.Book.objects.filter(title__startswith='\u897f') print('title\u4ee5\u897f\u5b57\u5f00\u5934\uff1a',title_starts_xi) (6)\u5305\u542b\u2014\u2014contains title_contains = models.Book.objects.filter(title__contains='p') print('title\u5305\u542bp\u7684\uff1a',title_contains) (6-1)\u5ffd\u7565\u5927\u5c0f\u5199\u7684\u5305\u542b\u2014\u2014icontains title_icontains = models.Book.objects.filter(title__icontains='p') print('title\u5305\u542bp\u6216\u8005P\u7684\uff1a',title_icontains) (7)\u5728\u4e00\u4e2a\u8303\u56f4\u4e4b\u5185\uff1arange price_range = models.Book.objects.filter(price__range=[100,10000]) print('\u4ef7\u683c\u5728\u4e00\u4e2a\u8303\u56f4\u4e4b\u5185\uff1a',price_range) (8)\u5173\u4e8e\u65e5\u671f\u7684\u6a21\u7cca\u67e5\u8be2 (8-1)\u8fc7\u6ee4\u4e00\u4e0b\u51fa\u7248\u65e5\u671f\u662f2014\u5e74\u7684\u6570\u636e # \u6ce8\u610f\u53ea\u6709date\u7c7b\u578b\u7684\u5b57\u6bb5\u624d\u6709__year # \u60f3\u67e5\u627e\u6708\u4efd\u5c31\u7528__month\u5c31\u53ef\u4ee5\u4e86 pub_date_2014 = models.Book.objects.filter(pub_date__year=2014) print('2014\u51fa\u7248\u7684\u6570\u636e\uff1a',pub_date_2014) \u5355\u8868\u64cd\u4f5c\u4e4b\u5220\u9664\u4e0e\u4fee\u6539\u8bb0\u5f55 (1)\u5220\u9664\uff1adelete (1-1)\u65b9\u6cd5\u4e00\uff1aQuerySet\u5bf9\u8c61\u8c03\u7528delete\u65b9\u6cd5 models.Book.objects.filter(price=100).delete() (1-2)\u65b9\u6cd5\u4e8c\uff1a\u7528model\u5bf9\u8c61 models.Book.objects.filter(price=100).first().delete() (2)\u4fee\u6539\uff1aupdate \u6ce8\u610f\u5fc5\u987b\u8981\u7528 QuerySet\u5bf9\u8c61 \u8c03\u7528 models.Book.objects.filter(title='\u897f\u6e38\u8bb0').update(title='\u6c34\u6d52\u4f20') \u5355\u8868\u64cd\u4f5c\u4e4b\u5355\u8868\u4e0b\u7684\u5206\u7ec4\u67e5\u8be2 \u65b0\u5efa\u4e00\u4e2a\u5458\u5de5\u8868emp\uff0c\u5305\u542b\uff1aid\u3001name\u3001age\u3001salary\u3001dep(\u90e8\u95e8\u540d)\u3001province(\u7701\u4efd)\u3002 \u73b0\u5728\u7684\u9700\u6c42\u662f\uff1a\u67e5\u8be2\u201c\u6bcf\u4e2a\u90e8\u95e8\u7684\u5458\u5de5\u4eba\u6570\u201d\u3002\u4f7f\u7528\u539f\u751fSQL\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a select count(id) from emp group by dep; \u6211\u4eec\u770b\u770b\u4f7f\u7528ORM\u7684\u8bdd\u5982\u4f55\u53bb\u505a\u7c7b\u4f3c\u7684\u67e5\u8be2\u3002 models.py\u6587\u4ef6\u4e2d\u7684\u7c7b\uff1a class Emp(models.Model): name = models.CharField(max_length=32) age = models.IntegerField() salary = models.DecimalField(max_digits=8,decimal_places=2) dep = models.CharField(max_length=32) province = models.CharField(max_length=32) \u5355\u8868\u5206\u7ec4\u67e5\u8be2\u7684ORM\u8bed\u6cd5\uff1a # \u6ce8\u610f\u524d\u9762\u662f values\uff0c\u540e\u9762\u662fannotate\u65b9\u6cd5 \u5355\u8868\u6a21\u578b.objects.values('group by\u7684\u5b57\u6bb5').annotate(\u805a\u5408\u51fd\u6570('\u7edf\u8ba1\u5b57\u6bb5')) \u4f8b1\uff1a\u67e5\u8be2\u6bcf\u4e00\u4e2a\u90e8\u95e8\u7684\u540d\u79f0\u4ee5\u53ca\u5458\u5de5\u7684\u5e73\u5747\u85aa\u6c34 SQL\u4e2d select dep,avg(salary) from emp group by dep annotate\u65b9\u6cd5 \u8fd9\u91ccvalues\u76f8\u5f53\u4e8eselect ### \u4e00\u5b9a\u8981\u8bb0\u5f97\u5f15\u5165\u805a\u5408\u7684\u65b9\u6cd5 from django.db.models import Avg,Max,Min,Count ret = Emp.objects.values('dep').annotate(avg_salary=Avg('salary')) print(ret) #<QuerySet[{'dep':'\u5b89\u5168\u90e8','avg_salary':388.5},{'dep':'\u5408\u683c\u90e8','avg_salary': 1111.0}]> \u4f8b2\uff1a\u67e5\u8be2\u6bcf\u4e00\u4e2a\u7701\u4efd\u7684\u540d\u79f0\u53ca\u5458\u5de5\u6570 ret = Emp.objects.values('province').annotate(c=Count('id')) print(ret) #<QuerySet [{'province': '\u5317\u4eac', 'c': 1}, {'province':'\u4e0a\u6d77','c':1},{'province': '\u5927\u8fde', 'c': 1}]> \u8bf4\u660e 1\u3001\u5355\u8868\u4e0b\u7684\u5206\u7ec4\u67e5\u8be2\u8bed\u6cd5(\u6ce8\u610f\u662fvalues\u4e0d\u662ffilter)\uff1a \u5355\u8868\u6a21\u578b.objects.values('group by\u7684\u5b57\u6bb5').annotate(\u805a\u5408\u51fd\u6570('\u7edf\u8ba1\u5b57\u6bb5')) 2\u3001\u5728\u5355\u8868\u5206\u7ec4\u4e0b\uff0c\u6309\u7740\u4e3b\u952e\u8fdb\u884cgroup by \u662f\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\u7684\uff01 3\u3001ret = Emp.objects.all() \u7b49\u4ef7\u4e8e select * from emp 4\u3001ret = Emp.objects.values('name') \u7b49\u4ef7\u4e8e select name from emp 5\u3001ret = Emp.objects.values('id').annotate(Avg('salary')) \u7b49\u4ef7\u4e8e\uff1a ret = Emp.objects.all().annotate(Avg('salary')) # \u4f46\u662f \u5728\u5355\u8868\u5206\u7ec4\u4e0b\uff0c\u6309\u7740\u4e3b\u952e\u8fdb\u884cgroup by \u662f\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\u7684\uff01 # \u800c\u4e14\uff0c\u6309all()\u5206\u7ec4\u4e5f\u6ca1\u610f\u4e49\uff0c\u56e0\u4e3a\u5b83\u5305\u542b\u4e3b\u952e\u3002","title":"03 \u6a21\u578b\u5c421-ORM\u4ecb\u7ecd\u53ca\u5355\u8868\u64cd\u4f5c"},{"location":"Django\u6838\u5fc3/\u6a21\u578b\u5c42/#orm","text":"MTV\u6846\u67b6\u5305\u542b\u4e00\u4e2a\u91cd\u8981\u7684\u90e8\u5206\u5c31\u662fORM\u2014\u2014\u5bf9\u8c61\u5173\u7cfb\u6620\u5c04\uff08Object Relational Mapping\uff09\uff0c\u5b83\u5b9e\u73b0\u4e86\u6570\u636e\u6a21\u578b\u4e0e\u6570\u636e\u5e93\u7684\u89e3\u8026\uff0c\u5373\u6570\u636e\u6a21\u578b\u7684\u8bbe\u8ba1\u4e0d\u9700\u8981\u4f9d\u8d56\u4e8e\u7279\u5b9a\u7684\u6570\u636e\u5e93\uff0c\u901a\u8fc7\u7b80\u5355\u7684\u914d\u7f6e\u5c31\u53ef\u4ee5\u8f7b\u677e\u66f4\u6362\u6570\u636e\u5e93\uff0c\u8fd9\u6781\u5927\u7684\u51cf\u8f7b\u4e86\u5f00\u53d1\u4eba\u5458\u7684\u5de5\u4f5c\u91cf\uff0c\u4e0d\u9700\u8981\u9762\u5bf9\u56e0\u6570\u636e\u5e93\u53d8\u66f4\u800c\u5bfc\u81f4\u7684\u65e0\u6548\u52b3\u52a8\u3002 \u6570\u636e\u5e93\u5fc5\u987b\u63d0\u524d\u521b\u5efa\u597d\uff0c\u7136\u540eORM\u518d\u5728\u6570\u636e\u5e93\u4e2d\u8fdb\u884c\u8868\u7684\u64cd\u4f5c\uff0c\u56e0\u4e3aORM\u4e0d\u80fd\u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u64cd\u4f5c\uff0c\u4e0d\u80fd\u521b\u5efa\u4e0e\u5220\u9664\u6570\u636e\u5e93\u3002\u867d\u7136\u591a\u4e86\u4e00\u6b65ORM\u7ffb\u8bd1\u6210sql\u7684\u8fc7\u7a0b\uff0c\u6548\u7387\u770b\u8d77\u6765\u4f4e\u4e86\uff0c\u4f46\u662f\u5b9e\u9645\u4e2d\u6ca1\u6709\u592a\u5927\u7684\u635f\u4f24\uff0c\u5f53\u4f60 \u4e0d\u80fd\u5fcd \u7684\u65f6\u5019\uff0c\u4f60\u53ef\u4ee5 \u5728Django\u4e2d\u6267\u884c\u539f\u751fsql \uff0c\u4e00\u822c\u7684\u573a\u666fORM\u90fd\u591f\u7528\u4e86\uff0c\u5f00\u53d1\u8d77\u6765\u901f\u5ea6\u66f4\u5feb\uff0c\u5199\u6cd5\u66f4\u8d34\u8fd1\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u3002","title":"ORM\u7b80\u4ecb"},{"location":"Django\u6838\u5fc3/\u6a21\u578b\u5c42/#sqldjangoorm","text":"SQL\u4e2d\u7684\u8868\u64cd\u4f5c #\u521b\u5efa\u8868: CREATE TABLE employee( id INT PRIMARY KEY auto_increment , name VARCHAR (20), gender BIT default 1, birthday DATA , department VARCHAR (20), salary DECIMAL (8,2) unsigned, ); #\u6dfb\u52a0\u4e00\u6761\u8868\u7eaa\u5f55: INSERT employee (name,gender,birthday,salary,department) VALUES (\"whw\",1,\"1992-12-12\",8000,\"IT\"); #\u67e5\u8be2\u4e00\u6761\u8868\u7eaa\u5f55: SELECT * FROM employee WHERE age=24; #\u66f4\u65b0\u4e00\u6761\u8868\u7eaa\u5f55: UPDATE employee SET birthday=\"1991-10-24\" WHERE id=1; #\u5220\u9664\u4e00\u6761\u8868\u7eaa\u5f55: DELETE FROM employee WHERE name=\"whw\"; Django\u4e2dORM\u7684\u64cd\u4f5c #\u521b\u5efa\u8868 class Employee(models.Model): id=models.AutoField(primary_key=True) name=models.CharField(max_length=32) gender=models.BooleanField() birthday=models.DateField() department=models.CharField(max_length=32) salary=models.DecimalField(max_digits=8,decimal_places=2) #\u6dfb\u52a0\u4e00\u6761\u8868\u7eaa\u5f55: emp=Employee(name=\"whw\",gender=True,birthday=\"1991-12-12\",epartment=\"IT\") emp.save() #\u67e5\u8be2\u4e00\u6761\u8868\u7eaa\u5f55: Employee.objects.filter(age=24) #\u66f4\u65b0\u4e00\u6761\u8868\u7eaa\u5f55: Employee.objects.filter(id=1).update(birthday=\"1991-10-24\") #\u5220\u9664\u4e00\u6761\u8868\u7eaa\u5f55: Employee.objects.filter(name=\"whw\").delete()","title":"\u539f\u751fSQL\u4e0eDjango\u4e2dORM\u7684\u5bf9\u6bd4"},{"location":"Django\u6838\u5fc3/\u6a21\u578b\u5c42/#djangoorm","text":"\u5728\u672c\u6559\u7a0b\u7684 Django\u6846\u67b6\u5165\u95e8 \u7684\u90e8\u5206\u4e3a\u5927\u5bb6\u8be6\u7ec6\u4ecb\u7ecd\u4e86 Django\u4e0eMySQL\u7684\u4ea4\u4e92 \u4e0e ORM\u7684\u7b80\u5355\u4f7f\u7528 \uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u91cd\u590d\u8bf4\u660e\u521b\u5efa\u6587\u4ef6\u3001\u8fde\u63a5\u6570\u636e\u5e93\u3001\u751f\u6210Model\u8fd9\u4e9b\u6b65\u9aa4\u4e86\uff0c\u5927\u5bb6\u53ef\u4ee5\u5230\u672c\u6559\u7a0b\u7684\u5165\u95e8\u90e8\u5206\u8be6\u7ec6\u56de\u987e\u4e00\u4e0b\u5177\u4f53\u7684\u5185\u5bb9\u3002\u8fd9\u91cc\u4e3a\u5927\u5bb6\u8be6\u7ec6\u8bf4\u660e\u4e00\u4e0bDjango\u4e2dORM\u7684\u7ec6\u8282\u77e5\u8bc6\u70b9\u3002 ORM\u5b57\u6bb5\u4e0e\u6570\u636e\u5e93\u5b9e\u9645\u5b57\u6bb5\u7684\u5bf9\u5e94\u5173\u7cfb \u6211\u4eec\u5728\u521b\u5efaModel\u7684\u7c7b\u4e2d\u7684\u5b57\u6bb5\u4f1a\u5728\u6267\u884c\u6570\u636e\u5e93\u8fc1\u79fb\u6307\u4ee4\u7684\u65f6\u5019\u81ea\u52a8\u5c06Model\u4e2d\u7684\u5b57\u6bb5\u8f6c\u6362\u4e3aMySQL\u6570\u636e\u5e93\u4e2d\u7684\u5b57\u6bb5\uff0c\u5b83\u4eec\u7684\u5bf9\u5e94\u5173\u7cfb\u5982\u4e0b\uff1a # \u8fd9\u4e2a\u5bf9\u5e94\u5173\u7cfb\u5728\u4f60python3\u5b89\u88c5\u76ee\u5f55\u4e0b\uff1a # site-packages/django/db/mysql/base.py\u6587\u4ef6\u91cc\u7684\u4e00\u4e2adata_types\u5b57\u5178\u91cc\uff1a # This dictionary maps Field objects to their associated MySQL column # types, as strings. Column-type strings can contain format strings; they'll # be interpolated against the values of Field.__dict__ before being output. # If a column type is set to None, it won't be included in the output. data_types = { 'AutoField': 'integer AUTO_INCREMENT', 'BigAutoField': 'bigint AUTO_INCREMENT', 'BinaryField': 'longblob', 'BooleanField': 'bool', 'CharField': 'varchar(%(max_length)s)', 'DateField': 'date', 'DateTimeField': 'datetime(6)', 'DecimalField': 'numeric(%(max_digits)s, %(decimal_places)s)', 'DurationField': 'bigint', 'FileField': 'varchar(%(max_length)s)', 'FilePathField': 'varchar(%(max_length)s)', 'FloatField': 'double precision', 'IntegerField': 'integer', 'BigIntegerField': 'bigint', 'IPAddressField': 'char(15)', 'GenericIPAddressField': 'char(39)', 'NullBooleanField': 'bool', 'OneToOneField': 'integer', 'PositiveIntegerField': 'integer UNSIGNED', 'PositiveSmallIntegerField': 'smallint UNSIGNED', 'SlugField': 'varchar(%(max_length)s)', 'SmallIntegerField': 'smallint', 'TextField': 'longtext', 'TimeField': 'time(6)', 'UUIDField': 'char(32)', } ORM\u5e38\u7528\u7684\u5b57\u6bb5\u53ca\u8bf4\u660e <1> CharField \u5b57\u7b26\u4e32\u5b57\u6bb5, \u7528\u4e8e\u8f83\u77ed\u7684\u5b57\u7b26\u4e32. CharField \u8981\u6c42\u5fc5\u987b\u6709\u4e00\u4e2a\u53c2\u6570 maxlength, \u7528\u4e8e\u4ece\u6570\u636e\u5e93\u5c42\u548cDjango\u6821\u9a8c\u5c42\u9650\u5236\u8be5\u5b57\u6bb5\u6240\u5141\u8bb8\u7684\u6700\u5927\u5b57\u7b26\u6570. <2> IntegerField #\u7528\u4e8e\u4fdd\u5b58\u4e00\u4e2a\u6574\u6570. <3> FloatField \u4e00\u4e2a\u6d6e\u70b9\u6570. \u5fc5\u987b \u63d0\u4f9b\u4e24\u4e2a\u53c2\u6570: \u53c2\u6570 \u63cf\u8ff0 max_digits \u603b\u4f4d\u6570(\u4e0d\u5305\u62ec\u5c0f\u6570\u70b9\u548c\u7b26\u53f7) decimal_places \u5c0f\u6570\u4f4d\u6570 \u4e3e\u4f8b\u6765\u8bf4, \u8981\u4fdd\u5b58\u6700\u5927\u503c\u4e3a 999 (\u5c0f\u6570\u70b9\u540e\u4fdd\u5b582\u4f4d),\u4f60\u8981\u8fd9\u6837\u5b9a\u4e49\u5b57\u6bb5: models.FloatField(..., max_digits=5, decimal_places=2) \u8981\u4fdd\u5b58\u6700\u5927\u503c\u4e00\u767e\u4e07(\u5c0f\u6570\u70b9\u540e\u4fdd\u5b5810\u4f4d)\u7684\u8bdd,\u4f60\u8981\u8fd9\u6837\u5b9a\u4e49: models.FloatField(..., max_digits=17, decimal_places=10) #max_digits\u5927\u4e8e\u7b49\u4e8e17\u5c31\u80fd\u5b58\u50a8\u767e\u4e07\u4ee5\u4e0a\u7684\u6570\u4e86 admin \u7528\u4e00\u4e2a\u6587\u672c\u6846(<input type=\"text\">)\u8868\u793a\u8be5\u5b57\u6bb5\u4fdd\u5b58\u7684\u6570\u636e. <4> AutoField \u4e00\u4e2a IntegerField, \u6dfb\u52a0\u8bb0\u5f55\u65f6\u5b83\u4f1a\u81ea\u52a8\u589e\u957f. \u4f60\u901a\u5e38\u4e0d\u9700\u8981\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e2a\u5b57\u6bb5; \u81ea\u5b9a\u4e49\u4e00\u4e2a\u4e3b\u952e\uff1amy_id=models.AutoField(primary_key=True) \u5982\u679c\u4f60\u4e0d\u6307\u5b9a\u4e3b\u952e\u7684\u8bdd,\u7cfb\u7edf\u4f1a\u81ea\u52a8\u6dfb\u52a0\u4e00\u4e2a\u4e3b\u952e\u5b57\u6bb5\u5230\u4f60\u7684 model. <5> BooleanField A true/false field. admin \u7528 checkbox \u6765\u8868\u793a\u6b64\u7c7b\u5b57\u6bb5. <6> TextField \u4e00\u4e2a\u5bb9\u91cf\u5f88\u5927\u7684\u6587\u672c\u5b57\u6bb5. admin \u7528\u4e00\u4e2a <textarea> (\u6587\u672c\u533a\u57df)\u8868\u793a\u8be5\u5b57\u6bb5\u6570\u636e.(\u4e00\u4e2a\u591a\u884c\u7f16\u8f91\u6846). <7> EmailField \u4e00\u4e2a\u5e26\u6709\u68c0\u67e5Email\u5408\u6cd5\u6027\u7684 CharField,\u4e0d\u63a5\u53d7 maxlength \u53c2\u6570. <8> DateField \u4e00\u4e2a\u65e5\u671f\u5b57\u6bb5. \u5171\u6709\u4e0b\u5217\u989d\u5916\u7684\u53ef\u9009\u53c2\u6570: Argument \u63cf\u8ff0 auto_now \u5f53\u5bf9\u8c61\u88ab\u4fdd\u5b58\u65f6,\u81ea\u52a8\u5c06\u8be5\u5b57\u6bb5\u7684\u503c\u8bbe\u7f6e\u4e3a\u5f53\u524d\u65f6\u95f4.\u901a\u5e38\u7528\u4e8e\u8868\u793a \"last-modified\" \u65f6\u95f4\u6233. auto_now_add \u5f53\u5bf9\u8c61\u9996\u6b21\u88ab\u521b\u5efa\u65f6,\u81ea\u52a8\u5c06\u8be5\u5b57\u6bb5\u7684\u503c\u8bbe\u7f6e\u4e3a\u5f53\u524d\u65f6\u95f4.\u901a\u5e38\u7528\u4e8e\u8868\u793a\u5bf9\u8c61\u521b\u5efa\u65f6\u95f4. \uff08\u4ec5\u4ec5\u5728admin\u4e2d\u6709\u610f\u4e49...) <9> DateTimeField \u4e00\u4e2a\u65e5\u671f\u65f6\u95f4\u5b57\u6bb5. \u7c7b\u4f3c DateField \u652f\u6301\u540c\u6837\u7684\u9644\u52a0\u9009\u9879. <10> ImageField \u7c7b\u4f3c FileField, \u4e0d\u8fc7\u8981\u6821\u9a8c\u4e0a\u4f20\u5bf9\u8c61\u662f\u5426\u662f\u4e00\u4e2a\u5408\u6cd5\u56fe\u7247.#\u5b83\u6709\u4e24\u4e2a\u53ef\u9009\u53c2\u6570:height_field\u548cwidth_field, \u5982\u679c\u63d0\u4f9b\u8fd9\u4e24\u4e2a\u53c2\u6570,\u5219\u56fe\u7247\u5c06\u6309\u63d0\u4f9b\u7684\u9ad8\u5ea6\u548c\u5bbd\u5ea6\u89c4\u683c\u4fdd\u5b58. <11> FileField \u4e00\u4e2a\u6587\u4ef6\u4e0a\u4f20\u5b57\u6bb5. \u8981\u6c42\u4e00\u4e2a\u5fc5\u987b\u6709\u7684\u53c2\u6570: upload_to, \u4e00\u4e2a\u7528\u4e8e\u4fdd\u5b58\u4e0a\u8f7d\u6587\u4ef6\u7684\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u8def\u5f84. \u8fd9\u4e2a\u8def\u5f84\u5fc5\u987b\u5305\u542b strftime #formatting, \u8be5\u683c\u5f0f\u5c06\u88ab\u4e0a\u8f7d\u6587\u4ef6\u7684 date/time \u66ff\u6362(so that uploaded files dont fill up the given directory). admin \u7528\u4e00\u4e2a<input type=\"file\">\u90e8\u4ef6\u8868\u793a\u8be5\u5b57\u6bb5\u4fdd\u5b58\u7684\u6570\u636e(\u4e00\u4e2a\u6587\u4ef6\u4e0a\u4f20\u90e8\u4ef6) . \u6ce8\u610f\uff1a\u5728\u4e00\u4e2a model \u4e2d\u4f7f\u7528 FileField \u6216 ImageField \u9700\u8981\u4ee5\u4e0b\u6b65\u9aa4: \uff081\uff09\u5728\u4f60\u7684 settings \u6587\u4ef6\u4e2d, \u5b9a\u4e49\u4e00\u4e2a\u5b8c\u6574\u8def\u5f84\u7ed9 MEDIA_ROOT \u4ee5\u4fbf\u8ba9 Django\u5728\u6b64\u5904\u4fdd\u5b58\u4e0a\u4f20\u6587\u4ef6. (\u51fa\u4e8e\u6027\u80fd\u8003\u8651,\u8fd9\u4e9b\u6587\u4ef6\u5e76\u4e0d\u4fdd\u5b58\u5230\u6570\u636e\u5e93.) \u5b9a\u4e49MEDIA_URL \u4f5c\u4e3a\u8be5\u76ee\u5f55\u7684\u516c\u5171 URL. \u8981\u786e\u4fdd\u8be5\u76ee\u5f55\u5bf9 WEB\u670d\u52a1\u5668\u7528\u6237\u5e10\u53f7\u662f\u53ef\u5199\u7684. \uff082\uff09 \u5728\u4f60\u7684 model \u4e2d\u6dfb\u52a0 FileField \u6216 ImageField, \u5e76\u786e\u4fdd\u5b9a\u4e49\u4e86 upload_to \u9009\u9879,\u4ee5\u544a\u8bc9 Django \u4f7f\u7528 MEDIA_ROOT \u7684\u54ea\u4e2a\u5b50\u76ee\u5f55\u4fdd\u5b58\u4e0a\u4f20\u6587\u4ef6.\u4f60\u7684\u6570\u636e\u5e93\u4e2d\u8981\u4fdd\u5b58\u7684\u53ea\u662f\u6587\u4ef6\u7684\u8def\u5f84(\u76f8\u5bf9\u4e8e MEDIA_ROOT). \u51fa\u4e8e\u4e60\u60ef\u4f60\u4e00\u5b9a\u5f88\u60f3\u4f7f\u7528 Django \u63d0\u4f9b\u7684 get_<#fieldname>_url \u51fd\u6570.\u4e3e\u4f8b\u6765\u8bf4,\u5982\u679c\u4f60\u7684 ImageField \u53eb\u4f5c mug_shot, \u4f60\u5c31\u53ef\u4ee5\u5728\u6a21\u677f\u4e2d\u4ee5 {{ object.#get_mug_shot_url }} \u8fd9\u6837\u7684\u65b9\u5f0f\u5f97\u5230\u56fe\u50cf\u7684\u7edd\u5bf9\u8def\u5f84. <12> URLField \u7528\u4e8e\u4fdd\u5b58 URL. \u82e5 verify_exists \u53c2\u6570\u4e3a True (\u9ed8\u8ba4), \u7ed9\u5b9a\u7684 URL \u4f1a\u9884\u5148\u68c0\u67e5\u662f\u5426\u5b58\u5728( \u5373URL\u662f\u5426\u88ab\u6709\u6548\u88c5\u5165\u4e14 \u6ca1\u6709\u8fd4\u56de404\u54cd\u5e94). admin \u7528\u4e00\u4e2a <input type=\"text\"> \u6587\u672c\u6846\u8868\u793a\u8be5\u5b57\u6bb5\u4fdd\u5b58\u7684\u6570\u636e(\u4e00\u4e2a\u5355\u884c\u7f16\u8f91\u6846) <13> NullBooleanField \u7c7b\u4f3c BooleanField, \u4e0d\u8fc7\u5141\u8bb8 NULL \u4f5c\u4e3a\u5176\u4e2d\u4e00\u4e2a\u9009\u9879. \u63a8\u8350\u4f7f\u7528\u8fd9\u4e2a\u5b57\u6bb5\u800c\u4e0d\u8981\u7528 BooleanField \u52a0 null=True \u9009\u9879 admin \u7528\u4e00\u4e2a\u9009\u62e9\u6846 <select> (\u4e09\u4e2a\u53ef\u9009\u62e9\u7684\u503c: \"Unknown\", \"Yes\" \u548c \"No\" ) \u6765\u8868\u793a\u8fd9\u79cd\u5b57\u6bb5\u6570\u636e. <14> SlugField \"Slug\" \u662f\u4e00\u4e2a\u62a5\u7eb8\u672f\u8bed. slug \u662f\u67d0\u4e2a\u4e1c\u897f\u7684\u5c0f\u5c0f\u6807\u8bb0(\u77ed\u7b7e), \u53ea\u5305\u542b\u5b57\u6bcd,\u6570\u5b57,\u4e0b\u5212\u7ebf\u548c\u8fde\u5b57\u7b26.#\u5b83\u4eec\u901a\u5e38\u7528\u4e8eURLs \u82e5\u4f60\u4f7f\u7528 Django \u5f00\u53d1\u7248\u672c,\u4f60\u53ef\u4ee5\u6307\u5b9a maxlength. \u82e5 maxlength \u672a\u6307\u5b9a, Django \u4f1a\u4f7f\u7528\u9ed8\u8ba4\u957f\u5ea6: 50. \u5728\u4ee5\u524d\u7684 Django \u7248\u672c,\u6ca1\u6709\u4efb\u4f55\u529e\u6cd5\u6539\u53d850 \u8fd9\u4e2a\u957f\u5ea6.\u8fd9\u6697\u793a\u4e86 db_index=True. <15> XMLField \u4e00\u4e2a\u6821\u9a8c\u503c\u662f\u5426\u4e3a\u5408\u6cd5XML\u7684 TextField,\u5fc5\u987b\u63d0\u4f9b\u53c2\u6570: schema_path, \u5b83\u662f\u4e00\u4e2a\u7528\u6765\u6821\u9a8c\u6587\u672c\u7684 RelaxNG schema #\u7684\u6587\u4ef6\u7cfb\u7edf\u8def\u5f84. <16> FilePathField \u53ef\u9009\u9879\u76ee\u4e3a\u67d0\u4e2a\u7279\u5b9a\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u540d. \u652f\u6301\u4e09\u4e2a\u7279\u6b8a\u7684\u53c2\u6570, \u5176\u4e2d\u7b2c\u4e00\u4e2a\u662f\u5fc5\u987b\u63d0\u4f9b\u7684. \u53c2\u6570 \u63cf\u8ff0 path \u5fc5\u9700\u53c2\u6570. \u4e00\u4e2a\u76ee\u5f55\u7684\u7edd\u5bf9\u6587\u4ef6\u7cfb\u7edf\u8def\u5f84. FilePathField \u636e\u6b64\u5f97\u5230\u53ef\u9009\u9879\u76ee. Example: \"/home/images\". match \u53ef\u9009\u53c2\u6570. \u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f, \u4f5c\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32, FilePathField \u5c06\u4f7f\u7528\u5b83\u8fc7\u6ee4\u6587\u4ef6\u540d. \u6ce8\u610f\u8fd9\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u53ea\u4f1a\u5e94\u7528\u5230 base filename \u800c\u4e0d\u662f \u8def\u5f84\u5168\u540d. Example: \"foo.*\\.txt^\", \u5c06\u5339\u914d\u6587\u4ef6 foo23.txt \u5374\u4e0d\u5339\u914d bar.txt \u6216 foo23.gif. recursive\u53ef\u9009\u53c2\u6570.\u8981\u4e48 True \u8981\u4e48 False. \u9ed8\u8ba4\u503c\u662f False. \u662f\u5426\u5305\u62ec path \u4e0b\u9762\u7684\u5168\u90e8\u5b50\u76ee\u5f55. \u8fd9\u4e09\u4e2a\u53c2\u6570\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528. match \u4ec5\u5e94\u7528\u4e8e base filename, \u800c\u4e0d\u662f\u8def\u5f84\u5168\u540d. \u90a3\u4e48,\u8fd9\u4e2a\u4f8b\u5b50: FilePathField(path=\"/home/images\", match=\"foo.*\", recursive=True) ...\u4f1a\u5339\u914d /home/images/foo.gif \u800c\u4e0d\u5339\u914d /home/images/foo/bar.gif <17> IPAddressField \u4e00\u4e2a\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684 IP \u5730\u5740, (i.e. \"24.124.1.30\"). <18> CommaSeparatedIntegerField \u7528\u4e8e\u5b58\u653e\u9017\u53f7\u5206\u9694\u7684\u6574\u6570\u503c. \u7c7b\u4f3c CharField, \u5fc5\u987b\u8981\u6709maxlength\u53c2\u6570.","title":"Django\u4e2dORM\u7684\u8bf4\u660e"},{"location":"Django\u6838\u5fc3/\u6a21\u578b\u5c42/#_1","text":"\u6570\u636e\u5e93\u540c\u6b65\u6307\u4ee4\u5982\u4e0b\uff1a # \u751f\u6210\u8bb0\u5f55\uff0c\u6bcf\u6b21\u4fee\u6539\u4e86models\u91cc\u9762\u7684\u5185\u5bb9\u6216\u8005\u6dfb\u52a0\u4e86\u65b0\u7684app # \u65b0\u7684app\u91cc\u9762\u5199\u4e86models\u91cc\u9762\u7684\u5185\u5bb9\uff0c\u90fd\u8981\u6267\u884c\u8fd9\u4e24\u6761 python manage.py makemigrations # \u6267\u884c\u4e0a\u9762\u8fd9\u4e2a\u8bed\u53e5\u7684\u8bb0\u5f55\u6765\u521b\u5efa\u8868\uff0c\u751f\u6210\u7684\u8868\u540d\u5b57\u524d\u9762\u4f1a\u81ea\u5e26\u5e94\u7528\u7684\u540d\u5b57 # \u4f8b\u5982\uff1a\u4f60\u7684book\u8868\u5728mysql\u91cc\u9762\u53eb\u505aapp01_book\u8868 python manage.py migrate \u5173\u4e8e\u540c\u6b65\u6307\u4ee4\u6267\u884c\u7684\u539f\u7406\u53ca\u8fc1\u79fb\u5931\u8d25\u7684\u53ef\u80fd\u539f\u56e0\uff1a 1-\u5728\u6267\u884c python manager.py magrations\u65f6django\u4f1a\u5728\u76f8\u5e94\u7684app\u7684migration\u6587\u4ef6\u5939\u4e0b\u9762\u751f\u6210\u4e00\u4e2apython\u811a\u672c\u6587\u4ef6\u3002 2-\u5728\u6267\u884c python manager.py migrate\u65f6django\u624d\u4f1a\u751f\u6210\u6570\u636e\u5e93\u8868\uff0cdjango\u6839\u636e migration\u4e0b\u9762\u7684\u811a\u672c\u6587\u4ef6\u6765\u751f\u6210\u6570\u636e\u8868\u7684\u3002 \u7ecf\u8fc7\u591a\u6b21\u8fc1\u79fb\u7684\u8bdd\uff0c\u6bcf\u4e2amigration\u6587\u4ef6\u5939\u4e0b\u9762\u6709\u591a\u4e2a\u811a\u672c\uff0c\u5728django\u4e2d\u6709\u4e00\u5f20django-migrations\u8868\uff0c \u8868\u4e2d\u8bb0\u5f55\u4e86\u5df2\u7ecf\u6267\u884c\u7684\u811a\u672c\uff0c\u5bf9\u4e8e\u8868\u4e2d\u6ca1\u6709\u7684\u5c31\u662f\u8fd8\u6ca1\u6267\u884c\u7684\u811a\u672c\uff0c\u5728\u6267\u884cmigrate\u7684\u65f6\u5019\u5c31\u53ea\u6267\u884c\u8868\u4e2d\u6ca1\u6709\u8bb0\u5f55\u7684\u90a3\u4e9b\u811a\u672c\u3002 3-\u6709\u65f6\u5728\u6267\u884c migrate\u7684\u65f6\u5019\u5982\u679c\u53d1\u73b0\u6ca1\u6709\u751f\u6210\u76f8\u5e94\u7684\u8868\uff0c\u53ef\u4ee5\u770b\u770b\u5728 django-migrations\u8868\u4e2d\u770b\u770b\u811a\u672c\u662f\u5426\u5df2\u7ecf\u6267\u884c\u4e86\uff0c \u53ef\u4ee5\u5220\u9664django-migrations\u8868\u4e2d\u7684\u76f8\u5173\u8bb0\u5f55\uff0c\u7136\u540e\u91cd\u65b0\u6267\u884c\u3002","title":"\u6570\u636e\u5e93\u540c\u6b65\u6307\u4ee4\u89e3\u6790"},{"location":"Django\u6838\u5fc3/\u6a21\u578b\u5c42/#queryset","text":"ORM\u67e5\u8be2\u4e2d\u4f1a\u5f97\u5230\u4e00\u4e2a QuerySet\u5bf9\u8c61 \uff0c\u5f97\u5230\u8fd9\u4e2a\u5bf9\u8c61\u6211\u4eec\u53ef\u4ee5\u505a\u8fdb\u4e00\u6b65\u7684\u67e5\u8be2\uff08\u8fde\u8868\u3001\u53bb\u91cd\u7b49\u7b49\uff09\uff0c\u8fd9\u91cc\u7f57\u5217\u4e00\u4e0bQuery\u7684\u6240\u6709\u65b9\u6cd5\uff08\u90fd\u662f\u5728\u6e90\u7801\u4e2d\u627e\u7684\uff09\uff1a ################################################################## # PUBLIC METHODS THAT ALTER ATTRIBUTES AND RETURN A NEW QUERYSET # ################################################################## def all(self) # \u83b7\u53d6\u6240\u6709\u7684\u6570\u636e\u5bf9\u8c61 def filter(self, *args, **kwargs) # \u6761\u4ef6\u67e5\u8be2 # \u6761\u4ef6\u53ef\u4ee5\u662f\uff1a\u53c2\u6570\uff0c\u5b57\u5178\uff0cQ def exclude(self, *args, **kwargs) # \u6761\u4ef6\u67e5\u8be2 # \u6761\u4ef6\u53ef\u4ee5\u662f\uff1a\u53c2\u6570\uff0c\u5b57\u5178\uff0cQ def select_related(self, *fields) \u6027\u80fd\u76f8\u5173\uff1a\u8868\u4e4b\u95f4\u8fdb\u884cjoin\u8fde\u8868\u64cd\u4f5c\uff0c\u4e00\u6b21\u6027\u83b7\u53d6\u5173\u8054\u7684\u6570\u636e\u3002 \u603b\u7ed3\uff1a 1. select_related\u4e3b\u8981\u9488\u4e00\u5bf9\u4e00\u548c\u591a\u5bf9\u4e00\u5173\u7cfb\u8fdb\u884c\u4f18\u5316\u3002 2. select_related\u4f7f\u7528SQL\u7684JOIN\u8bed\u53e5\u8fdb\u884c\u4f18\u5316\uff0c\u901a\u8fc7\u51cf\u5c11SQL\u67e5\u8be2\u7684\u6b21\u6570\u6765\u8fdb\u884c\u4f18\u5316\u3001\u63d0\u9ad8\u6027\u80fd\u3002 def prefetch_related(self, *lookups) \u6027\u80fd\u76f8\u5173\uff1a\u591a\u8868\u8fde\u8868\u64cd\u4f5c\u65f6\u901f\u5ea6\u4f1a\u6162\uff0c\u4f7f\u7528\u5176\u6267\u884c\u591a\u6b21SQL\u67e5\u8be2\u5728Python\u4ee3\u7801\u4e2d\u5b9e\u73b0\u8fde\u8868\u64cd\u4f5c\u3002 \u603b\u7ed3\uff1a 1. \u5bf9\u4e8e\u591a\u5bf9\u591a\u5b57\u6bb5\uff08ManyToManyField\uff09\u548c\u4e00\u5bf9\u591a\u5b57\u6bb5\uff0c\u53ef\u4ee5\u4f7f\u7528prefetch_related()\u6765\u8fdb\u884c\u4f18\u5316\u3002 2. prefetch_related()\u7684\u4f18\u5316\u65b9\u5f0f\u662f\u5206\u522b\u67e5\u8be2\u6bcf\u4e2a\u8868\uff0c\u7136\u540e\u7528Python\u5904\u7406\u4ed6\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\u3002 def annotate(self, *args, **kwargs) # \u7528\u4e8e\u5b9e\u73b0\u805a\u5408group by\u67e5\u8be2 from django.db.models import Count, Avg, Max, Min, Sum v = models.UserInfo.objects.values('u_id').annotate(uid=Count('u_id')) # SELECT u_id, COUNT(ui) AS `uid` FROM UserInfo GROUP BY u_id v = models.UserInfo.objects.values('u_id').annotate(uid=Count('u_id')).filter(uid__gt=1) # SELECT u_id, COUNT(ui_id) AS `uid` FROM UserInfo GROUP BY u_id having count(u_id) > 1 v = models.UserInfo.objects.values('u_id').annotate(uid=Count('u_id',distinct=True)).filter(uid__gt=1) # SELECT u_id, COUNT( DISTINCT ui_id) AS `uid` FROM UserInfo GROUP BY u_id having count(u_id) > 1 def distinct(self, *field_names) # \u7528\u4e8edistinct\u53bb\u91cd models.UserInfo.objects.values('nid').distinct() # select distinct nid from userinfo \u6ce8\uff1a\u53ea\u6709\u5728PostgreSQL\u4e2d\u624d\u80fd\u4f7f\u7528distinct\u8fdb\u884c\u53bb\u91cd def order_by(self, *field_names) # \u7528\u4e8e\u6392\u5e8f models.UserInfo.objects.all().order_by('-id','age') def extra(self, select=None, where=None, params=None, tables=None, order_by=None, select_params=None) # \u6784\u9020\u989d\u5916\u7684\u67e5\u8be2\u6761\u4ef6\u6216\u8005\u6620\u5c04\uff0c\u5982\uff1a\u5b50\u67e5\u8be2 Entry.objects.extra(select={'new_id': \"select col from sometable where othercol > %s\"}, select_params=(1,)) Entry.objects.extra(where=['headline=%s'], params=['Lennon']) Entry.objects.extra(where=[\"foo='a' OR bar = 'a'\", \"baz = 'a'\"]) Entry.objects.extra(select={'new_id': \"select id from tb where id > %s\"}, select_params=(1,), order_by=['-nid']) def reverse(self): # \u5012\u5e8f models.UserInfo.objects.all().order_by('-nid').reverse() # \u6ce8\uff1a\u5982\u679c\u5b58\u5728order_by\uff0creverse\u5219\u662f\u5012\u5e8f\uff0c\u5982\u679c\u591a\u4e2a\u6392\u5e8f\u5219\u4e00\u4e00\u5012\u5e8f def defer(self, *fields): models.UserInfo.objects.defer('username','id') \u6216 models.UserInfo.objects.filter(...).defer('username','id') #\u6620\u5c04\u4e2d\u6392\u9664\u67d0\u5217\u6570\u636e def only(self, *fields): #\u4ec5\u53d6\u67d0\u4e2a\u8868\u4e2d\u7684\u6570\u636e models.UserInfo.objects.only('username','id') \u6216 models.UserInfo.objects.filter(...).only('username','id') def using(self, alias): \u6307\u5b9a\u4f7f\u7528\u7684\u6570\u636e\u5e93\uff0c\u53c2\u6570\u4e3a\u522b\u540d\uff08setting\u4e2d\u7684\u8bbe\u7f6e\uff09 ################################################## # PUBLIC METHODS THAT RETURN A QUERYSET SUBCLASS # ################################################## def raw(self, raw_query, params=None, translations=None, using=None): # \u6267\u884c\u539f\u751fSQL models.UserInfo.objects.raw('select * from userinfo') # \u5982\u679cSQL\u662f\u5176\u4ed6\u8868\u65f6\uff0c\u5fc5\u987b\u5c06\u540d\u5b57\u8bbe\u7f6e\u4e3a\u5f53\u524dUserInfo\u5bf9\u8c61\u7684\u4e3b\u952e\u5217\u540d models.UserInfo.objects.raw('select id as nid from \u5176\u4ed6\u8868') # \u4e3a\u539f\u751fSQL\u8bbe\u7f6e\u53c2\u6570 models.UserInfo.objects.raw('select id as nid from userinfo where nid>%s', params=[12,]) # \u5c06\u83b7\u53d6\u7684\u5230\u5217\u540d\u8f6c\u6362\u4e3a\u6307\u5b9a\u5217\u540d name_map = {'first': 'first_name', 'last': 'last_name', 'bd': 'birth_date', 'pk': 'id'} Person.objects.raw('SELECT * FROM some_other_table', translations=name_map) # \u6307\u5b9a\u6570\u636e\u5e93 models.UserInfo.objects.raw('select * from userinfo', using=\"default\") ################### \u539f\u751fSQL ################### from django.db import connection, connections cursor = connection.cursor() # cursor = connections['default'].cursor() cursor.execute(\"\"\"SELECT * from auth_user where id = %s\"\"\", [1]) row = cursor.fetchone() # fetchall()/fetchmany(..) def values(self, *fields): # \u83b7\u53d6\u6bcf\u884c\u6570\u636e\u4e3a\u5b57\u5178\u683c\u5f0f def values_list(self, *fields, **kwargs): # \u83b7\u53d6\u6bcf\u884c\u6570\u636e\u4e3a\u5143\u7956 def dates(self, field_name, kind, order='ASC'): # \u6839\u636e\u65f6\u95f4\u8fdb\u884c\u67d0\u4e00\u90e8\u5206\u8fdb\u884c\u53bb\u91cd\u67e5\u627e\u5e76\u622a\u53d6\u6307\u5b9a\u5185\u5bb9 # kind\u53ea\u80fd\u662f\uff1a\"year\"\uff08\u5e74\uff09, \"month\"\uff08\u5e74-\u6708\uff09, \"day\"\uff08\u5e74-\u6708-\u65e5\uff09 # order\u53ea\u80fd\u662f\uff1a\"ASC\" \"DESC\" # \u5e76\u83b7\u53d6\u8f6c\u6362\u540e\u7684\u65f6\u95f4 - year : \u5e74-01-01 - month: \u5e74-\u6708-01 - day : \u5e74-\u6708-\u65e5 models.DatePlus.objects.dates('ctime','day','DESC') def datetimes(self, field_name, kind, order='ASC', tzinfo=None): # \u6839\u636e\u65f6\u95f4\u8fdb\u884c\u67d0\u4e00\u90e8\u5206\u8fdb\u884c\u53bb\u91cd\u67e5\u627e\u5e76\u622a\u53d6\u6307\u5b9a\u5185\u5bb9\uff0c\u5c06\u65f6\u95f4\u8f6c\u6362\u4e3a\u6307\u5b9a\u65f6\u533a\u65f6\u95f4 # kind\u53ea\u80fd\u662f \"year\", \"month\", \"day\", \"hour\", \"minute\", \"second\" # order\u53ea\u80fd\u662f\uff1a\"ASC\" \"DESC\" # tzinfo\u65f6\u533a\u5bf9\u8c61 models.DDD.objects.datetimes('ctime','hour',tzinfo=pytz.UTC) models.DDD.objects.datetimes('ctime','hour',tzinfo=pytz.timezone('Asia/Shanghai')) \"\"\" pip3 install pytz import pytz pytz.all_timezones pytz.timezone(\u2018Asia/Shanghai\u2019) \"\"\" def none(self): # \u7a7aQuerySet\u5bf9\u8c61 #################################### # METHODS THAT DO DATABASE QUERIES # #################################### def aggregate(self, *args, **kwargs): # \u805a\u5408\u51fd\u6570\uff0c\u83b7\u53d6\u5b57\u5178\u7c7b\u578b\u805a\u5408\u7ed3\u679c from django.db.models import Count, Avg, Max, Min, Sum result = models.UserInfo.objects.aggregate(k=Count('u_id', distinct=True), n=Count('nid')) ===> {'k': 3, 'n': 4} def count(self): # \u83b7\u53d6\u4e2a\u6570 def get(self, *args, **kwargs): # \u83b7\u53d6\u5355\u4e2a\u5bf9\u8c61 def create(self, **kwargs): # \u521b\u5efa\u5bf9\u8c61 def bulk_create(self, objs, batch_size=None): # \u6279\u91cf\u63d2\u5165 # batch_size\u8868\u793a\u4e00\u6b21\u63d2\u5165\u7684\u4e2a\u6570 objs = [ models.DDD(name='r11'), models.DDD(name='r22') ] models.DDD.objects.bulk_create(objs, 10) def get_or_create(self, defaults=None, **kwargs): # \u5982\u679c\u5b58\u5728\uff0c\u5219\u83b7\u53d6\uff0c\u5426\u5219\uff0c\u521b\u5efa # defaults \u6307\u5b9a\u521b\u5efa\u65f6\uff0c\u5176\u4ed6\u5b57\u6bb5\u7684\u503c obj, created = models.UserInfo.objects.get_or_create(username='root1', defaults={'email': '1111111','u_id': 2, 't_id': 2}) def update_or_create(self, defaults=None, **kwargs): # \u5982\u679c\u5b58\u5728\uff0c\u5219\u66f4\u65b0\uff0c\u5426\u5219\uff0c\u521b\u5efa # defaults \u6307\u5b9a\u521b\u5efa\u65f6\u6216\u66f4\u65b0\u65f6\u7684\u5176\u4ed6\u5b57\u6bb5 obj, created = models.UserInfo.objects.update_or_create(username='root1', defaults={'email': '1111111','u_id': 2, 't_id': 1}) def first(self): # \u83b7\u53d6\u7b2c\u4e00\u4e2a def last(self): # \u83b7\u53d6\u6700\u540e\u4e00\u4e2a def in_bulk(self, id_list=None): # \u6839\u636e\u4e3b\u952eID\u8fdb\u884c\u67e5\u627e id_list = [11,21,31] models.DDD.objects.in_bulk(id_list) def delete(self): # \u5220\u9664 def update(self, **kwargs): # \u66f4\u65b0 def exists(self): # \u662f\u5426\u6709\u7ed3\u679c","title":"QuerySet\u65b9\u6cd5\u5927\u5168"},{"location":"Django\u6838\u5fc3/\u6a21\u578b\u5c42/#distinctvaluesvalues_list","text":"\u5173\u4e8edistinct\u7684\u8bf4\u660e\uff1a 1\u3001\u5fc5\u987b\u5148\u7528values/values_list\u7b5b\u9009\u51fa\u6570\u636e\u540e\u518d\u8fdb\u884c\u53bb\u91cd\uff1b 2\u3001\u5982\u679c\u4e0d\u5148\u7b5b\u9009\uff0c\u5c06\u5168\u90e8\u6570\u636e\u8fdb\u884cdistinct()\u7684\u64cd\u4f5c\uff0c\u7531\u4e8eid\u80af\u5b9a\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u8fd9\u6837\u505a\u6ca1\u6709\u610f\u4e49\uff01 values\u7684\u7528\u6cd5\u548c\u8fd4\u56de\u7ed3\u679c\u4e3e\u4f8b all_books = models.Book.objects.all().values('id','title') print(all_books) # <QuerySet [{'title': 'linux', 'id': 6}, {'title': '\u4f60\u597d', 'id': 7}, {'title': 'linux', 'id': 8}, {'title': 'xxx', 'id': 9}, {'title': 'gogogo', 'id': 10}]> ''' values\u505a\u7684\u4e8b\u60c5\uff1a ret = [] #queryset\u7c7b\u578b for obj in Book.objects.all(): temp = { #\u5143\u7d20\u662f\u5b57\u5178\u7c7b\u578b 'id':obj.id, 'title':obj.title } ret.append(temp) ''' values_list\u7684\u7528\u6cd5\u548c\u8fd4\u56de\u7ed3\u679c\u8bf4\u660e all_books = models.Book.objects.all().values_list('id','title') print(all_books) #<QuerySet [(6, 'linux'), (7, '\u4f60\u597d'), (8, 'linux'), (9, 'xxx'), (10, 'gogogo')]> ''' values\u505a\u7684\u4e8b\u60c5\uff1a ret = [] #queryset\u7c7b\u578b for obj in Book.objects.all(): temp = ( #\u5143\u7d20\u662f\u5143\u7956\u7c7b\u578b obj.id,obj.title ) ret.append(temp) ''' distinct\u7684\u7528\u6cd5\u548c\u8fd4\u56de\u7ed3\u679c\u8bf4\u660e ''' all_books = models.Book.objects.all().distinct() #\u8fd9\u6837\u5199\u662f\u8868\u793a\u8bb0\u5f55\u4e2d\u6240\u6709\u7684\u5b57\u6bb5\u91cd\u590d\u624d\u53eb\u91cd\u590d\uff0c \u4f46\u662f\u6211\u4eec\u77e5\u9053\u6709\u4e3b\u952e\u7684\u5b58\u5728\uff0c\u6240\u4ee5\u4e0d\u53ef\u80fd\u6240\u6709\u5b57\u6bb5\u6570\u636e\u90fd\u91cd\u590d all_books = models.Book.objects.all().distinct('price') #\u62a5\u9519\uff0c\u4e0d\u80fd\u5728distinct\u91cc\u9762\u52a0\u5b57\u6bb5\u540d\u79f0 all_books = models.Book.objects.all().values('price').distinct()#<QuerySet [(Decimal('11.00'),), (Decimal('111.00'),), (Decimal('120.00'),), (Decimal('11111.00'),)]> ''' all_books = models.Book.objects.all().values_list('price').distinct() # <QuerySet [{'price': Decimal('11.00')}, {'price': Decimal('111.00')}, {'price': Decimal('120.00')}, {'price': Decimal('11111.00')}]> # \u53ea\u80fd\u7528\u4e8evaluse\u548cvalues_list\u8fdb\u884c\u53bb\u91cd # title\u548cprice\u4e24\u4e2a\u540c\u65f6\u91cd\u590d\u624d\u7b97\u4e00\u6761\u91cd\u590d\u7684\u8bb0\u5f55 all_books = models.Book.objects.all().values_list('title','price').distinct()","title":"distinct\u7684\u8bf4\u660e\u4e0evalues/values_list\u7684\u673a\u5236"},{"location":"Django\u6838\u5fc3/\u6a21\u578b\u5c42/#mysql","text":"# \u627e2012\u5e74\u7684\u6240\u6709\u4e66\u7c4d all_books = models.Book.objects.filter(pub_date__year=2012) # \u627e\u5927\u4e8e\u7b49\u4e8e2012\u5e74\u7684\u6240\u6709\u4e66\u7c4d all_books = models.Book.objects.filter(pub_date__year__gte=2012) # \u627e2019\u5e74\u6708\u4efd\u7684\u6240\u6709\u4e66\u7c4d\uff0c\u5982\u679c\u660e\u660e\u6709\u7ed3\u679c\uff0c\u4f60\u5374\u67e5\u4e0d\u51fa\u7ed3\u679c\uff0c\u662f\u56e0\u4e3amysql\u6570\u636e\u5e93\u7684\u65f6\u533a\u548c\u54b1\u4eecdjango\u7684\u65f6\u533a\u4e0d\u540c\u5bfc\u81f4\u7684\uff0c # \u4f60\u9700\u8981\u505a\u7684\u5c31\u662f\u5c06django\u4e2d\u7684settings\u914d\u7f6e\u6587\u4ef6\u91cc\u9762\u7684USE_TZ = True\u6539\u4e3aFalse\uff0c\u5c31\u53ef\u4ee5\u67e5\u5230\u7ed3\u679c\u4e86\uff0c # \u4ee5\u540e\u8fd9\u4e2a\u503c\u5c31\u6539\u4e3aFalse\uff0c\u800c\u4e14\u5c31\u662f\u56e0\u4e3a\u6211\u4eec\u7528\u7684mysql\u6570\u636e\u5e93\u624d\u4f1a\u6709\u8fd9\u4e2a\u95ee\u9898\uff0c\u5176\u4ed6\u6570\u636e\u5e93\u6ca1\u6709\u8fd9\u4e2a\u95ee\u9898\u3002 all_books = models.Book.objects.filter(pub_date__year=2019,pub_date__month=2)","title":"\u5728MySQL\u6570\u636e\u5e93\u4e2d\u67e5\u8be2\u65e5\u671f\u7684\u95ee\u9898"},{"location":"Django\u6838\u5fc3/\u6a21\u578b\u5c42/#_2","text":"\u7528\u7684\u6bd4\u8f83\u5c11\uff0c\u8bb0\u5f55\u4e00\u4e0b\u5427: class UnsignedIntegerField(models.IntegerField): def db_type(self, connection): return 'integer UNSIGNED' \u81ea\u5b9a\u4e49char\u7c7b\u578b\u5b57\u6bb5\uff1a class FixedCharField(models.Field): \"\"\" \u81ea\u5b9a\u4e49\u7684char\u7c7b\u578b\u7684\u5b57\u6bb5\u7c7b \"\"\" def __init__(self, max_length, *args, **kwargs): super().__init__(max_length=max_length, *args, **kwargs) self.length = max_length def db_type(self, connection): \"\"\" \u9650\u5b9a\u751f\u6210\u6570\u636e\u5e93\u8868\u7684\u5b57\u6bb5\u7c7b\u578b\u4e3achar\uff0c\u957f\u5ea6\u4e3alength\u6307\u5b9a\u7684\u503c \"\"\" return 'char(%s)' % self.length class Class(models.Model): id = models.AutoField(primary_key=True) title = models.CharField(max_length=25) # \u4f7f\u7528\u4e0a\u9762\u81ea\u5b9a\u4e49\u7684char\u7c7b\u578b\u7684\u5b57\u6bb5 cname = FixedCharField(max_length=25)","title":"\u81ea\u5b9a\u4e49\u5b57\u6bb5"},{"location":"Django\u6838\u5fc3/\u6a21\u578b\u5c42/#_3","text":"\u9879\u76ee\u7684\u521b\u5efa\u3001app\u7684\u521b\u5efa\u53ca\u6ce8\u518c\u3001MySQL\u7684\u8fde\u63a5\u914d\u7f6e\u8fd9\u91cc\u5c31\u4e0d\u8d58\u8ff0\u4e86\uff0c\u6709\u4e0d\u660e\u767d\u7684\u8bf7\u5230 Django\u6846\u67b6\u5165\u95e8 \u67e5\u770b\u3002 \u6211\u4eec\u5148\u521b\u5efa\u4e00\u4e2a\u5355\u8868\u7684model\uff0c\u5b58\u653e\u4e66\u7c4d\u7684\u4fe1\u606f\uff1a from django.db import models # Create your models here. #\u6ce8\u610f\u8fd9\u4e2aBook\u7c7b\u5fc5\u987b\u7ee7\u627fmodels.Model class Book(models.Model): #AutoField\u4e3a\u81ea\u589e\u5bf9\u8c61\uff0c\u62ec\u53f7\u91cc\u9762\u7684\u662f\u9650\u5b9a\u6761\u4ef6 id = models.AutoField(primary_key=True) #CharField\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u62ec\u53f7\u91cc\u9762\u8868\u793a\u5b83\u7684\u6700\u5927\u957f\u5ea6 title = models.CharField(max_length=32) state = models.BooleanField() #DateField\u662f\u5b58\u65e5\u671f\u7684 pub_date =models.DateField() #DecimalField\u662f\u4e00\u4e2a\u6d6e\u70b9\u578b\uff1amax_digits\u4e3a\u6700\u5927\u7684\u4f4d\u6570\uff0c\u4f46\u662f\u6709\u4e24\u4f4d\u662f\u5c0f\u6570\u2014\u2014111111.11 price = models.DecimalField(max_digits=8,decimal_places=2) publish = models.CharField(max_length=32) #\u6253\u5370\u8fd9\u4e2a\u7c7b\u5c55\u793a\u7684\u662f\u5b83\u7684title def __str__(self): return self.title \u5982\u679c\u60f3\u6253\u5370orm\u8f6c\u6362\u8fc7\u7a0b\u4e2d\u7684sql\uff0c\u9700\u8981\u5728 settings \u4e2d\u8fdb\u884c\u5982\u4e0b\u914d\u7f6e\uff1a LOGGING = { 'version': 1, 'disable_existing_loggers': False, 'handlers': { 'console':{ 'level':'DEBUG', 'class':'logging.StreamHandler', }, }, 'loggers': { 'django.db.backends': { 'handlers': ['console'], 'propagate': True, 'level':'DEBUG', }, } } \u8fd8\u6709\u53e6\u5916\u4e00\u79cd\u67e5\u770bSQL\u8bed\u53e5\u7684\u65b9\u5f0f\uff1a # \u5728\u89c6\u56fe\u51fd\u6570\u4e2d\u64cd\u4f5c from book import models def add_book(request): ''' \u6dfb\u52a0\u8868\u8bb0\u5f55 :param request: http\u8bf7\u6c42\u4fe1\u606f :return: ''' book_obj = models.Book(title='python',price=123,pub_date='2012-12-12',publish='\u4eba\u6c11\u51fa\u7248\u793e') book_obj.save() # \u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u4e5f\u80fd\u67e5\u770b\u6267\u884c\u7684sql\u8bed\u53e5 from django.db import connection print(connection.queries) return HttpResponse('ok')","title":"\u5355\u8868\u64cd\u4f5c\u51c6\u5907"},{"location":"Django\u6838\u5fc3/\u6a21\u578b\u5c42/#_4","text":"\u65b9\u5f0f\u4e00(\u63a8\u8350): #\u6ce8\u610f\u65e5\u671f\u6309\u7167\u8fd9\u4e2a\u683c\u5f0f\u6765\uff01 book_obj=models.Book.objects.create(title='Python\u8475\u82b1\u5b9d\u5178',state=True,price=100,publish='\u82f9\u679c\u51fa\u7248\u793e',pub_date='2015-12-13') #\u6253\u5370title... print(book_obj.title) \u6ce8\u610fcreate\u662f\u6709\u8fd4\u56de\u503c\u7684\uff0ccreate\u65b9\u6cd5\u7684\u8fd4\u56de\u503cbook_obj\u5c31\u662f\u63d2\u5165book\u8868\u4e2d\u7684python\u8475\u82b1\u5b9d\u5178\u8fd9\u672c\u4e66\u7c4d\u7eaa\u5f55\u5bf9\u8c61 \u65b9\u5f0f\u4e8c : book_obj=Book(title=\"python\u8475\u82b1\u5b9d\u5178\",state=True,price=100,publish=\"\u82f9\u679c\u51fa\u7248\u793e\",pub_date=\"2012-12-12\") book_obj.save() \u65b9\u5f0f\u4e09:\u6279\u91cf\u63d2\u5165 book_list = [] for i in range(10): bk_obj = models.Book( name='chao%s'%i, addr='\u5317\u4eac%s'%i ) book_list.append(bk_obj) models.Book.objects.bulk_create(book_list) #\u6279\u91cf\u63d2\u5165\uff0c\u901f\u5ea6\u5feb \u65b9\u5f0f\u56db:update_or_create--\u6709\u5c31\u66f4\u65b0\uff0c\u6ca1\u6709\u5c31\u521b\u5efa obj,created = models.UserToken.objects.update_or_create( user=user, # \u67e5\u627e\u7b5b\u9009\u6761\u4ef6 defaults={ # \u6dfb\u52a0\u6216\u8005\u66f4\u65b0\u7684\u6570\u636e \u3000\u3000\u3000\u3000\u3000\u3000\"token\":random_str, \u3000\u3000\u3000\u3000} ) ''' \u8bf4\u660e\uff1a 1\u3001\u7b2c\u4e00\u4e2a\u503cobj\u4e3a\uff1a\u65b0\u521b\u5efa\u7684model\u5bf9\u8c61 2\u3001\u7b2c\u4e8c\u4e2a\u503ccreated\u4e3a\uff1a\u662f\u5426\u8fdb\u884c\u4e86\u65b0\u7684\u6570\u636e\u7684\u63d2\u5165\u7684\u64cd\u4f5c\uff0c\u53ea\u662f\u66f4\u65b0\u539f\u59cb\u6570\u636e\u4e3afalse\uff0c\u65b0\u52a0\u5165\u6570\u636e\u4e3atrue\uff01 3\u3001\u5982\u679c\u67e5\u8be2\u5230\u591a\u6761\u6570\u636e\uff0c\u90a3\u4e48\u5c31\u4f1a\u62a5\u9519\uff01\u56e0\u4e3a\u6e90\u7801\u91cc\u9762\u7528\u7684\u662fget\u65b9\u6cd5\uff01\u53ef\u4ee5\u7528\u5f02\u5e38\u5904\u7406\uff01 '''","title":"\u5355\u8868\u64cd\u4f5c\u4e4b\u6dfb\u52a0\u8868\u8bb0\u5f55"},{"location":"Django\u6838\u5fc3/\u6a21\u578b\u5c42/#api","text":"\u524d4\u4e2a\u6700\u91cd\u8981\uff0c5--9\u6bd4\u8f83\u5bb9\u6613\uff0c10\u4e2d\u7684\u4e09\u4e2a\u65b9\u6cd5\u6bd4\u8f83\u96be\u4e5f\u975e\u5e38\u91cd\u8981\uff01 \u4e00\u5b9a\u8981\u77e5\u9053\u6bcf\u4e2a\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u662f\u4ec0\u4e48\uff0c\u4ee5\u53ca\u6bcf\u4e2a\u65b9\u6cd5\u662f\u7531\u8c01\u6765\u8c03\u7528\u7684 (1)all() models.Book.objects\u6765\u8c03\u7528\uff0c\u8fd4\u56de\u7684\u662fQuerySet\u7c7b\u578b\u7684\u5bf9\u8c61\u2014\u2014django\u81ea\u5df1\u5b9a\u4e49\u7684\u6570\u636e\u7c7b\u578b \u5c06\u67e5\u8be2\u51fa\u6765\u7684\u67e5\u8be2\u51fa\u6765\u7684\u6240\u6709\u5bf9\u8c61\u653e\u5728\u5217\u8868\u4e2d \u5728models\u7684Book\u7c7b\u4e2d\u5199\u4e86__str__\u65b9\u6cd5\uff0c\u4e14__str__\u8fd4\u56de\u7684\u662ftitle\u7684\u503c\uff0c\u6240\u4ee5\u540e\u9762\u4f1a\u6253\u5370title book_list = models.Book.objects.all() print(book_list) #\u904d\u5386\u8fd9\u4e2a\u5b57\u5178\u53ef\u4ee5\u8fdb\u884c\u76f8\u5e94\u7684\u53d6\u503c\u64cd\u4f5c for i in book_list: print(i.title,i.price) #\u4e5f\u53ef\u4ee5\u8fdb\u884c\u7d22\u5f15\u64cd\u4f5c print(book_list[0].pub_date) (2)first\u4e0elast \u8fd4\u56de\u503c\u4e0d\u662fQuerySet\u5bf9\u8c61\uff0c\u800c\u662fmodel\u5bf9\u8c61\uff0c\u7b49\u4ef7\u4e8ebook_list[0] \u8c03\u7528\u8005\u662fQuerySet\u5bf9\u8c61 book_first = models.Book.objects.first() print(book_first) (3)filter\u65b9\u6cd5 \u5bf9\u5e94where\u8bed\u53e5 \u8c03\u7528\u8005objects\uff0c\u8fd4\u56de\u503c\u662fQuerySet\u5bf9\u8c61 book_list2 = models.Book.objects.filter(price=100) print(book_list2) (3-1)\u53ef\u4ee5\u8ddffirst\u6216\u8005last\u65b9\u6cd5 book_list2_last = models.Book.objects.filter(price=100).last() print(book_list2_last.pubdate) (3-2)\u53ef\u4ee5\u5e26\u591a\u4e2a\u591a\u8651\u6761\u4ef6 book_list2_more = models.Book.objects.filter(price=100,title='\u897f\u6e38\u8bb0') print(book_list2_more) (4)get\u65b9\u6cd5 \u5f88\u50cffilter\uff0c\u4f46\u662f\uff0cget\u65b9\u6cd5\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u67e5\u8be2\u7ed3\u679c\u662f\u624d\u6709\u610f\u4e49\uff1b\u5982\u679c\u6709\u591a\u4e2a\u67e5\u8be2\u7ed3\u679c\u4f1a\u62a5\u9519! \u8fd4\u56de\u503c\u662f\u4e00\u4e2amodel\u5bf9\u8c61\uff0c\u5229\u7528objects\u8c03\u7528! book_get = models.Book.objects.get(title='\u897f\u6e38\u8bb0') print(book_get) (5)exclude\u65b9\u6cd5 \u6392\u9664\u2014\u2014\u5f97\u5230\u7684\u662f\u4e2aQuerySet\u5bf9\u8c61\uff0c\u7531objects\u8c03\u7528,\u4e5f\u53ef\u4ee5\u7528QuerySet\u5bf9\u8c61\u8c03\u7528 models\u8c03\u7528\uff1a book_exclude = models.Book.objects.exclude(title='\u897f\u6e38\u8bb0') print(book_exclude) QuerySet\u8c03\u7528\uff1a ret = models.Book.objects.filter(price=11).exclude(id=2) print(ret) (6)order_by\u6392\u5e8f \u5f97\u5230\u7684\u662fQuerySet\u5bf9\u8c61\uff0c\u7531objects\u8c03\u7528 (6-1)\u9ed8\u8ba4\u5347\u5e8f book_order_by_asc = models.Book.objects.order_by('title') print('\u5347\u5e8f\uff1a',book_order_by_asc) (6-2)\u964d\u5e8f\u6392\u5e8f book_order_by_desc = models.Book.objects.order_by('-title') print('\u964d\u5e8f\uff1a',book_order_by_desc) (6-3)\u4e5f\u53ef\u4ee5\u5229\u7528\u4e24\u4e2a\u5b57\u6bb5\u6392\u5e8f\uff1a\u2014\u2014\u7b2c\u4e00\u4e2a\u5b57\u6bb5\u76f8\u7b49\u7684\u65f6\u5019\u518d\u7528\u7b2c\u4e8c\u4e2a\u5b57\u6bb5\u6392\u5e8f book_order_by1 = models.Book.objects.order_by('title','price') print('\u4e24\u4e2a\u5b57\u6bb5\u6392\u5e8f\uff1a',book_order_by1) (7)reverse\u53cd\u8f6c \u53ef\u4ee5\u5728order_by\u7684\u57fa\u7840\u4e0a\u52a0\u4e0areverse book_reverse = models.Book.objects.order_by('title').reverse() print('\u6392\u5e8f\u53cd\u8f6c\uff1a',book_reverse) (8)count\u8ba1\u6570 \u8fd4\u56deint\u7c7b\u578b\u7684\u6570\u636e\uff0c\u8c03\u7528\u8005\u662fQuerySet count = models.Book.objects.all().count() print('\u6570\u636e\u7684\u603b\u6570\uff1a',(count,type(count))) (9)exists\u68c0\u6d4b\u662f\u5426\u5b58\u5728\u8bb0\u5f55 \u5982\u679c\u4e0d\u52a0exists\u5219\u8868\u793a\u53d6\u51fa\u6765\u6240\u6709\u7684\u503c\u4e86\uff0c\u6ca1\u5fc5\u8981\u53d6\u6240\u6709\u7684\u503c\uff0c\u8fd9\u6837\u6548\u7387\u4e0d\u9ad8\uff1b \u52a0\u4e0aexists\u76f8\u5f53\u4e8e\u5229\u7528limit\u9650\u5236\u53ea\u53d6\u51fa\u6765\u4e00\u6761\u6570\u636e\u53bb\u5224\u65ad\u6709\u6ca1\u6709\u8bb0\u5f55\u3002 ret = models.Book.objects.all().exists() if ret: print('OK!\u6709\u6570\u636e\uff01') \u91cd\u70b9\uff1a(10)values( field)\u3001values_list( field)\u3001distinct() (10-1)values(*field) \u67e5\u8be2\u6240\u6709\u4e66\u7c4d\u7684\u540d\u79f0\uff1a \u5f97\u5230\u7684\u662f\u4e00\u4e2aQuerySet\u5bf9\u8c61\uff1a <QuerySet [{'title': 'Python\u8475\u82b1\u5b9d\u5178'}, {'title': 'Python\u8475\u82b1\u5b9d\u51781'}, {'title': '\u91d1\u74f6\u74f6'}]> \u7531QuerySet\u5bf9\u8c61\u8c03\u7528\u4f46\u662f\u5217\u8868\u4e2d\u653e\u7684\u4e0d\u662f\u4e00\u4e2a\u4e2a\u7684\u5bf9\u8c61\u4e86\uff0c\u800c\u662f\u4e00\u4e2a\u4e2a\u7684\u5b57\u5178\uff01 book_titles = models.Book.objects.all().values('title') print('\u6240\u6709\u4e66\u7c4d\u7684\u540d\u79f0\uff1a',book_titles) \"\"\" values\u7684\u5de5\u4f5c\u539f\u7406\uff1a \u73b0\u5728\u5c06values\u4e2d\u7684\u53c2\u6570\u6539\u4e3a\u4e3a'title','price'\uff08\u6ce8\u610fvalue\u4e0evalue_list\u4e2d\u53ef\u4ee5\u653e\u4e24\u4e2a\u53c2\u6570\uff09 temp = [] for obj in models.Book.objects.all() temp.append( 'title':obj.title, 'price':obj.price ) return temp \"\"\" (10-1-1)\u4e5f\u53ef\u4ee5\u5229\u7528\u64cd\u4f5c\u5b57\u5178\u7684\u65b9\u6cd5\u6765\u64cd\u4f5c\u7ed3\u679c\uff1a book_title_1_title = book_titles[1].get('title') print('\u7b2c\u4e8c\u4e2a\u4e66\u7c4d\u7684\u540d\u5b57:',book_title_1_title) (10-2)values_list(*field)\u65b9\u6cd5 \u4e0evalue\u65b9\u6cd5\u4e00\u6837\uff0c\u8c03\u7528\u8005\u4e0e\u8fd4\u56de\u503c\u5747\u662fQuerySet\u5bf9\u8c61 \u4f46\u662f\uff0cvalue_list\u7684\u7ed3\u679c\u662f\u5217\u8868\u91cc\u9762\u5d4c\u5957\u5143\u7ec4 book_values_list = models.Book.objects.all().values_list('title') print(book_values_list) (10-3)distinct\u65b9\u6cd5\u53bb\u91cd price_distinct = models.Book.objects.all().values('price').distinct() print('price\u53bb\u91cd\uff1a',price_distinct)","title":"\u5355\u8868\u7684\u67e5\u8be2\u4e4b\u67e5\u8be2\u7684API"},{"location":"Django\u6838\u5fc3/\u6a21\u578b\u5c42/#_5","text":"\u6ce8\u610f\u8981\u7528filter\u8fc7\u6ee4 (1)\u67e5\u8be2\u4ef7\u683c\u5927\u4e8e100\u7684\uff1agt gt_100 = models.Book.objects.filter(price__gt=100) print('\u4ef7\u683c\u5927\u4e8e100\u7684\uff1a',gt_100) \u6ce8\u610f\u5927\u4e8e\u7b49\u4e8e\u7684\u8bdd\u662f gte \uff1a gte_100 = models.Book.objects.filter(price__gte=100) (2)\u5c0f\u4e8e\uff1alt lt_10000 = models.Book.objects.filter(price__lt=10000) print('\u4ef7\u683c\u5c0f\u4e8e10000\u7684\uff1a',lt_10000) (3)\u5927\u4e8e100\u5c0f\u4e8e10000\u7684\uff1a gt_100_lt_10000 = models.Book.objects.filter(price__gt=100,price__lt=10000) print('\u4ef7\u683c\u5927\u4e8e100\u5c0f\u4e8e10000\u7684:',gt_100_lt_10000) (4)\u4ef7\u683c\u5305\u542b[100,200,300]\u8fd9\u51e0\u4e2a\u7684\uff1a price_in = models.Book.objects.filter(price__in=[100,200,300]) print('\u4ef7\u683c\u5305\u542b\uff1a',price_in) (5)title\u4ee5\u201c\u897f\u201d\u5b57\u5f00\u5934\u7684\u6570\u636e\uff1a title_starts_xi = models.Book.objects.filter(title__startswith='\u897f') print('title\u4ee5\u897f\u5b57\u5f00\u5934\uff1a',title_starts_xi) (6)\u5305\u542b\u2014\u2014contains title_contains = models.Book.objects.filter(title__contains='p') print('title\u5305\u542bp\u7684\uff1a',title_contains) (6-1)\u5ffd\u7565\u5927\u5c0f\u5199\u7684\u5305\u542b\u2014\u2014icontains title_icontains = models.Book.objects.filter(title__icontains='p') print('title\u5305\u542bp\u6216\u8005P\u7684\uff1a',title_icontains) (7)\u5728\u4e00\u4e2a\u8303\u56f4\u4e4b\u5185\uff1arange price_range = models.Book.objects.filter(price__range=[100,10000]) print('\u4ef7\u683c\u5728\u4e00\u4e2a\u8303\u56f4\u4e4b\u5185\uff1a',price_range) (8)\u5173\u4e8e\u65e5\u671f\u7684\u6a21\u7cca\u67e5\u8be2 (8-1)\u8fc7\u6ee4\u4e00\u4e0b\u51fa\u7248\u65e5\u671f\u662f2014\u5e74\u7684\u6570\u636e # \u6ce8\u610f\u53ea\u6709date\u7c7b\u578b\u7684\u5b57\u6bb5\u624d\u6709__year # \u60f3\u67e5\u627e\u6708\u4efd\u5c31\u7528__month\u5c31\u53ef\u4ee5\u4e86 pub_date_2014 = models.Book.objects.filter(pub_date__year=2014) print('2014\u51fa\u7248\u7684\u6570\u636e\uff1a',pub_date_2014)","title":"\u5355\u8868\u7684\u67e5\u8be2\u4e4b\u5e26\u53cc\u4e0b\u5212\u7ebf\u7684\u6a21\u7cca\u67e5\u8be2"},{"location":"Django\u6838\u5fc3/\u6a21\u578b\u5c42/#_6","text":"(1)\u5220\u9664\uff1adelete (1-1)\u65b9\u6cd5\u4e00\uff1aQuerySet\u5bf9\u8c61\u8c03\u7528delete\u65b9\u6cd5 models.Book.objects.filter(price=100).delete() (1-2)\u65b9\u6cd5\u4e8c\uff1a\u7528model\u5bf9\u8c61 models.Book.objects.filter(price=100).first().delete() (2)\u4fee\u6539\uff1aupdate \u6ce8\u610f\u5fc5\u987b\u8981\u7528 QuerySet\u5bf9\u8c61 \u8c03\u7528 models.Book.objects.filter(title='\u897f\u6e38\u8bb0').update(title='\u6c34\u6d52\u4f20')","title":"\u5355\u8868\u64cd\u4f5c\u4e4b\u5220\u9664\u4e0e\u4fee\u6539\u8bb0\u5f55"},{"location":"Django\u6838\u5fc3/\u6a21\u578b\u5c42/#_7","text":"\u65b0\u5efa\u4e00\u4e2a\u5458\u5de5\u8868emp\uff0c\u5305\u542b\uff1aid\u3001name\u3001age\u3001salary\u3001dep(\u90e8\u95e8\u540d)\u3001province(\u7701\u4efd)\u3002 \u73b0\u5728\u7684\u9700\u6c42\u662f\uff1a\u67e5\u8be2\u201c\u6bcf\u4e2a\u90e8\u95e8\u7684\u5458\u5de5\u4eba\u6570\u201d\u3002\u4f7f\u7528\u539f\u751fSQL\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a select count(id) from emp group by dep; \u6211\u4eec\u770b\u770b\u4f7f\u7528ORM\u7684\u8bdd\u5982\u4f55\u53bb\u505a\u7c7b\u4f3c\u7684\u67e5\u8be2\u3002 models.py\u6587\u4ef6\u4e2d\u7684\u7c7b\uff1a class Emp(models.Model): name = models.CharField(max_length=32) age = models.IntegerField() salary = models.DecimalField(max_digits=8,decimal_places=2) dep = models.CharField(max_length=32) province = models.CharField(max_length=32) \u5355\u8868\u5206\u7ec4\u67e5\u8be2\u7684ORM\u8bed\u6cd5\uff1a # \u6ce8\u610f\u524d\u9762\u662f values\uff0c\u540e\u9762\u662fannotate\u65b9\u6cd5 \u5355\u8868\u6a21\u578b.objects.values('group by\u7684\u5b57\u6bb5').annotate(\u805a\u5408\u51fd\u6570('\u7edf\u8ba1\u5b57\u6bb5')) \u4f8b1\uff1a\u67e5\u8be2\u6bcf\u4e00\u4e2a\u90e8\u95e8\u7684\u540d\u79f0\u4ee5\u53ca\u5458\u5de5\u7684\u5e73\u5747\u85aa\u6c34 SQL\u4e2d select dep,avg(salary) from emp group by dep annotate\u65b9\u6cd5 \u8fd9\u91ccvalues\u76f8\u5f53\u4e8eselect ### \u4e00\u5b9a\u8981\u8bb0\u5f97\u5f15\u5165\u805a\u5408\u7684\u65b9\u6cd5 from django.db.models import Avg,Max,Min,Count ret = Emp.objects.values('dep').annotate(avg_salary=Avg('salary')) print(ret) #<QuerySet[{'dep':'\u5b89\u5168\u90e8','avg_salary':388.5},{'dep':'\u5408\u683c\u90e8','avg_salary': 1111.0}]> \u4f8b2\uff1a\u67e5\u8be2\u6bcf\u4e00\u4e2a\u7701\u4efd\u7684\u540d\u79f0\u53ca\u5458\u5de5\u6570 ret = Emp.objects.values('province').annotate(c=Count('id')) print(ret) #<QuerySet [{'province': '\u5317\u4eac', 'c': 1}, {'province':'\u4e0a\u6d77','c':1},{'province': '\u5927\u8fde', 'c': 1}]> \u8bf4\u660e 1\u3001\u5355\u8868\u4e0b\u7684\u5206\u7ec4\u67e5\u8be2\u8bed\u6cd5(\u6ce8\u610f\u662fvalues\u4e0d\u662ffilter)\uff1a \u5355\u8868\u6a21\u578b.objects.values('group by\u7684\u5b57\u6bb5').annotate(\u805a\u5408\u51fd\u6570('\u7edf\u8ba1\u5b57\u6bb5')) 2\u3001\u5728\u5355\u8868\u5206\u7ec4\u4e0b\uff0c\u6309\u7740\u4e3b\u952e\u8fdb\u884cgroup by \u662f\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\u7684\uff01 3\u3001ret = Emp.objects.all() \u7b49\u4ef7\u4e8e select * from emp 4\u3001ret = Emp.objects.values('name') \u7b49\u4ef7\u4e8e select name from emp 5\u3001ret = Emp.objects.values('id').annotate(Avg('salary')) \u7b49\u4ef7\u4e8e\uff1a ret = Emp.objects.all().annotate(Avg('salary')) # \u4f46\u662f \u5728\u5355\u8868\u5206\u7ec4\u4e0b\uff0c\u6309\u7740\u4e3b\u952e\u8fdb\u884cgroup by \u662f\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\u7684\uff01 # \u800c\u4e14\uff0c\u6309all()\u5206\u7ec4\u4e5f\u6ca1\u610f\u4e49\uff0c\u56e0\u4e3a\u5b83\u5305\u542b\u4e3b\u952e\u3002","title":"\u5355\u8868\u64cd\u4f5c\u4e4b\u5355\u8868\u4e0b\u7684\u5206\u7ec4\u67e5\u8be2"},{"location":"Django\u6838\u5fc3/\u6a21\u677f\u5c42/","text":"\u6a21\u677f\u8bed\u6cd5\u4e2d\u4e3b\u8981\u5305\u62ec \u53d8\u91cf \u4e0e \u6807\u7b7e \u3002 \u53d8\u91cf Django\u4e2d {{ }} \u8fd9\u6837\u7684\u8bed\u53e5\u5c31\u662f\u53d8\u91cf\u3002 \u6bd4\u5982\u6211\u60f3\u53d6\u5217\u8868ls\u7684\u4e0b\u6807\u4e3a0\u7684\u5143\u7d20\uff1a {{ ls.0 }} \u8fc7\u6ee4\u5668 \u8fc7\u6ee4\u5668\u662f\u5728\u53d8\u91cf\u4e2d\u8fdb\u4e00\u6b65\u64cd\u4f5c\u53d8\u91cf\u7684\u8bed\u6cd5\u3002 \u57fa\u672c\u8bed\u6cd5 {{ obj|filter_name:param }} obj\u4e3a\u53d8\u91cf\u7684\u540d\u5b57\uff1bfilter_name\u4e3a\u67d0\u4e00\u4e2a\u8fc7\u6ee4\u5668\u7684\u540d\u5b57\uff1bparam\u662f\u76f8\u5e94\u8fc7\u6ee4\u5668\u7684\u53c2\u6570\u3002 \u5e38\u7528\u7684\u8fc7\u6ee4\u5668 date # \u5728views.py\u6587\u4ef6\u4e2d\u6211\u4eec\u5982\u679c\u4e0d\u5bf9\u65f6\u95f4\u8fdb\u884c\u5904\u7406\uff0c\u6bd4\u5982\u76f4\u63a5\u53d6n\u503c\uff1a # \u90a3\u53ef\u4ee5\u5728\u6a21\u677f\u91cc\u8fdb\u884c\u65f6\u95f4\u683c\u5f0f\u7684\u8f6c\u5316 # n=datetime.datetime.now() {{n|date:'Y-m-d'}} default # \u5982\u679c\u4e00\u4e2a\u53d8\u91cf\u662ffalse\u6216\u8005\u4e3a\u7a7a\uff0c\u4f7f\u7528\u7ed9\u5b9a\u7684\u9ed8\u8ba4\u503c\u3002\u5426\u5219\uff0c\u4f7f\u7528\u53d8\u91cf\u7684\u503c\u3002\u4f8b\u5982\uff1a {{value|default:'nothing'}} length # \u8fd4\u56de\u503c\u7684\u957f\u5ea6\u3002\u5b83\u5bf9\u5b57\u7b26\u4e32\u548c\u5217\u8868\u90fd\u8d77\u4f5c\u7528\u3002\u4f8b\u5982\uff1a {{value|length}} slice # \u5207\u7247 \u5047\u5982value\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u627e\u5230\u5b83\u4e0b\u6807\u4e3a2-5\u5207\u7247\u7ec4\u6210\u7684\u65b0\u5b57\u7b26\u4e32 {{value|slice:'2:5'}} truncatechars # \u5982\u679c\u5b57\u7b26\u4e32\u5b57\u7b26\u591a\u4e8e\u6307\u5b9a\u7684\u5b57\u7b26\u6570\u91cf\uff0c\u90a3\u4e48\u4f1a\u88ab\u622a\u65ad\u3002\u622a\u65ad\u7684\u5b57\u7b26\u4e32\u5c06\u4ee5\u53ef\u7ffb\u8bd1\u7684\u7701\u7565\u53f7\u5e8f\u5217\uff08\u201c...\u201d\uff09\u7ed3\u5c3e\u3002 # \u53c2\u6570\uff1a\u8981\u622a\u65ad\u7684\u5b57\u7b26\u6570 # \u6ce8\u610f\u7ed3\u5c3e\u7684'...'\u7b97\u4e09\u4e2a\u5b57\u7b26\uff0c\u5982\u679c\u53c2\u6570<=3\uff0c\u90a3\u6d4f\u89c8\u5668\u4e0a\u663e\u793a\u7684\u6c38\u8fdc\u662f'...' {{value|truncatechars:5}} safe # Django\u7684\u6a21\u677f\u4e2d\u4f1a\u5bf9HTML\u6807\u7b7e\u548cJS\u7b49\u8bed\u6cd5\u6807\u7b7e\u8fdb\u884c\u81ea\u52a8\u8f6c\u4e49\uff0c\u539f\u56e0\u663e\u800c\u6613\u89c1\uff0c\u8fd9\u6837\u662f\u4e3a\u4e86\u5b89\u5168\u3002\u4f46\u662f\u6709\u7684\u65f6\u5019\u6211\u4eec\u53ef\u80fd\u4e0d\u5e0c\u671b\u8fd9\u4e9bHTML\u5143\u7d20\u88ab\u8f6c\u4e49\uff0c\u6bd4\u5982\u6211\u4eec\u505a\u4e00\u4e2a\u5185\u5bb9\u7ba1\u7406\u7cfb\u7edf\uff0c\u540e\u53f0\u6dfb\u52a0\u7684\u6587\u7ae0\u4e2d\u662f\u7ecf\u8fc7\u4fee\u9970\u7684\uff0c\u8fd9\u4e9b\u4fee\u9970\u53ef\u80fd\u662f\u901a\u8fc7\u4e00\u4e2a\u7c7b\u4f3c\u4e8eFCKeditor\u7f16\u8f91\u52a0\u6ce8\u4e86HTML\u4fee\u9970\u7b26\u7684\u6587\u672c\uff0c\u5982\u679c\u81ea\u52a8\u8f6c\u4e49\u7684\u8bdd\u663e\u793a\u7684\u5c31\u662f\u4fdd\u62a4HTML\u6807\u7b7e\u7684\u6e90\u6587\u4ef6\u3002 # \u4e3a\u4e86\u5728Django\u4e2d\u5173\u95edHTML\u7684\u81ea\u52a8\u8f6c\u4e49\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c\u5982\u679c\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u53d8\u91cf\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fc7\u6ee4\u5668\u201c|safe\u201d\u7684\u65b9\u5f0f\u544a\u8bc9Django\u8fd9\u6bb5\u4ee3\u7801\u662f\u5b89\u5168\u7684\u4e0d\u5fc5\u8f6c\u4e49\u3002\u6bd4\u5982\uff1a # views.py\u6587\u4ef6\u4e2d\u7684\u5b57\u7b26\u4e32\u662f\u8fd9\u6837\u7684\uff1a value=\"<a href=\"\">\u70b9\u51fb</a>\" # \u90a3index.html\u4e2d\u544a\u8bc9\u6d4f\u89c8\u5668\u6b63\u5e38\u6e32\u67d3\u5c31\u884c\uff0c\u6700\u7ec8\u5f97\u5230\u7684\u662f\u4e00\u4e2aa\u6807\u7b7e\uff1a {{value|safe} \u6807\u7b7e Django\u4e2d {% %} \u8fd9\u6837\u7684\u8bed\u53e5\u5c31\u662f\u6807\u7b7e\u3002 \u6807\u7b7e\u6bd4\u53d8\u91cf\u66f4\u52a0\u590d\u6742\uff0c\u4e00\u4e9b\u5728\u8f93\u51fa\u4e2d\u521b\u5efa\u6587\u672c\uff0c\u4e00\u4e9b\u901a\u8fc7\u5faa\u73af\u6216\u903b\u8f91\u6765\u63a7\u5236\u6d41\u7a0b\uff0c\u4e00\u4e9b\u52a0\u8f7d\u5176\u540e\u7684\u53d8\u91cf\u5c06\u4f7f\u7528\u5230\u7684\u989d\u5916\u4fe1\u606f\u5230\u6a21\u7248\u4e2d\u3002 \u4e00\u4e9b\u6807\u7b7e\u9700\u8981\u5f00\u59cb\u548c\u7ed3\u675f\u6807\u7b7e {% tag %} ...\u6807\u7b7e\u5185\u5bb9 ... {% endtag %} for\u6807\u7b7e \u904d\u5386\u6bcf\u4e00\u4e2a\u5143\u7d20 \u53ef\u4ee5\u5229\u7528 {% for obj in list reversed %} \u53cd\u5411\u5b8c\u6210\u5faa\u73af\u3002 \u4f8b\u5982\uff1a\u904d\u5386\u4e00\u4e2a\u5b57\u5178 {% for key,value in dic.items %} <p>{{key}}:{{value}}</p> {% endfor %} \u5faa\u73af\u5e8f\u53f7\u53ef\u4ee5\u901a\u8fc7 {{forloop}} \u663e\u793a ##forloop.counter The current iteration of the loop (1-indexed) ##forloop.counter0 The current iteration of the loop (0-indexed) ##forloop.revcounter The number of iterations from the end of the loop (1-indexed) ##forloop.revcounter0 The number of iterations from the end of the loop (0-indexed) ##forloop.first True if this is the first time through the loop ##forloop.last True if this is the last time through the loop {% for key,value in dic.items %} <p>{{forloop.counter0}}:{{key}}:{{value}}</p> {% endfor %} for ... empty for \u6807\u7b7e\u5e26\u6709\u4e00\u4e2a\u53ef\u9009\u7684 {% empty %} \u4ece\u53e5\uff0c\u4ee5\u4fbf\u5728\u7ed9\u51fa\u7684\u7ec4\u662f\u7a7a\u7684\u6216\u8005\u6ca1\u6709\u88ab\u627e\u5230\u65f6\uff0c\u53ef\u4ee5\u6709\u6240\u64cd\u4f5c\u3002 {% for person in person_list %} <p>{{ person.name }}</p> {% empty %} <p>sorry,no person here</p> {% endfor %} if\u6807\u7b7e {% if %}\u4f1a\u5bf9\u4e00\u4e2a\u53d8\u91cf\u6c42\u503c\uff0c\u5982\u679c\u5b83\u7684\u503c\u662f\u201cTrue\u201d\uff08\u5b58\u5728\u3001\u4e0d\u4e3a\u7a7a\u3001\u4e14\u4e0d\u662fboolean\u7c7b\u578b\u7684false\u503c\uff09\uff0c\u5bf9\u5e94\u7684\u5185\u5bb9\u5757\u4f1a\u8f93\u51fa\u3002 {% if num > 100 or num < 0 %} <p>\u65e0\u6548</p> {% elif num > 80 and num < 100 %} <p>\u4f18\u79c0</p> {% else %} <p>\u51d1\u6d3b\u5427</p> {% endif %} with\u6807\u7b7e \u4f7f\u7528\u4e00\u4e2a\u7b80\u5355\u5730\u540d\u5b57\u7f13\u5b58\u4e00\u4e2a\u590d\u6742\u7684\u53d8\u91cf\uff0c\u5f53\u4f60\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u201c\u6602\u8d35\u7684\u201d\u65b9\u6cd5\uff08\u6bd4\u5982\u8bbf\u95ee\u6570\u636e\u5e93\uff09\u5f88\u591a\u6b21\u7684\u65f6\u5019\u662f\u975e\u5e38\u6709\u7528\u7684\u3002 {% with total=business.employees.count %} {{ total }} employee{{ total|pluralize }} {% endwith %} csrf_token \u8fd9\u4e2a\u6807\u7b7e\u7528\u4e8e\u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020\u4fdd\u62a4 \u4e0d\u6ce8\u91ca\u7684\u60c5\u51b5\u4e0b\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a\u5728login.html\u6587\u4ef6\u91cc\u52a0\u4e0acsrf_token\u5c31\u53ef\u4ee5\u4e86\uff1a <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <link rel=\"stylesheet\" href=\"/static/whw1.css\"> </head> <body> <form action=\"http://127.0.0.1:8000/login/\" method=\"post\"> {{# \u6ce8\u610f\u8981\u5728form\u8868\u5355\u91cc\u9762\u52a0 #}} {% csrf_token %} \u7528\u6237\u540d: <input type=\"text\" name=\"user\" > \u5bc6\u7801: <input type=\"password\" name=\"pwd\"> <input type=\"submit\"> </form> </body> </html> \u722c\u866b\u53d1\u9001post\u8bf7\u6c42\u7b80\u5355\u6a21\u62df\uff1a import requests res = requests.post('http://127.0.0.1:8000/login/',data={ 'username':'whw', 'password':'123' }) print(res.text) 'django.middleware.csrf.CsrfViewMiddleware', \u5168\u5c40\u4e2d\u95f4\u4ef6\u7684\u914d\u7f6e \u901a\u8fc7\u5b83\u8fd8\u6709\u4e00\u79cd\u65b9\u5f0f\uff1a\u88c5\u9970\u5668\u7684\u5f62\u5f0f from django.views.decorators.csrf import csrf_exempt,csrf_protect #\u653e\u884ccsrf\u8ba4\u8bc1,\u5373\u4fbf\u662f\u5168\u5c40\u914d\u7f6e\u4e86csrf\u8ba4\u8bc1 @csrf_exempt def login(request): if request.method == 'GET': return render(request,'login.html') else: username = request.POST.get('username') print(request.POST) #<QueryDict: {'csrfmiddlewaretoken': ['OhZYiA1NHjh6ywLldzLOzy4N2OXOmHZH4tIlZvTe5ll0p6OSNUhuEgu3aOalUZoo'], 'username': ['chao']}> print(username) return HttpResponse('ok') #\u8fd8\u6709\u4e00\u79cd\u5f3a\u5236\u4fdd\u62a4 @csrf_protect #\u5f3a\u5236csrf\u8ba4\u8bc1,\u5373\u4fbf\u662f\u5168\u5c40\u6ca1\u6709\u914d\u7f6ecsrf\u8ba4\u8bc1 def login(request): if request.method == 'GET': return render(request,'login.html') else: username = request.POST.get('username') print(request.POST) #<QueryDict: {'csrfmiddlewaretoken': ['OhZYiA1NHjh6ywLldzLOzy4N2OXOmHZH4tIlZvTe5ll0p6OSNUhuEgu3aOalUZoo'], 'username': ['chao']}> print(username) return HttpResponse('ok') \u6807\u7b7e\u4e0e\u8fc7\u6ee4\u5668\u7684\u4e00\u4e2a\u7b80\u5355\u5b9e\u4f8b url re_path('^index/$',views.index), \u89c6\u56fe\u51fd\u6570 from django.shortcuts import render,HttpResponse def index(request): import datetime n = datetime.datetime.now() now = strftime('%Y-%m-%d %X') #\u53d8\u91cf name = 'wanghwqweqwasdqwe' list_w = [111,222,333] dic_w = {'w':1,'h':2} class Person: def __init__(self,name,age): self.name = name self.age = age person_1 = Person('wa1',22) #\u81ea\u5b9a\u4e49\u7c7b\u5bf9\u8c61 person_2 = Person('wa2',23) #\u81ea\u5b9a\u4e49\u7c7b\u5bf9\u8c61 person_3 = Person('wa3',24) #\u81ea\u5b9a\u4e49\u7c7b\u5bf9\u8c61 person_list = [person_1,person_2,person_3] return render(request,'index.html',{ 'datetime':now, 'name':name, 'ls':list_w, 'dic':dic_w, 'person1_name_upper':person_1.name.upper(), 'person_2_age':person_list[1].age, 'n':n, }) #\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u7b80\u5199\u6210locals()\u2014\u2014\u5b57\u5178\u7684key\u503c\u4e0e\u53d8\u91cf\u540d\u4e00\u6837\uff01\u2014\u2014>\u5b57\u5178\u7684key\u503c\u4e0evalue\u503c\u4e00\u6837\uff01 #return render(requset,'index.html',locals()) \u6a21\u677f\u6587\u4ef6\u7684\u4f7f\u7528 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> {#\u53d8\u91cf#} <p>{{ datetime }}</p> <p>{{ name }}</p> <p>{{ ls }}</p> <p>{{ ls.0 }}</p> <p>{{ dic }}</p> <p>{{ person1_name_upper }}</p> <p>{{ person_2_age }}</p> <p>{{ ls|length }}</p> <p>{{ name|slice:'2:5' }}</p> <p>{{ name|truncatechars:7 }}</p> <p>{{ n|date:'Y-m-d ' }}</p> {#\u6807\u7b7e#} {#\u904d\u5386\u5b57\u5178#} {% for key,value in dic.items %} <p>{{ forloop.counter0 }}:{{ key }}:{{ value }}</p> {% endfor %} {#\u6761\u4ef6\u5224\u65ad#} {% if ls.0 > 200 %} <p>\u53ef\u4ee5\u53ef\u4ee5</p> {% elif ls.0 > 100 and ls.0 < 200 %} <p>\u5475\u5475\u54d2</p> {% else %} <p>\u54c8\u54c8\u54c8\u54c8\u54c8</p> {% endif %} {#\u81ea\u5b9a\u4e49\u8fc7\u6ee4\u5668#} {% load my_tag_filter %} <p>{{ ls.0|multi_filter:20}}</p> <h4>\u81ea\u5b9a\u4e49\u6807\u7b7e</h4> <p>{% simple_tag_multi 5 6 %}</p> {#\u8bb0\u5f97\u7ed9\u81ea\u5b9a\u4e49\u7684input\u4f20\u53c2#} <p>{% my_input 'w' 'asd' %}</p> </body> </html> \u7ec4\u4ef6 \u7ec4\u4ef6\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u6a21\u5757\uff0c\u5c06\u8fd9\u4e2a\u5b8c\u6574\u529f\u80fd\u6a21\u5757\u653e\u5230\u4e00\u4e2ahmtl\u6587\u4ef6\u4e2d\uff0c\u4f7f\u7528\u8fd9\u4e2a\u6a21\u5757\u7684\u5176\u4ed6\u9875\u9762,\u76f4\u63a5\u5728\u9875\u9762\u4e2d\u5f15\u5165\u5373\u53ef\uff0c \u5f15\u5165\u65b9\u5f0f\u4e3a {% include '\u6a21\u5757.html' %} ,\u53ef\u4ee5\u5728\u4efb\u610f\u4f4d\u7f6e\u5f15\u5165\u3002 \u7ec4\u4ef6\u4e0e\u63d2\u4ef6\u7684\u533a\u522b \u7ec4\u4ef6\u662f\u63d0\u4f9b\u67d0\u4e00\u5b8c\u6574\u529f\u80fd\u7684\u6a21\u5757\uff0c\u5982\uff1a\u7f16\u8f91\u5668\u7ec4\u4ef6\uff0cQQ\u7a7a\u95f4\u63d0\u4f9b\u7684\u5173\u6ce8\u7ec4\u4ef6 \u7b49\u3002 \u800c\u63d2\u4ef6\u66f4\u503e\u5411\u5c01\u95ed\u67d0\u4e00\u529f\u80fd\u65b9\u6cd5\u7684\u51fd\u6570\u3002 \u8fd9\u4e24\u8005\u7684\u533a\u522b\u5728 Javascript \u91cc\u533a\u522b\u5f88\u5c0f\uff0c\u7ec4\u4ef6\u8fd9\u4e2a\u540d\u8bcd\u7528\u5f97\u4e0d\u591a\uff0c\u4e00\u822c\u7edf\u79f0\u63d2\u4ef6\u3002 \u4f7f\u7528\u7ec4\u4ef6\u7684\u4e00\u4e2a\u7b80\u5355\u5b9e\u4f8b \u8fd9\u91cc\u6211\u6709\u4e24\u4e2a\u9875\u9762\uff1a1.html\u4e0e2.html 1.html\u7684\u5185\u5bb9\u662f\u8fd9\u6837\u7684 <!DOCTYPE html> <html lang=\"en\"> <head> <link rel=\"stylesheet\" href=\"style.css\" /> <title>\u54c8\u54c8\u54c8\u54c8</title> </head> <body> <div id=\"sidebar\"> {# \u5728\u9875\u97621\u4e2d\u76f4\u63a5\u5f15\u5165\u9875\u97622\uff0c\u6b64\u65f6\u9875\u97622\u5c31\u662f\u4e00\u4e2a\u7ec4\u4ef6 #} {% include '2.html' %} </div> </body> </html> 2.html\u7684\u5185\u5bb9\u662f\u8fd9\u6837\u7684 <div> <a>\u54c8\u54c8\u54c8\u54c8\u54c8</a> </div> \u5982\u679c1.html\u4e0e2.html\u8fd9\u4e24\u4e2a\u6587\u4ef6\u5728\u540c\u4e00\u4e2apackage\u4e2d\uff0c\u90a3\u4e481.html\u53ef\u4ee5\u76f4\u63a5\u663e\u793a2.html\u7684\u5185\u5bb9\u4e86\uff01 \u81ea\u5b9a\u4e49\u6807\u7b7e\u53ca\u8fc7\u6ee4\u5668 \u5f53\u7136\uff0c\u5982\u679cDjango\u81ea\u5e26\u7684\u6807\u7b7e\u53ca\u8fc7\u6ee4\u5668\u5982\u679c\u4e0d\u591f\u7528\u7684\u8bdd\u6211\u4eec\u8fd8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6807\u7b7e\u53ca\u8fc7\u6ee4\u5668\u3002 \u7b80\u5355\u6b65\u9aa4 1\u3001app\u5e94\u7528\u6587\u4ef6\u5939\u4e2d\u521b\u5efa\u4e00\u4e2a\u53eb\u505atemplatetags\u7684\u6587\u4ef6\u5939 2\u3001\u5728templatetags\u91cc\u9762\u521b\u5efa\u4e00\u4e2apy\u6587\u4ef6,\u4f8b\u5982:mytag.py 3\u3001mytag.py: from django import template from django.utils.safestring import mark_safe #mark_safe\u8ba9\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u6807\u7b7e\u751f\u6548 \u540e\u9762\u6709\u5b9e\u4f8b register = template.Library() #register\u7684\u540d\u5b57\u662f\u56fa\u5b9a\u7684,\u4e0d\u53ef\u6539\u53d8 # \u81ea\u5b9a\u4e49\u4e58\u6cd5\u8fc7\u6ee4\u5668 @register.filter def filter_multi(v1,v2): return v1 * v2 # \u81ea\u5b9a\u4e49\u4e58\u6cd5\u6807\u7b7e @register.simple_tag #\u548c\u81ea\u5b9a\u4e49filter\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u63a5\u6536\u66f4\u7075\u6d3b\u7684\u53c2\u6570\uff0c\u6ca1\u6709\u4e2a\u6570\u9650\u5236\u3002 def simple_tag_multi(v1,v2): return v1 * v2 @register.simple_tag def my_input(id,arg): result = \"<input type='text' id='%s' class='%s' />\" %(id,arg,) # \u8fd4\u56de\u5b57\u5178\u683c\u5f0f\u7684\u6570\u636e # mark_safe\u8ba9\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u6807\u7b7e\u751f\u6548 return {'ret':mark_safe(result)}) 4\u3001\u5728\u4f7f\u7528\u81ea\u5b9a\u4e49simple_tag\u548cfilter\u7684html\u6587\u4ef6\u4e2d\u5bfc\u5165\u4e4b\u524d\u521b\u5efa\u7684 my_tags.py {% load my_tags %}\u3000 5\u3001\u4f7f\u7528simple_tag\u548cfilter\uff08\u5982\u4f55\u8c03\u7528\uff09 -------------------------------.html {% load my_tags %} # num=12 {{ num|filter_multi:2 }} #24 {{ num|filter_multi:\"[22,333,4444]\" }} {% simple_tag_multi 2 5 %} \u53c2\u6570\u4e0d\u9650,\u4f46\u4e0d\u80fd\u653e\u5728if for\u8bed\u53e5\u4e2d {% simple_tag_multi num 5 %} {#\u8bb0\u5f97\u7ed9\u81ea\u5b9a\u4e49\u7684input\u4f20\u53c2#} <p>{% my_input 'w' 'asd' %}</p> 6\u3001\u81ea\u5b9a\u4e49\u7684\u4e58\u6cd5\u8fc7\u6ee4\u5668\u4e0e\u81ea\u5b9a\u4e49\u4e58\u6cd5\u6807\u7b7e\u7684\u533a\u522b \uff081\uff09\u8fc7\u6ee4\u5668\u6700\u591a\u53ea\u80fd\u5b9a\u4e49\u4e24\u4e2a\u5f62\u53c2\uff0c\u8fd9\u662f\u7531\u5b83\u7684\u8c03\u7528\u5f62\u5f0f\u51b3\u5b9a\u7684\uff0c\u56e0\u4e3a\u8fc7\u6ee4\u5668\u8c03\u7528\u7684\u65f6\u5019\u65e0\u6cd5\u7a7f\u7b2c\u4e09\u4e2a\u53c2\u6570(\u5982\u4e0a\u9762\u4f8b\u5b50,\u53ea\u80fd\u8c03\u7528ls.0\u4e0e3)\u800cmulti_tag\u81ea\u5b9a\u4e49\u6807\u7b7e\u53ef\u4ee5\u6709\u591a\u4e2a\u5f62\u53c2 \u3002 \uff082\uff09\u4f46\u662f\u5982\u679c\u8fdb\u884c\u201c\u903b\u8f91\u5224\u65ad\u201d\u7684\u65f6\u5019\uff0c\u5c31\u5f97\u7528\u81ea\u5b9a\u4e49\u8fc7\u6ee4\u5668\u4e86\uff0c\u56e0\u4e3a filter\u53ef\u4ee5\u7528\u5728if\u7b49\u8bed\u53e5\u540e\uff0csimple_tag\u4e0d\u53ef\u4ee5 \uff0c\u5982\uff1a {% if num|filter_multi:30 > 100 %} <p>{{ num|filter_multi:30 }}</p> {% endif %} inclusion_tag Inclusion_tag\u672c\u8d28\u4e0a\u4e5f\u662f\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u6807\u7b7e\uff0c\u591a\u7528\u4e8e \u8fd4\u56dehtml\u4ee3\u7801\u7247\u6bb5 \u3002 \u4e3e\u4f8b\u8bf4\u660e templatetags/my_inclusion.py\u6587\u4ef6\u4e2d\uff1a from django import template register = template.Library() #\u5c06result.html\u91cc\u9762\u7684\u5185\u5bb9\u7528\u4e0b\u9762\u51fd\u6570\u7684\u8fd4\u56de\u503c\u6e32\u67d3\uff0c\u7136\u540e\u4f5c\u4e3a\u4e00\u4e2a\u7ec4\u4ef6\u4e00\u6837\uff0c\u52a0\u8f7d\u5230\u4f7f\u7528\u8fd9\u4e2a\u51fd\u6570\u7684html\u6587\u4ef6\u91cc\u9762 @register.inclusion_tag('result.html') #\u53c2\u6570\u53ef\u4ee5\u4f20\u591a\u4e2a\u8fdb\u6765 def show_results(n): n = 1 if n < 1 else int(n) data = [\"\u7b2c{}\u9879\".format(i) for i in range(1, n+1)] return {\"data\": data}#\u8fd9\u91cc\u53ef\u4ee5\u7a7f\u591a\u4e2a\u503c\uff0c\u548crender\u7684\u611f\u89c9\u662f\u4e00\u6837\u7684{'data1':data1,'data2':data2....} templates/snippets/result.html\u6587\u4ef6\u4f5c\u4e3a\u7247\u6bb5\u7684\u5185\u5bb9: <ul> {% for choice in data %} <li>{{ choice }}</li> {% endfor %} </ul> templates/index.html\u6587\u4ef6\u5f15\u5165\u4e0a\u9762\u7684\u7247\u6bb5 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"x-ua-compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"> <title>inclusion_tag test</title> </head> <body> {% load my_inclusion %} {% show_results 10 %} <!-- \u8fd9\u4e2a10 \u662f\u53c2\u6570 --> </body> </html> inclusion_tag\u53c2\u8003\u535a\u5ba2 Django\u6a21\u7248\u8bed\u8a00inclusion_tag\u7684\u7528\u6cd5 \u6a21\u677f\u7684\u7ee7\u627f Django\u6a21\u7248\u5f15\u64ce\u4e2d\u6700\u5f3a\u5927\u4e5f\u662f\u6700\u590d\u6742\u7684\u90e8\u5206\u5c31\u662f\u6a21\u7248\u7ee7\u627f\u4e86\u3002\u6a21\u7248\u7ee7\u627f\u53ef\u4ee5\u8ba9\u60a8\u521b\u5efa\u4e00\u4e2a\u57fa\u672c\u7684\u201c\u9aa8\u67b6\u201d\u6a21\u7248\uff0c\u5b83\u5305\u542b\u60a8\u7ad9\u70b9\u4e2d\u7684\u5168\u90e8\u5143\u7d20\uff0c\u5e76\u4e14\u53ef\u4ee5\u5b9a\u4e49\u80fd\u591f\u88ab\u5b50\u6a21\u7248\u8986\u76d6\u7684blocks\u3002 \u6a21\u7248\u7ee7\u627f\u7684\u6b65\u9aa4 1\u3001\u521b\u5efa\u4e00\u4e2a\u6a21\u677f.html\u6587\u4ef6\u3002 2\u3001\u9700\u8981\u7ee7\u627f\u7684\u5b50\u6587\u4ef6\u4e2d\u5fc5\u987b\u5728\u201c\u5f00\u5934\u201c\u4f4d\u7f6e\u5f15\u5165\u6a21\u677f\u6587\u4ef6 {% extends '\u6a21\u677f.html' %} \u3002 3\u3001\u6a21\u677f.html \u4e2d\u5c06\u9700\u8981\u88ab\u5b50\u6587\u4ef6\u4fee\u6539\u7684\u90e8\u5206\u6307\u51fa\u6765\uff1a {% block content %} xxxxxxx{% endblock %} \uff0c\u8fd8\u53ef\u4ee5\u6307\u5b9a\u540d\u5b57\u7ed3\u675f {% endblock content%} \u3002 4.1\u3001\u7ee7\u627f\u6a21\u677f\u7684\u5b50\u6587\u4ef6\u91cc\u9762\u5f00\u59cb\u5199\u81ea\u5df1\u7684\u5185\u5bb9\uff1a {% block content %} \u81ea\u5df1html\u91cc\u9762\u7684\u5185\u5bb9{% endblock %} \u3002 4.2\u3001\u4fdd\u7559\u6a21\u677f\u5185\u5bb9\u7684\u5199\u6cd5 {% block content %}{{ block.super }}\u81ea\u5df1html\u91cc\u9762\u7684\u5185\u5bb9{% endblock %} \uff0c\u5982\u679c\u4e0d\u52a0 {{ block.super }} \u7684\u8bdd\uff0c\u6a21\u677f\u4e2d\u5199\u7684\u5185\u5bb9\u5728\u5b50\u9875\u4e2d\u662f\u65e0\u6cd5\u663e\u793a\u7684\uff0c\u52a0\u4e0a\u7684\u8bdd\u5c31\u663e\u793a\u51fa\u6765\u4e86\uff0c\u800c\u4e14\u52a0\u7684\u4f4d\u7f6e\u4e0d\u4e00\u6837\u663e\u793a\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u4e00\u6837\uff01 \u4f7f\u7528\u6a21\u7248\u7ee7\u627f\u7684\u4e00\u4e9b\u63d0\u793a \uff081\uff09\u5982\u679c\u4f60\u5728\u6a21\u7248\u4e2d\u4f7f\u7528 {% extends %} \u6807\u7b7e\uff0c\u5b83\u5fc5\u987b\u662f\u6a21\u7248\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6807\u7b7e\u3002\u5176\u4ed6\u7684\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u6a21\u7248\u7ee7\u627f\u90fd\u5c06\u65e0\u6cd5\u5de5\u4f5c\u3002 \uff082\uff09\u5728base\u6a21\u7248\u4e2d\u8bbe\u7f6e\u8d8a\u591a\u7684 {% block %} \u6807\u7b7e\u8d8a\u597d\u3002\u8bf7\u8bb0\u4f4f\uff0c\u5b50\u6a21\u7248\u4e0d\u5fc5\u5b9a\u4e49\u5168\u90e8\u7236\u6a21\u7248\u4e2d\u7684blocks\uff0c\u6240\u4ee5\uff0c \u4f60\u53ef\u4ee5\u5728\u5927\u591a\u6570blocks\u4e2d\u586b\u5145\u5408\u7406\u7684\u9ed8\u8ba4\u5185\u5bb9\uff0c\u7136\u540e\uff0c\u53ea\u5b9a\u4e49\u4f60\u9700\u8981\u7684\u90a3\u4e00\u4e2a\u3002\u591a\u4e00\u70b9\u94a9\u5b50\u603b\u6bd4\u5c11\u4e00\u70b9\u597d\u3002 \uff083\uff09\u5982\u679c\u4f60\u53d1\u73b0\u4f60\u81ea\u5df1\u5728\u5927\u91cf\u7684\u6a21\u7248\u4e2d\u590d\u5236\u5185\u5bb9\uff0c\u90a3\u53ef\u80fd\u610f\u5473\u7740\u4f60\u5e94\u8be5\u628a\u5185\u5bb9\u79fb\u52a8\u5230\u7236\u6a21\u7248\u4e2d\u7684\u4e00\u4e2a {% block %} \u4e2d\u3002 \uff084\uff09\u4e3a\u4e86\u66f4\u597d\u7684\u53ef\u8bfb\u6027\uff0c\u4f60\u4e5f\u53ef\u4ee5\u7ed9\u4f60\u7684{% endblock %} \u6807\u7b7e\u4e00\u4e2a \u540d\u5b57 \u3002\u4f8b\u5982\uff1a {% block content %} ... {% endblock content %} \u5728\u5927\u578b\u6a21\u7248\u4e2d\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5e2e\u4f60\u6e05\u695a\u7684\u770b\u5230\u54ea\u4e00\u4e2a\u3000 {% block %} \u6807\u7b7e\u88ab\u5173\u95ed\u4e86\u3002 \uff085\uff09\u4e0d\u80fd\u5728\u4e00\u4e2a\u6a21\u7248\u4e2d\u5b9a\u4e49\u591a\u4e2a\u76f8\u540c\u540d\u5b57\u7684 block \u6807\u7b7e\u3002 \uff086\uff09If you need to get the content of the block from the parent template, the variable will do the trick. This is useful if you want to add to the contents of a parent block instead of completely overriding it. Data inserted using will not be automatically escaped (see the next section), since it was already escaped, if necessary, in the parent template. \u6a21\u677f\u7ee7\u627f\u7684\u4e00\u4e2a\u5b9e\u4f8b \u6211\u4eec\u5148\u521b\u5efa\u4e00\u4e2abase\u7684\u8def\u7531\u4e0e\u89c6\u56fe\uff1a # \u8def\u7531 re_path('^base/$',views.base), # \u89c6\u56fe def base(request): return render(request,'base.html') \u5728templates\u6a21\u677f\u76ee\u5f55\u4e2d\u52a0\u5165base.html \u6bcd\u7248 \u6587\u4ef6\uff1a <!DOCTYPE html> <html lang=\"en\"> <head> <link rel=\"stylesheet\" href=\"style.css\" /> <title>{% block title %}My amazing site{% endblock %}</title> </head> <body> <div id=\"sidebar\"> {% block sidebar %} <ul> <li><a href=\"/\">Home</a></li> <li><a href=\"/blog/\">Blog</a></li> </ul> {% endblock %} </div> <div id=\"content\"> {% block content %}{% endblock %} </div> </body> </html> \u6bcd\u7248\u8bf4\u660e\uff1a \u8fd9\u4e2a\u6a21\u7248\uff0c\u6211\u4eec\u628a\u5b83\u53eb\u4f5c\u6bcd\u7248\uff0c\u5b83\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53ef\u4ee5\u7528\u4e8e\u4e24\u5217\u6392\u7248\u9875\u9762\u7684\u7b80\u5355HTML\u9aa8\u67b6\u3002 \u201c\u5b50\u6a21\u7248\u201d\u7684\u5de5\u4f5c\u662f\u7528\u5b83\u4eec\u7684\u5185\u5bb9\u586b\u5145\u7a7a\u7684blocks\u3002 \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0cblock\u6807\u7b7e\u5b9a\u4e49\u4e86\u4e09\u4e2a\u53ef\u4ee5\u88ab\u5b50\u6a21\u7248\u5185\u5bb9\u586b\u5145\u7684block\u3002 block \u544a\u8bc9\u6a21\u7248\u5f15\u64ce\uff1a\u5b50\u6a21\u7248\u53ef\u80fd\u4f1a\u8986\u76d6\u6389\u6a21\u7248\u4e2d\u7684\u8fd9\u4e9b\u4f4d\u7f6e\u3002 \u5b50\u6a21\u677f\u6211\u4eec\u547d\u540d\u4e3achild1\uff0c\u4ed6\u7684\u8def\u7531\u4e0e\u89c6\u56fe\u7684\u903b\u8f91\u5982\u4e0b\uff1a # \u8def\u7531 re_path('^child1$',views.child1), # \u89c6\u56fe def child1(request): list_w = [111,222,333] return render(request,'child1.html',{'list_w':list_w}) \u5b50\u6a21\u677fchild1.html\u4e2d\u7684\u5185\u5bb9\u4e3a\uff1a {% extends 'base.html' %} {% block title %} \u54c8\u54c8\u54c8\u54c8 {% endblock %} {% block content %} <p>{{ list_w }}</p> {% endblock %} \u5b50\u6a21\u7248\u8bf4\u660e1\uff1a extends\u6807\u7b7e\u662f\u8fd9\u91cc\u7684\u5173\u952e\u3002\u5b83\u544a\u8bc9\u6a21\u7248\u5f15\u64ce\uff0c\u8fd9\u4e2a\u6a21\u7248\u201c\u7ee7\u627f\u201d\u4e86\u53e6\u4e00\u4e2a\u6a21\u7248\u3002\u5f53\u6a21\u7248\u7cfb\u7edf\u5904\u7406\u8fd9\u4e2a\u6a21\u7248\u65f6\uff1a \u9996\u5148\uff0c\u5b83\u5c06\u5b9a\u4f4d\u7236\u6a21\u7248\u2014\u2014\u5728\u6b64\u4f8b\u4e2d\uff0c\u5c31\u662f\u201cbase.html\u201d\u3002 \u7136\u540e\uff0c\u6a21\u7248\u5f15\u64ce\u5c06\u6ce8\u610f\u5230 base.html \u4e2d\u7684\u4e09\u4e2a block\u6807\u7b7e\uff0c\u5e76\u7528\u5b50\u6a21\u7248\u4e2d\u7684\u5185\u5bb9\u6765\u66ff\u6362\u8fd9\u4e9bblock\u3002 \u8fd9\u79cd\u65b9\u5f0f\u4f7f\u4ee3\u7801\u5f97\u5230\u6700\u5927\u7a0b\u5ea6\u7684\u590d\u7528\uff0c\u5e76\u4e14\u4f7f\u5f97\u6dfb\u52a0\u5185\u5bb9\u5230\u5171\u4eab\u7684\u5185\u5bb9\u533a\u57df\u66f4\u52a0\u7b80\u5355\uff0c\u4f8b\u5982\uff0c\u90e8\u5206\u8303\u56f4\u5185\u7684\u5bfc\u822a\u3002 \u8bf7\u6ce8\u610f\uff0c\u5b50\u6a21\u7248\u5e76\u6ca1\u6709\u5b9a\u4e49 sidebar block\uff0c\u6240\u4ee5\u7cfb\u7edf\u4f7f\u7528\u4e86\u7236\u6a21\u7248\u4e2d\u7684\u503c\u3002 \u88ab\u7ee7\u627f\u7684\u6bcd\u7248\u7684 {% block %} \u6807\u7b7e\u4e2d\u7684\u5185\u5bb9\u603b\u662f\u88ab\u7528\u4f5c\u5907\u9009\u5185\u5bb9\uff08fallback\uff09\u3002 \u5b50\u6a21\u7248\u8bf4\u660e2\uff1a\u6839\u636e child1.html \u7684\u503c\uff0c\u8f93\u51fa\u53ef\u80fd\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684 <!DOCTYPE html> <html lang=\"en\"> <head> <link rel=\"stylesheet\" href=\"style.css\" /> <title>\u54c8\u54c8\u54c8\u54c8</title> </head> <body> <div id=\"sidebar\"> <ul> <li><a href=\"/\">Home</a></li> <li><a href=\"/blog/\">Blog</a></li> </ul> </div> <div id=\"content\"> <p> [111,222,333]</p> </div> </body> </html>","title":"05 \u6a21\u677f\u5c42"},{"location":"Django\u6838\u5fc3/\u6a21\u677f\u5c42/#_1","text":"Django\u4e2d {{ }} \u8fd9\u6837\u7684\u8bed\u53e5\u5c31\u662f\u53d8\u91cf\u3002 \u6bd4\u5982\u6211\u60f3\u53d6\u5217\u8868ls\u7684\u4e0b\u6807\u4e3a0\u7684\u5143\u7d20\uff1a {{ ls.0 }}","title":"\u53d8\u91cf"},{"location":"Django\u6838\u5fc3/\u6a21\u677f\u5c42/#_2","text":"\u8fc7\u6ee4\u5668\u662f\u5728\u53d8\u91cf\u4e2d\u8fdb\u4e00\u6b65\u64cd\u4f5c\u53d8\u91cf\u7684\u8bed\u6cd5\u3002 \u57fa\u672c\u8bed\u6cd5 {{ obj|filter_name:param }} obj\u4e3a\u53d8\u91cf\u7684\u540d\u5b57\uff1bfilter_name\u4e3a\u67d0\u4e00\u4e2a\u8fc7\u6ee4\u5668\u7684\u540d\u5b57\uff1bparam\u662f\u76f8\u5e94\u8fc7\u6ee4\u5668\u7684\u53c2\u6570\u3002 \u5e38\u7528\u7684\u8fc7\u6ee4\u5668 date # \u5728views.py\u6587\u4ef6\u4e2d\u6211\u4eec\u5982\u679c\u4e0d\u5bf9\u65f6\u95f4\u8fdb\u884c\u5904\u7406\uff0c\u6bd4\u5982\u76f4\u63a5\u53d6n\u503c\uff1a # \u90a3\u53ef\u4ee5\u5728\u6a21\u677f\u91cc\u8fdb\u884c\u65f6\u95f4\u683c\u5f0f\u7684\u8f6c\u5316 # n=datetime.datetime.now() {{n|date:'Y-m-d'}} default # \u5982\u679c\u4e00\u4e2a\u53d8\u91cf\u662ffalse\u6216\u8005\u4e3a\u7a7a\uff0c\u4f7f\u7528\u7ed9\u5b9a\u7684\u9ed8\u8ba4\u503c\u3002\u5426\u5219\uff0c\u4f7f\u7528\u53d8\u91cf\u7684\u503c\u3002\u4f8b\u5982\uff1a {{value|default:'nothing'}} length # \u8fd4\u56de\u503c\u7684\u957f\u5ea6\u3002\u5b83\u5bf9\u5b57\u7b26\u4e32\u548c\u5217\u8868\u90fd\u8d77\u4f5c\u7528\u3002\u4f8b\u5982\uff1a {{value|length}} slice # \u5207\u7247 \u5047\u5982value\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u627e\u5230\u5b83\u4e0b\u6807\u4e3a2-5\u5207\u7247\u7ec4\u6210\u7684\u65b0\u5b57\u7b26\u4e32 {{value|slice:'2:5'}} truncatechars # \u5982\u679c\u5b57\u7b26\u4e32\u5b57\u7b26\u591a\u4e8e\u6307\u5b9a\u7684\u5b57\u7b26\u6570\u91cf\uff0c\u90a3\u4e48\u4f1a\u88ab\u622a\u65ad\u3002\u622a\u65ad\u7684\u5b57\u7b26\u4e32\u5c06\u4ee5\u53ef\u7ffb\u8bd1\u7684\u7701\u7565\u53f7\u5e8f\u5217\uff08\u201c...\u201d\uff09\u7ed3\u5c3e\u3002 # \u53c2\u6570\uff1a\u8981\u622a\u65ad\u7684\u5b57\u7b26\u6570 # \u6ce8\u610f\u7ed3\u5c3e\u7684'...'\u7b97\u4e09\u4e2a\u5b57\u7b26\uff0c\u5982\u679c\u53c2\u6570<=3\uff0c\u90a3\u6d4f\u89c8\u5668\u4e0a\u663e\u793a\u7684\u6c38\u8fdc\u662f'...' {{value|truncatechars:5}} safe # Django\u7684\u6a21\u677f\u4e2d\u4f1a\u5bf9HTML\u6807\u7b7e\u548cJS\u7b49\u8bed\u6cd5\u6807\u7b7e\u8fdb\u884c\u81ea\u52a8\u8f6c\u4e49\uff0c\u539f\u56e0\u663e\u800c\u6613\u89c1\uff0c\u8fd9\u6837\u662f\u4e3a\u4e86\u5b89\u5168\u3002\u4f46\u662f\u6709\u7684\u65f6\u5019\u6211\u4eec\u53ef\u80fd\u4e0d\u5e0c\u671b\u8fd9\u4e9bHTML\u5143\u7d20\u88ab\u8f6c\u4e49\uff0c\u6bd4\u5982\u6211\u4eec\u505a\u4e00\u4e2a\u5185\u5bb9\u7ba1\u7406\u7cfb\u7edf\uff0c\u540e\u53f0\u6dfb\u52a0\u7684\u6587\u7ae0\u4e2d\u662f\u7ecf\u8fc7\u4fee\u9970\u7684\uff0c\u8fd9\u4e9b\u4fee\u9970\u53ef\u80fd\u662f\u901a\u8fc7\u4e00\u4e2a\u7c7b\u4f3c\u4e8eFCKeditor\u7f16\u8f91\u52a0\u6ce8\u4e86HTML\u4fee\u9970\u7b26\u7684\u6587\u672c\uff0c\u5982\u679c\u81ea\u52a8\u8f6c\u4e49\u7684\u8bdd\u663e\u793a\u7684\u5c31\u662f\u4fdd\u62a4HTML\u6807\u7b7e\u7684\u6e90\u6587\u4ef6\u3002 # \u4e3a\u4e86\u5728Django\u4e2d\u5173\u95edHTML\u7684\u81ea\u52a8\u8f6c\u4e49\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c\u5982\u679c\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u53d8\u91cf\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fc7\u6ee4\u5668\u201c|safe\u201d\u7684\u65b9\u5f0f\u544a\u8bc9Django\u8fd9\u6bb5\u4ee3\u7801\u662f\u5b89\u5168\u7684\u4e0d\u5fc5\u8f6c\u4e49\u3002\u6bd4\u5982\uff1a # views.py\u6587\u4ef6\u4e2d\u7684\u5b57\u7b26\u4e32\u662f\u8fd9\u6837\u7684\uff1a value=\"<a href=\"\">\u70b9\u51fb</a>\" # \u90a3index.html\u4e2d\u544a\u8bc9\u6d4f\u89c8\u5668\u6b63\u5e38\u6e32\u67d3\u5c31\u884c\uff0c\u6700\u7ec8\u5f97\u5230\u7684\u662f\u4e00\u4e2aa\u6807\u7b7e\uff1a {{value|safe}","title":"\u8fc7\u6ee4\u5668"},{"location":"Django\u6838\u5fc3/\u6a21\u677f\u5c42/#_3","text":"Django\u4e2d {% %} \u8fd9\u6837\u7684\u8bed\u53e5\u5c31\u662f\u6807\u7b7e\u3002 \u6807\u7b7e\u6bd4\u53d8\u91cf\u66f4\u52a0\u590d\u6742\uff0c\u4e00\u4e9b\u5728\u8f93\u51fa\u4e2d\u521b\u5efa\u6587\u672c\uff0c\u4e00\u4e9b\u901a\u8fc7\u5faa\u73af\u6216\u903b\u8f91\u6765\u63a7\u5236\u6d41\u7a0b\uff0c\u4e00\u4e9b\u52a0\u8f7d\u5176\u540e\u7684\u53d8\u91cf\u5c06\u4f7f\u7528\u5230\u7684\u989d\u5916\u4fe1\u606f\u5230\u6a21\u7248\u4e2d\u3002 \u4e00\u4e9b\u6807\u7b7e\u9700\u8981\u5f00\u59cb\u548c\u7ed3\u675f\u6807\u7b7e {% tag %} ...\u6807\u7b7e\u5185\u5bb9 ... {% endtag %} for\u6807\u7b7e \u904d\u5386\u6bcf\u4e00\u4e2a\u5143\u7d20 \u53ef\u4ee5\u5229\u7528 {% for obj in list reversed %} \u53cd\u5411\u5b8c\u6210\u5faa\u73af\u3002 \u4f8b\u5982\uff1a\u904d\u5386\u4e00\u4e2a\u5b57\u5178 {% for key,value in dic.items %} <p>{{key}}:{{value}}</p> {% endfor %} \u5faa\u73af\u5e8f\u53f7\u53ef\u4ee5\u901a\u8fc7 {{forloop}} \u663e\u793a ##forloop.counter The current iteration of the loop (1-indexed) ##forloop.counter0 The current iteration of the loop (0-indexed) ##forloop.revcounter The number of iterations from the end of the loop (1-indexed) ##forloop.revcounter0 The number of iterations from the end of the loop (0-indexed) ##forloop.first True if this is the first time through the loop ##forloop.last True if this is the last time through the loop {% for key,value in dic.items %} <p>{{forloop.counter0}}:{{key}}:{{value}}</p> {% endfor %} for ... empty for \u6807\u7b7e\u5e26\u6709\u4e00\u4e2a\u53ef\u9009\u7684 {% empty %} \u4ece\u53e5\uff0c\u4ee5\u4fbf\u5728\u7ed9\u51fa\u7684\u7ec4\u662f\u7a7a\u7684\u6216\u8005\u6ca1\u6709\u88ab\u627e\u5230\u65f6\uff0c\u53ef\u4ee5\u6709\u6240\u64cd\u4f5c\u3002 {% for person in person_list %} <p>{{ person.name }}</p> {% empty %} <p>sorry,no person here</p> {% endfor %} if\u6807\u7b7e {% if %}\u4f1a\u5bf9\u4e00\u4e2a\u53d8\u91cf\u6c42\u503c\uff0c\u5982\u679c\u5b83\u7684\u503c\u662f\u201cTrue\u201d\uff08\u5b58\u5728\u3001\u4e0d\u4e3a\u7a7a\u3001\u4e14\u4e0d\u662fboolean\u7c7b\u578b\u7684false\u503c\uff09\uff0c\u5bf9\u5e94\u7684\u5185\u5bb9\u5757\u4f1a\u8f93\u51fa\u3002 {% if num > 100 or num < 0 %} <p>\u65e0\u6548</p> {% elif num > 80 and num < 100 %} <p>\u4f18\u79c0</p> {% else %} <p>\u51d1\u6d3b\u5427</p> {% endif %} with\u6807\u7b7e \u4f7f\u7528\u4e00\u4e2a\u7b80\u5355\u5730\u540d\u5b57\u7f13\u5b58\u4e00\u4e2a\u590d\u6742\u7684\u53d8\u91cf\uff0c\u5f53\u4f60\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u201c\u6602\u8d35\u7684\u201d\u65b9\u6cd5\uff08\u6bd4\u5982\u8bbf\u95ee\u6570\u636e\u5e93\uff09\u5f88\u591a\u6b21\u7684\u65f6\u5019\u662f\u975e\u5e38\u6709\u7528\u7684\u3002 {% with total=business.employees.count %} {{ total }} employee{{ total|pluralize }} {% endwith %} csrf_token \u8fd9\u4e2a\u6807\u7b7e\u7528\u4e8e\u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020\u4fdd\u62a4 \u4e0d\u6ce8\u91ca\u7684\u60c5\u51b5\u4e0b\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a\u5728login.html\u6587\u4ef6\u91cc\u52a0\u4e0acsrf_token\u5c31\u53ef\u4ee5\u4e86\uff1a <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <link rel=\"stylesheet\" href=\"/static/whw1.css\"> </head> <body> <form action=\"http://127.0.0.1:8000/login/\" method=\"post\"> {{# \u6ce8\u610f\u8981\u5728form\u8868\u5355\u91cc\u9762\u52a0 #}} {% csrf_token %} \u7528\u6237\u540d: <input type=\"text\" name=\"user\" > \u5bc6\u7801: <input type=\"password\" name=\"pwd\"> <input type=\"submit\"> </form> </body> </html> \u722c\u866b\u53d1\u9001post\u8bf7\u6c42\u7b80\u5355\u6a21\u62df\uff1a import requests res = requests.post('http://127.0.0.1:8000/login/',data={ 'username':'whw', 'password':'123' }) print(res.text) 'django.middleware.csrf.CsrfViewMiddleware', \u5168\u5c40\u4e2d\u95f4\u4ef6\u7684\u914d\u7f6e \u901a\u8fc7\u5b83\u8fd8\u6709\u4e00\u79cd\u65b9\u5f0f\uff1a\u88c5\u9970\u5668\u7684\u5f62\u5f0f from django.views.decorators.csrf import csrf_exempt,csrf_protect #\u653e\u884ccsrf\u8ba4\u8bc1,\u5373\u4fbf\u662f\u5168\u5c40\u914d\u7f6e\u4e86csrf\u8ba4\u8bc1 @csrf_exempt def login(request): if request.method == 'GET': return render(request,'login.html') else: username = request.POST.get('username') print(request.POST) #<QueryDict: {'csrfmiddlewaretoken': ['OhZYiA1NHjh6ywLldzLOzy4N2OXOmHZH4tIlZvTe5ll0p6OSNUhuEgu3aOalUZoo'], 'username': ['chao']}> print(username) return HttpResponse('ok') #\u8fd8\u6709\u4e00\u79cd\u5f3a\u5236\u4fdd\u62a4 @csrf_protect #\u5f3a\u5236csrf\u8ba4\u8bc1,\u5373\u4fbf\u662f\u5168\u5c40\u6ca1\u6709\u914d\u7f6ecsrf\u8ba4\u8bc1 def login(request): if request.method == 'GET': return render(request,'login.html') else: username = request.POST.get('username') print(request.POST) #<QueryDict: {'csrfmiddlewaretoken': ['OhZYiA1NHjh6ywLldzLOzy4N2OXOmHZH4tIlZvTe5ll0p6OSNUhuEgu3aOalUZoo'], 'username': ['chao']}> print(username) return HttpResponse('ok')","title":"\u6807\u7b7e"},{"location":"Django\u6838\u5fc3/\u6a21\u677f\u5c42/#_4","text":"url re_path('^index/$',views.index), \u89c6\u56fe\u51fd\u6570 from django.shortcuts import render,HttpResponse def index(request): import datetime n = datetime.datetime.now() now = strftime('%Y-%m-%d %X') #\u53d8\u91cf name = 'wanghwqweqwasdqwe' list_w = [111,222,333] dic_w = {'w':1,'h':2} class Person: def __init__(self,name,age): self.name = name self.age = age person_1 = Person('wa1',22) #\u81ea\u5b9a\u4e49\u7c7b\u5bf9\u8c61 person_2 = Person('wa2',23) #\u81ea\u5b9a\u4e49\u7c7b\u5bf9\u8c61 person_3 = Person('wa3',24) #\u81ea\u5b9a\u4e49\u7c7b\u5bf9\u8c61 person_list = [person_1,person_2,person_3] return render(request,'index.html',{ 'datetime':now, 'name':name, 'ls':list_w, 'dic':dic_w, 'person1_name_upper':person_1.name.upper(), 'person_2_age':person_list[1].age, 'n':n, }) #\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u7b80\u5199\u6210locals()\u2014\u2014\u5b57\u5178\u7684key\u503c\u4e0e\u53d8\u91cf\u540d\u4e00\u6837\uff01\u2014\u2014>\u5b57\u5178\u7684key\u503c\u4e0evalue\u503c\u4e00\u6837\uff01 #return render(requset,'index.html',locals()) \u6a21\u677f\u6587\u4ef6\u7684\u4f7f\u7528 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> {#\u53d8\u91cf#} <p>{{ datetime }}</p> <p>{{ name }}</p> <p>{{ ls }}</p> <p>{{ ls.0 }}</p> <p>{{ dic }}</p> <p>{{ person1_name_upper }}</p> <p>{{ person_2_age }}</p> <p>{{ ls|length }}</p> <p>{{ name|slice:'2:5' }}</p> <p>{{ name|truncatechars:7 }}</p> <p>{{ n|date:'Y-m-d ' }}</p> {#\u6807\u7b7e#} {#\u904d\u5386\u5b57\u5178#} {% for key,value in dic.items %} <p>{{ forloop.counter0 }}:{{ key }}:{{ value }}</p> {% endfor %} {#\u6761\u4ef6\u5224\u65ad#} {% if ls.0 > 200 %} <p>\u53ef\u4ee5\u53ef\u4ee5</p> {% elif ls.0 > 100 and ls.0 < 200 %} <p>\u5475\u5475\u54d2</p> {% else %} <p>\u54c8\u54c8\u54c8\u54c8\u54c8</p> {% endif %} {#\u81ea\u5b9a\u4e49\u8fc7\u6ee4\u5668#} {% load my_tag_filter %} <p>{{ ls.0|multi_filter:20}}</p> <h4>\u81ea\u5b9a\u4e49\u6807\u7b7e</h4> <p>{% simple_tag_multi 5 6 %}</p> {#\u8bb0\u5f97\u7ed9\u81ea\u5b9a\u4e49\u7684input\u4f20\u53c2#} <p>{% my_input 'w' 'asd' %}</p> </body> </html>","title":"\u6807\u7b7e\u4e0e\u8fc7\u6ee4\u5668\u7684\u4e00\u4e2a\u7b80\u5355\u5b9e\u4f8b"},{"location":"Django\u6838\u5fc3/\u6a21\u677f\u5c42/#_5","text":"\u7ec4\u4ef6\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u6a21\u5757\uff0c\u5c06\u8fd9\u4e2a\u5b8c\u6574\u529f\u80fd\u6a21\u5757\u653e\u5230\u4e00\u4e2ahmtl\u6587\u4ef6\u4e2d\uff0c\u4f7f\u7528\u8fd9\u4e2a\u6a21\u5757\u7684\u5176\u4ed6\u9875\u9762,\u76f4\u63a5\u5728\u9875\u9762\u4e2d\u5f15\u5165\u5373\u53ef\uff0c \u5f15\u5165\u65b9\u5f0f\u4e3a {% include '\u6a21\u5757.html' %} ,\u53ef\u4ee5\u5728\u4efb\u610f\u4f4d\u7f6e\u5f15\u5165\u3002 \u7ec4\u4ef6\u4e0e\u63d2\u4ef6\u7684\u533a\u522b \u7ec4\u4ef6\u662f\u63d0\u4f9b\u67d0\u4e00\u5b8c\u6574\u529f\u80fd\u7684\u6a21\u5757\uff0c\u5982\uff1a\u7f16\u8f91\u5668\u7ec4\u4ef6\uff0cQQ\u7a7a\u95f4\u63d0\u4f9b\u7684\u5173\u6ce8\u7ec4\u4ef6 \u7b49\u3002 \u800c\u63d2\u4ef6\u66f4\u503e\u5411\u5c01\u95ed\u67d0\u4e00\u529f\u80fd\u65b9\u6cd5\u7684\u51fd\u6570\u3002 \u8fd9\u4e24\u8005\u7684\u533a\u522b\u5728 Javascript \u91cc\u533a\u522b\u5f88\u5c0f\uff0c\u7ec4\u4ef6\u8fd9\u4e2a\u540d\u8bcd\u7528\u5f97\u4e0d\u591a\uff0c\u4e00\u822c\u7edf\u79f0\u63d2\u4ef6\u3002 \u4f7f\u7528\u7ec4\u4ef6\u7684\u4e00\u4e2a\u7b80\u5355\u5b9e\u4f8b \u8fd9\u91cc\u6211\u6709\u4e24\u4e2a\u9875\u9762\uff1a1.html\u4e0e2.html 1.html\u7684\u5185\u5bb9\u662f\u8fd9\u6837\u7684 <!DOCTYPE html> <html lang=\"en\"> <head> <link rel=\"stylesheet\" href=\"style.css\" /> <title>\u54c8\u54c8\u54c8\u54c8</title> </head> <body> <div id=\"sidebar\"> {# \u5728\u9875\u97621\u4e2d\u76f4\u63a5\u5f15\u5165\u9875\u97622\uff0c\u6b64\u65f6\u9875\u97622\u5c31\u662f\u4e00\u4e2a\u7ec4\u4ef6 #} {% include '2.html' %} </div> </body> </html> 2.html\u7684\u5185\u5bb9\u662f\u8fd9\u6837\u7684 <div> <a>\u54c8\u54c8\u54c8\u54c8\u54c8</a> </div> \u5982\u679c1.html\u4e0e2.html\u8fd9\u4e24\u4e2a\u6587\u4ef6\u5728\u540c\u4e00\u4e2apackage\u4e2d\uff0c\u90a3\u4e481.html\u53ef\u4ee5\u76f4\u63a5\u663e\u793a2.html\u7684\u5185\u5bb9\u4e86\uff01","title":"\u7ec4\u4ef6"},{"location":"Django\u6838\u5fc3/\u6a21\u677f\u5c42/#_6","text":"\u5f53\u7136\uff0c\u5982\u679cDjango\u81ea\u5e26\u7684\u6807\u7b7e\u53ca\u8fc7\u6ee4\u5668\u5982\u679c\u4e0d\u591f\u7528\u7684\u8bdd\u6211\u4eec\u8fd8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6807\u7b7e\u53ca\u8fc7\u6ee4\u5668\u3002 \u7b80\u5355\u6b65\u9aa4 1\u3001app\u5e94\u7528\u6587\u4ef6\u5939\u4e2d\u521b\u5efa\u4e00\u4e2a\u53eb\u505atemplatetags\u7684\u6587\u4ef6\u5939 2\u3001\u5728templatetags\u91cc\u9762\u521b\u5efa\u4e00\u4e2apy\u6587\u4ef6,\u4f8b\u5982:mytag.py 3\u3001mytag.py: from django import template from django.utils.safestring import mark_safe #mark_safe\u8ba9\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u6807\u7b7e\u751f\u6548 \u540e\u9762\u6709\u5b9e\u4f8b register = template.Library() #register\u7684\u540d\u5b57\u662f\u56fa\u5b9a\u7684,\u4e0d\u53ef\u6539\u53d8 # \u81ea\u5b9a\u4e49\u4e58\u6cd5\u8fc7\u6ee4\u5668 @register.filter def filter_multi(v1,v2): return v1 * v2 # \u81ea\u5b9a\u4e49\u4e58\u6cd5\u6807\u7b7e @register.simple_tag #\u548c\u81ea\u5b9a\u4e49filter\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u63a5\u6536\u66f4\u7075\u6d3b\u7684\u53c2\u6570\uff0c\u6ca1\u6709\u4e2a\u6570\u9650\u5236\u3002 def simple_tag_multi(v1,v2): return v1 * v2 @register.simple_tag def my_input(id,arg): result = \"<input type='text' id='%s' class='%s' />\" %(id,arg,) # \u8fd4\u56de\u5b57\u5178\u683c\u5f0f\u7684\u6570\u636e # mark_safe\u8ba9\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u6807\u7b7e\u751f\u6548 return {'ret':mark_safe(result)}) 4\u3001\u5728\u4f7f\u7528\u81ea\u5b9a\u4e49simple_tag\u548cfilter\u7684html\u6587\u4ef6\u4e2d\u5bfc\u5165\u4e4b\u524d\u521b\u5efa\u7684 my_tags.py {% load my_tags %}\u3000 5\u3001\u4f7f\u7528simple_tag\u548cfilter\uff08\u5982\u4f55\u8c03\u7528\uff09 -------------------------------.html {% load my_tags %} # num=12 {{ num|filter_multi:2 }} #24 {{ num|filter_multi:\"[22,333,4444]\" }} {% simple_tag_multi 2 5 %} \u53c2\u6570\u4e0d\u9650,\u4f46\u4e0d\u80fd\u653e\u5728if for\u8bed\u53e5\u4e2d {% simple_tag_multi num 5 %} {#\u8bb0\u5f97\u7ed9\u81ea\u5b9a\u4e49\u7684input\u4f20\u53c2#} <p>{% my_input 'w' 'asd' %}</p> 6\u3001\u81ea\u5b9a\u4e49\u7684\u4e58\u6cd5\u8fc7\u6ee4\u5668\u4e0e\u81ea\u5b9a\u4e49\u4e58\u6cd5\u6807\u7b7e\u7684\u533a\u522b \uff081\uff09\u8fc7\u6ee4\u5668\u6700\u591a\u53ea\u80fd\u5b9a\u4e49\u4e24\u4e2a\u5f62\u53c2\uff0c\u8fd9\u662f\u7531\u5b83\u7684\u8c03\u7528\u5f62\u5f0f\u51b3\u5b9a\u7684\uff0c\u56e0\u4e3a\u8fc7\u6ee4\u5668\u8c03\u7528\u7684\u65f6\u5019\u65e0\u6cd5\u7a7f\u7b2c\u4e09\u4e2a\u53c2\u6570(\u5982\u4e0a\u9762\u4f8b\u5b50,\u53ea\u80fd\u8c03\u7528ls.0\u4e0e3)\u800cmulti_tag\u81ea\u5b9a\u4e49\u6807\u7b7e\u53ef\u4ee5\u6709\u591a\u4e2a\u5f62\u53c2 \u3002 \uff082\uff09\u4f46\u662f\u5982\u679c\u8fdb\u884c\u201c\u903b\u8f91\u5224\u65ad\u201d\u7684\u65f6\u5019\uff0c\u5c31\u5f97\u7528\u81ea\u5b9a\u4e49\u8fc7\u6ee4\u5668\u4e86\uff0c\u56e0\u4e3a filter\u53ef\u4ee5\u7528\u5728if\u7b49\u8bed\u53e5\u540e\uff0csimple_tag\u4e0d\u53ef\u4ee5 \uff0c\u5982\uff1a {% if num|filter_multi:30 > 100 %} <p>{{ num|filter_multi:30 }}</p> {% endif %}","title":"\u81ea\u5b9a\u4e49\u6807\u7b7e\u53ca\u8fc7\u6ee4\u5668"},{"location":"Django\u6838\u5fc3/\u6a21\u677f\u5c42/#inclusion_tag","text":"Inclusion_tag\u672c\u8d28\u4e0a\u4e5f\u662f\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u6807\u7b7e\uff0c\u591a\u7528\u4e8e \u8fd4\u56dehtml\u4ee3\u7801\u7247\u6bb5 \u3002 \u4e3e\u4f8b\u8bf4\u660e templatetags/my_inclusion.py\u6587\u4ef6\u4e2d\uff1a from django import template register = template.Library() #\u5c06result.html\u91cc\u9762\u7684\u5185\u5bb9\u7528\u4e0b\u9762\u51fd\u6570\u7684\u8fd4\u56de\u503c\u6e32\u67d3\uff0c\u7136\u540e\u4f5c\u4e3a\u4e00\u4e2a\u7ec4\u4ef6\u4e00\u6837\uff0c\u52a0\u8f7d\u5230\u4f7f\u7528\u8fd9\u4e2a\u51fd\u6570\u7684html\u6587\u4ef6\u91cc\u9762 @register.inclusion_tag('result.html') #\u53c2\u6570\u53ef\u4ee5\u4f20\u591a\u4e2a\u8fdb\u6765 def show_results(n): n = 1 if n < 1 else int(n) data = [\"\u7b2c{}\u9879\".format(i) for i in range(1, n+1)] return {\"data\": data}#\u8fd9\u91cc\u53ef\u4ee5\u7a7f\u591a\u4e2a\u503c\uff0c\u548crender\u7684\u611f\u89c9\u662f\u4e00\u6837\u7684{'data1':data1,'data2':data2....} templates/snippets/result.html\u6587\u4ef6\u4f5c\u4e3a\u7247\u6bb5\u7684\u5185\u5bb9: <ul> {% for choice in data %} <li>{{ choice }}</li> {% endfor %} </ul> templates/index.html\u6587\u4ef6\u5f15\u5165\u4e0a\u9762\u7684\u7247\u6bb5 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"x-ua-compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"> <title>inclusion_tag test</title> </head> <body> {% load my_inclusion %} {% show_results 10 %} <!-- \u8fd9\u4e2a10 \u662f\u53c2\u6570 --> </body> </html> inclusion_tag\u53c2\u8003\u535a\u5ba2 Django\u6a21\u7248\u8bed\u8a00inclusion_tag\u7684\u7528\u6cd5","title":"inclusion_tag"},{"location":"Django\u6838\u5fc3/\u6a21\u677f\u5c42/#_7","text":"Django\u6a21\u7248\u5f15\u64ce\u4e2d\u6700\u5f3a\u5927\u4e5f\u662f\u6700\u590d\u6742\u7684\u90e8\u5206\u5c31\u662f\u6a21\u7248\u7ee7\u627f\u4e86\u3002\u6a21\u7248\u7ee7\u627f\u53ef\u4ee5\u8ba9\u60a8\u521b\u5efa\u4e00\u4e2a\u57fa\u672c\u7684\u201c\u9aa8\u67b6\u201d\u6a21\u7248\uff0c\u5b83\u5305\u542b\u60a8\u7ad9\u70b9\u4e2d\u7684\u5168\u90e8\u5143\u7d20\uff0c\u5e76\u4e14\u53ef\u4ee5\u5b9a\u4e49\u80fd\u591f\u88ab\u5b50\u6a21\u7248\u8986\u76d6\u7684blocks\u3002 \u6a21\u7248\u7ee7\u627f\u7684\u6b65\u9aa4 1\u3001\u521b\u5efa\u4e00\u4e2a\u6a21\u677f.html\u6587\u4ef6\u3002 2\u3001\u9700\u8981\u7ee7\u627f\u7684\u5b50\u6587\u4ef6\u4e2d\u5fc5\u987b\u5728\u201c\u5f00\u5934\u201c\u4f4d\u7f6e\u5f15\u5165\u6a21\u677f\u6587\u4ef6 {% extends '\u6a21\u677f.html' %} \u3002 3\u3001\u6a21\u677f.html \u4e2d\u5c06\u9700\u8981\u88ab\u5b50\u6587\u4ef6\u4fee\u6539\u7684\u90e8\u5206\u6307\u51fa\u6765\uff1a {% block content %} xxxxxxx{% endblock %} \uff0c\u8fd8\u53ef\u4ee5\u6307\u5b9a\u540d\u5b57\u7ed3\u675f {% endblock content%} \u3002 4.1\u3001\u7ee7\u627f\u6a21\u677f\u7684\u5b50\u6587\u4ef6\u91cc\u9762\u5f00\u59cb\u5199\u81ea\u5df1\u7684\u5185\u5bb9\uff1a {% block content %} \u81ea\u5df1html\u91cc\u9762\u7684\u5185\u5bb9{% endblock %} \u3002 4.2\u3001\u4fdd\u7559\u6a21\u677f\u5185\u5bb9\u7684\u5199\u6cd5 {% block content %}{{ block.super }}\u81ea\u5df1html\u91cc\u9762\u7684\u5185\u5bb9{% endblock %} \uff0c\u5982\u679c\u4e0d\u52a0 {{ block.super }} \u7684\u8bdd\uff0c\u6a21\u677f\u4e2d\u5199\u7684\u5185\u5bb9\u5728\u5b50\u9875\u4e2d\u662f\u65e0\u6cd5\u663e\u793a\u7684\uff0c\u52a0\u4e0a\u7684\u8bdd\u5c31\u663e\u793a\u51fa\u6765\u4e86\uff0c\u800c\u4e14\u52a0\u7684\u4f4d\u7f6e\u4e0d\u4e00\u6837\u663e\u793a\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u4e00\u6837\uff01 \u4f7f\u7528\u6a21\u7248\u7ee7\u627f\u7684\u4e00\u4e9b\u63d0\u793a \uff081\uff09\u5982\u679c\u4f60\u5728\u6a21\u7248\u4e2d\u4f7f\u7528 {% extends %} \u6807\u7b7e\uff0c\u5b83\u5fc5\u987b\u662f\u6a21\u7248\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6807\u7b7e\u3002\u5176\u4ed6\u7684\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u6a21\u7248\u7ee7\u627f\u90fd\u5c06\u65e0\u6cd5\u5de5\u4f5c\u3002 \uff082\uff09\u5728base\u6a21\u7248\u4e2d\u8bbe\u7f6e\u8d8a\u591a\u7684 {% block %} \u6807\u7b7e\u8d8a\u597d\u3002\u8bf7\u8bb0\u4f4f\uff0c\u5b50\u6a21\u7248\u4e0d\u5fc5\u5b9a\u4e49\u5168\u90e8\u7236\u6a21\u7248\u4e2d\u7684blocks\uff0c\u6240\u4ee5\uff0c \u4f60\u53ef\u4ee5\u5728\u5927\u591a\u6570blocks\u4e2d\u586b\u5145\u5408\u7406\u7684\u9ed8\u8ba4\u5185\u5bb9\uff0c\u7136\u540e\uff0c\u53ea\u5b9a\u4e49\u4f60\u9700\u8981\u7684\u90a3\u4e00\u4e2a\u3002\u591a\u4e00\u70b9\u94a9\u5b50\u603b\u6bd4\u5c11\u4e00\u70b9\u597d\u3002 \uff083\uff09\u5982\u679c\u4f60\u53d1\u73b0\u4f60\u81ea\u5df1\u5728\u5927\u91cf\u7684\u6a21\u7248\u4e2d\u590d\u5236\u5185\u5bb9\uff0c\u90a3\u53ef\u80fd\u610f\u5473\u7740\u4f60\u5e94\u8be5\u628a\u5185\u5bb9\u79fb\u52a8\u5230\u7236\u6a21\u7248\u4e2d\u7684\u4e00\u4e2a {% block %} \u4e2d\u3002 \uff084\uff09\u4e3a\u4e86\u66f4\u597d\u7684\u53ef\u8bfb\u6027\uff0c\u4f60\u4e5f\u53ef\u4ee5\u7ed9\u4f60\u7684{% endblock %} \u6807\u7b7e\u4e00\u4e2a \u540d\u5b57 \u3002\u4f8b\u5982\uff1a {% block content %} ... {% endblock content %} \u5728\u5927\u578b\u6a21\u7248\u4e2d\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5e2e\u4f60\u6e05\u695a\u7684\u770b\u5230\u54ea\u4e00\u4e2a\u3000 {% block %} \u6807\u7b7e\u88ab\u5173\u95ed\u4e86\u3002 \uff085\uff09\u4e0d\u80fd\u5728\u4e00\u4e2a\u6a21\u7248\u4e2d\u5b9a\u4e49\u591a\u4e2a\u76f8\u540c\u540d\u5b57\u7684 block \u6807\u7b7e\u3002 \uff086\uff09If you need to get the content of the block from the parent template, the variable will do the trick. This is useful if you want to add to the contents of a parent block instead of completely overriding it. Data inserted using will not be automatically escaped (see the next section), since it was already escaped, if necessary, in the parent template. \u6a21\u677f\u7ee7\u627f\u7684\u4e00\u4e2a\u5b9e\u4f8b \u6211\u4eec\u5148\u521b\u5efa\u4e00\u4e2abase\u7684\u8def\u7531\u4e0e\u89c6\u56fe\uff1a # \u8def\u7531 re_path('^base/$',views.base), # \u89c6\u56fe def base(request): return render(request,'base.html') \u5728templates\u6a21\u677f\u76ee\u5f55\u4e2d\u52a0\u5165base.html \u6bcd\u7248 \u6587\u4ef6\uff1a <!DOCTYPE html> <html lang=\"en\"> <head> <link rel=\"stylesheet\" href=\"style.css\" /> <title>{% block title %}My amazing site{% endblock %}</title> </head> <body> <div id=\"sidebar\"> {% block sidebar %} <ul> <li><a href=\"/\">Home</a></li> <li><a href=\"/blog/\">Blog</a></li> </ul> {% endblock %} </div> <div id=\"content\"> {% block content %}{% endblock %} </div> </body> </html> \u6bcd\u7248\u8bf4\u660e\uff1a \u8fd9\u4e2a\u6a21\u7248\uff0c\u6211\u4eec\u628a\u5b83\u53eb\u4f5c\u6bcd\u7248\uff0c\u5b83\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53ef\u4ee5\u7528\u4e8e\u4e24\u5217\u6392\u7248\u9875\u9762\u7684\u7b80\u5355HTML\u9aa8\u67b6\u3002 \u201c\u5b50\u6a21\u7248\u201d\u7684\u5de5\u4f5c\u662f\u7528\u5b83\u4eec\u7684\u5185\u5bb9\u586b\u5145\u7a7a\u7684blocks\u3002 \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0cblock\u6807\u7b7e\u5b9a\u4e49\u4e86\u4e09\u4e2a\u53ef\u4ee5\u88ab\u5b50\u6a21\u7248\u5185\u5bb9\u586b\u5145\u7684block\u3002 block \u544a\u8bc9\u6a21\u7248\u5f15\u64ce\uff1a\u5b50\u6a21\u7248\u53ef\u80fd\u4f1a\u8986\u76d6\u6389\u6a21\u7248\u4e2d\u7684\u8fd9\u4e9b\u4f4d\u7f6e\u3002 \u5b50\u6a21\u677f\u6211\u4eec\u547d\u540d\u4e3achild1\uff0c\u4ed6\u7684\u8def\u7531\u4e0e\u89c6\u56fe\u7684\u903b\u8f91\u5982\u4e0b\uff1a # \u8def\u7531 re_path('^child1$',views.child1), # \u89c6\u56fe def child1(request): list_w = [111,222,333] return render(request,'child1.html',{'list_w':list_w}) \u5b50\u6a21\u677fchild1.html\u4e2d\u7684\u5185\u5bb9\u4e3a\uff1a {% extends 'base.html' %} {% block title %} \u54c8\u54c8\u54c8\u54c8 {% endblock %} {% block content %} <p>{{ list_w }}</p> {% endblock %} \u5b50\u6a21\u7248\u8bf4\u660e1\uff1a extends\u6807\u7b7e\u662f\u8fd9\u91cc\u7684\u5173\u952e\u3002\u5b83\u544a\u8bc9\u6a21\u7248\u5f15\u64ce\uff0c\u8fd9\u4e2a\u6a21\u7248\u201c\u7ee7\u627f\u201d\u4e86\u53e6\u4e00\u4e2a\u6a21\u7248\u3002\u5f53\u6a21\u7248\u7cfb\u7edf\u5904\u7406\u8fd9\u4e2a\u6a21\u7248\u65f6\uff1a \u9996\u5148\uff0c\u5b83\u5c06\u5b9a\u4f4d\u7236\u6a21\u7248\u2014\u2014\u5728\u6b64\u4f8b\u4e2d\uff0c\u5c31\u662f\u201cbase.html\u201d\u3002 \u7136\u540e\uff0c\u6a21\u7248\u5f15\u64ce\u5c06\u6ce8\u610f\u5230 base.html \u4e2d\u7684\u4e09\u4e2a block\u6807\u7b7e\uff0c\u5e76\u7528\u5b50\u6a21\u7248\u4e2d\u7684\u5185\u5bb9\u6765\u66ff\u6362\u8fd9\u4e9bblock\u3002 \u8fd9\u79cd\u65b9\u5f0f\u4f7f\u4ee3\u7801\u5f97\u5230\u6700\u5927\u7a0b\u5ea6\u7684\u590d\u7528\uff0c\u5e76\u4e14\u4f7f\u5f97\u6dfb\u52a0\u5185\u5bb9\u5230\u5171\u4eab\u7684\u5185\u5bb9\u533a\u57df\u66f4\u52a0\u7b80\u5355\uff0c\u4f8b\u5982\uff0c\u90e8\u5206\u8303\u56f4\u5185\u7684\u5bfc\u822a\u3002 \u8bf7\u6ce8\u610f\uff0c\u5b50\u6a21\u7248\u5e76\u6ca1\u6709\u5b9a\u4e49 sidebar block\uff0c\u6240\u4ee5\u7cfb\u7edf\u4f7f\u7528\u4e86\u7236\u6a21\u7248\u4e2d\u7684\u503c\u3002 \u88ab\u7ee7\u627f\u7684\u6bcd\u7248\u7684 {% block %} \u6807\u7b7e\u4e2d\u7684\u5185\u5bb9\u603b\u662f\u88ab\u7528\u4f5c\u5907\u9009\u5185\u5bb9\uff08fallback\uff09\u3002 \u5b50\u6a21\u7248\u8bf4\u660e2\uff1a\u6839\u636e child1.html \u7684\u503c\uff0c\u8f93\u51fa\u53ef\u80fd\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684 <!DOCTYPE html> <html lang=\"en\"> <head> <link rel=\"stylesheet\" href=\"style.css\" /> <title>\u54c8\u54c8\u54c8\u54c8</title> </head> <body> <div id=\"sidebar\"> <ul> <li><a href=\"/\">Home</a></li> <li><a href=\"/blog/\">Blog</a></li> </ul> </div> <div id=\"content\"> <p> [111,222,333]</p> </div> </body> </html>","title":"\u6a21\u677f\u7684\u7ee7\u627f"},{"location":"Django\u6838\u5fc3/\u89c6\u56fe\u7cfb\u7edf/","text":"web\u8bf7\u6c42\u7ecf\u8fc7\u8def\u7531\u63a7\u5236\u5668\u540e\uff0c\u6838\u5fc3\u5904\u7406\u4e1a\u52a1\u903b\u8f91\u7684\u5730\u65b9\u5c31\u662fDjango\u7684 \u89c6\u56fe\u7cfb\u7edf \u3002\u89c6\u56fe\u63a5\u6536\u8bf7\u6c42\u5bf9\u8c61\u5e76\u5904\u7406\u597d\u4e1a\u52a1\u903b\u8f91\u540e\u5fc5\u987b\u8981\u8fd4\u56de\u4e00\u4e2a HttpResponse\u54cd\u5e94\u5bf9\u8c61 \u3002 \u5173\u4e8eDjango\u4e2d\u89c6\u56fe\u7684\u5177\u4f53\u8bf4\u660e\u5982\u4e0b\uff1a \u4e00\u4e2a\u89c6\u56fe\uff0c\u662f\u4e00\u4e2a\u7b80\u5355\u7684Python\u51fd\u6570\u6216\u8005\u7c7b\uff0c\u5b83\u63a5\u53d7Web\u8bf7\u6c42\u5e76\u4e14\u8fd4\u56deWeb\u54cd\u5e94\u3002\u54cd\u5e94\u53ef\u4ee5\u662f\u4e00\u5f20\u7f51\u9875\u7684HTML\u5185\u5bb9\uff0c\u4e00\u4e2a\u91cd\u5b9a\u5411\uff0c\u4e00\u4e2a404\u9519\u8bef\uff0c\u4e00\u4e2aXML\u6587\u6863\uff0c\u6216\u8005\u4e00\u5f20\u56fe\u7247\uff0c\u4efb\u4f55\u4e1c\u897f\u90fd\u53ef\u4ee5 \u3002 \u65e0\u8bba\u89c6\u56fe\u672c\u8eab\u5305\u542b\u4ec0\u4e48\u903b\u8f91\uff0c\u90fd\u8981\u8fd4\u56de\u54cd\u5e94\u3002 \u4ee3\u7801\u5199\u5728\u54ea\u91cc\u4e5f\u65e0\u6240\u8c13\uff0c\u53ea\u8981\u5b83\u5728\u4f60\u7684Python\u76ee\u5f55\u4e0b\u9762\u3002\u9664\u6b64\u4e4b\u5916\u6ca1\u6709\u66f4\u591a\u7684\u8981\u6c42\u4e86\u2014\u2014\u53ef\u4ee5\u8bf4\u201c\u6ca1\u6709\u4ec0\u4e48\u795e\u5947\u7684\u5730\u65b9\u201d\u3002 \u4e3a\u4e86\u5c06\u4ee3\u7801\u653e\u5728\u67d0\u5904\uff0c\u7ea6\u5b9a\u662f\u5c06\u89c6\u56fe\u653e\u7f6e\u5728\u9879\u76ee\u6216\u5e94\u7528\u7a0b\u5e8f\u76ee\u5f55\u4e2d\u7684\u540d\u4e3aviews.py\u7684\u6587\u4ef6\u4e2d\u3002 \u901a\u8fc7\u4e0a\u9762\u7684\u4ecb\u7ecd\u5927\u5bb6\u80af\u5b9a\u5bf9\u89c6\u56fe\u7684\u7528\u6cd5\u6709\u4e86\u4e00\u4e9b\u7b80\u5355\u7684\u8ba4\u8bc6\uff0c\u63a5\u4e0b\u6765\u7740\u91cd\u4ecb\u7ecd\u4e00\u4e0b\u89c6\u56fe\u4e2d\u7684 \u8bf7\u6c42\u5bf9\u8c61 \u4e0e \u54cd\u5e94\u5bf9\u8c61 \u3002 \u8bf7\u6c42\u5bf9\u8c61 \u8bf7\u6c42\u5bf9\u8c61\u9700\u8981\u5927\u5bb6\u8bb0\u4f4f\u5e38\u7528\u7684\u65b9\u6cd5\u4e0e\u5c5e\u6027\u5c31\u53ef\u4ee5\u4e86\uff1a request.body # \u5f97\u5230\u7528\u6237\u63d0\u4ea4\u6570\u636e\u7684\u539f\u59cb\u6570\u636e\u7c7b\u578b\uff08bytes\u7c7b\u578b\u7684\u6570\u636e\uff09 b'username=chao&passowrd=123' request.method # \u8bf7\u6c42\u65b9\u5f0f\uff1aPOST\u3001GET\u7b49 request.GET # get\u8bf7\u6c42\u5bf9\u8c61\uff1arequest.GET.get(\"name\")\u83b7\u53d6get\u8bf7\u6c42\u7684\u53c2\u6570 request.POST # post\u8bf7\u6c42\u5bf9\u8c61 request.path # \u8bf7\u6c42\u8def\u5f84\uff1a127.0.0.1:8000/blog/index/\u6253\u5370\u51fa\u6765\u7684\u662f/blog/index/ request.path_info # \u4e0epath\u5c5e\u6027\u83b7\u53d6\u5230\u7684\u4fe1\u606f\u4e00\u6837 request.META # \u83b7\u53d6\u8bf7\u6c42\u5934\u7684\u5143\u4fe1\u606f request.META.get('HTTP_USER_AGENT') # \u62ff\u5230\u7684\u662f\u6d4f\u89c8\u5668\u7684\u4fe1\u606f\u2014\u2014\u6709\u4e9b\u7f51\u7ad9\u7684\u7684\u53cd\u722c\u673a\u5236\u5c31\u662f\u505a\u4e86user_agent\u7684\u9a8c\u8bc1 request.META.get('REMOTE_ADDR') # \u62ff\u5230\u7684\u662f\u5ba2\u6237\u7aef\u7684\u5730\u5740 request.get_full_path() # \u83b7\u53d6\u9664\u57df\u540d\u4e4b\u5916\u7684\u5168\u8def\u5f84,\u5305\u62ec\u8bf7\u6c42\u53c2\u6570:/blog/index/?a=1&b=2 request.is_ajax() # \u5224\u65ad\u8bf7\u6c42\u662f\u5426\u662fajax\u8bf7\u6c42\uff0c\u5efa\u8bae\u4e0d\u7528\u5b83\uff0cDjango3\u5df2\u53d6\u6d88\u4e86\u8fd9\u4e2a\u65b9\u6cd5 \u54cd\u5e94\u5bf9\u8c61 Django\u4e2d\u6709\u4e09\u4e2a\u54cd\u5e94\u5bf9\u8c61\uff1a HttpResponse \u3001 render \u3001 redirect \u3002 1\u3001HttpResponse HttpResponse()\u62ec\u53f7\u5185\u76f4\u63a5\u8ddf\u4e00\u4e2a\u5b57\u7b26\u4e32\u4f5c\u4e3a\u54cd\u5e94\u4f53\uff0c\u6bd4\u8f83\u7b80\u5355\u76f4\u63a5\uff0c\u6240\u4ee5\u8fd9\u91cc\u4e3b\u8981\u4ecb\u7ecd\u540e\u9762\u4e24\u79cd\u5f62\u5f0f 2\u3001render render\u65b9\u6cd5\u5c31\u662f\u5c06\u4e00\u4e2a\u6a21\u677f\u9875\u9762\u4e2d\u7684\u6a21\u677f\u8bed\u6cd5\u8fdb\u884c\u6e32\u67d3\uff0c\u6700\u7ec8\u6e32\u67d3\u6210\u4e00\u4e2ahtml\u9875\u9762\u4f5c\u4e3a\u54cd\u5e94\u4f53\u3002 \u8bed\u6cd5\uff1a return render(request, template_name[, context]) \u7ed3\u5408\u4e00\u4e2a\u7ed9\u5b9a\u7684\u6a21\u677f\u548c\u4e00\u4e2a\u7ed9\u5b9a\u7684\u4e0a\u4e0b\u6587\u5b57\u5178\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u6e32\u67d3\u540e\u7684 HttpResponse \u5bf9\u8c61\u3002 def index(request): import datetime n = datetime.datetime.now() now = n.strftime('%Y-%m-%d:%X') return render(request,'index.html',{'datetime':now}) \u53c2\u6570\uff1a (1)request\uff1a \u7528\u4e8e\u751f\u6210\u54cd\u5e94\u7684\u8bf7\u6c42\u5bf9\u8c61\u3002 (2)template_name\uff1a\u8981\u4f7f\u7528\u7684\u6a21\u677f\u7684\u5b8c\u6574\u540d\u79f0\uff0c\u53ef\u9009\u7684\u53c2\u6570 \u3002 (3)context\uff1a\u6dfb\u52a0\u5230\u6a21\u677f\u4e0a\u4e0b\u6587\u7684\u4e00\u4e2a\u5b57\u5178\u3002\u9ed8\u8ba4\u662f\u4e00\u4e2a\u7a7a\u5b57\u5178\u3002\u5982\u679c\u5b57\u5178\u4e2d\u7684\u67d0\u4e2a\u503c\u662f\u53ef\u8c03\u7528\u7684\uff0c\u89c6\u56fe\u5c06\u5728\u6e32\u67d3\u6a21\u677f\u4e4b\u524d\u8c03\u7528\u5b83\u3002 \u6ce8\u610f\uff1a \uff081\uff09\u6d4f\u89c8\u5668\u5e76\u4e0d\u8ba4\u8bc6\u6a21\u677f\u8bed\u6cd5\uff0crender\u65b9\u6cd5\u627e\u5230index.html\u6587\u4ef6\u4e4b\u540e\uff0c\u5b83\u5148\u68c0\u67e5\u91cc\u9762\u6709\u6ca1\u6709\u6a21\u677f\u8bed\u6cd5\uff0c\u5982\u679c\u6709\u6a21\u677f\u8bed\u6cd5\u5148\u5c06\u4f20\u5165\u7684\u503c\u505a\u66ff\u6362\uff0c\u5c06\u5b57\u5178\u7684key\u5bf9\u5e94\u7684value\u503cnow\u4f5c\u4e3a\u53c2\u6570\u4f20\u7ed9\u6d4f\u89c8\u5668\uff0c\u4f20\u5b8c\u53c2\u6570\u4e4b\u540eindex.html\u624d\u662f\u4e00\u4e2ahtml\u6587\u4ef6\u4e86\uff0c\u7136\u540erender\u518d\u5c06html\u6587\u4ef6\u90a3\u4e00\u5806\u4e1c\u897f\u4f20\u7ed9\u6d4f\u89c8\u5668\uff0c\u6240\u4ee5\u6d4f\u89c8\u6700\u540e\u663e\u793a\u7684\u662fnow\u7684\u503c\u3002 \uff082\uff09render\u5c06\u6a21\u677f\u8bed\u6cd5\u66ff\u6362\u6210\u5bf9\u5e94\u7684\u503c\u2014\u2014\u8fd9\u4e2a\u8fc7\u7a0b\u5341\u5206\u91cd\u8981\uff0c\u5982\u679cindex.html\u6587\u4ef6\u4e2d\u6709\u9700\u8981\u201c\u5d4c\u5165\u201d\u7684\u53c2\u6570\uff0c\u90a3render\u7684\u7b2c\u4e09\u4e2a\u53c2\u6570\u5f97\u52a0\uff0c\u5982\u679c\u53ea\u662f\u4e00\u4e2a\u201c\u9759\u6001\u9875\u9762\u201d\uff0c\u4e0d\u9700\u8981\u52a0render\u7684\u7b2c\u4e09\u4e2a\u53c2\u6570\u3002\u5bf9\u5e94\u7684templates\u6587\u4ef6\u4e2d\u7684index.html\u6587\u4ef6\u7684p\u6807\u7b7e\u8fd9\u6837\u5199\uff1a {{datetime}} \u6ce8\u610f\u6b64\u65f6\u5d4c\u5957\u4e86\u6a21\u677f\u8bed\u6cd5\u7684index.html\u6587\u4ef6\uff0c\u5728django\u4e2d\u79f0\u4e3a\u201c\u6a21\u677f\u6587\u4ef6\u201d\u3002 3\u3001redirect \u91cd\u5b9a\u5411\u8fd9\u4e2a\u7b80\u5355\uff0c\u53ef\u4ee5\u4f20\u9012\u4e00\u4e2a\u9700\u8981\u91cd\u5b9a\u5411\u7684\u786c\u7f16\u7801\u7684URL\uff1a def my_view(request): ... return redirect('/some/url/') \u5f53\u7136\u4e5f\u53ef\u4ee5\u4f20\u9012\u4e00\u4e2a\u5b8c\u6574\u7684URL\uff1a def my_view(request): ... return redirect('http://example.com/') \u91cd\u5b9a\u5411\u5e38\u89c1\u7684\u72b6\u6001\u7801\uff1a # 301\u548c302\u7684\u533a\u522b 301\u548c302\u72b6\u6001\u7801\u90fd\u8868\u793a\u91cd\u5b9a\u5411\uff0c\u5c31\u662f\u8bf4\u6d4f\u89c8\u5668\u5728\u62ff\u5230\u670d\u52a1\u5668\u8fd4\u56de\u7684\u8fd9\u4e2a\u72b6\u6001\u7801\u540e\u4f1a\u81ea\u52a8\u8df3\u8f6c\u5230\u4e00\u4e2a\u65b0\u7684URL\u5730\u5740\uff0c\u8fd9\u4e2a\u5730\u5740\u53ef\u4ee5\u4ece\u54cd\u5e94\u7684Location\u9996\u90e8\u4e2d\u83b7\u53d6\uff08\u7528\u6237\u770b\u5230\u7684\u6548\u679c\u5c31\u662f\u4ed6\u8f93\u5165\u7684\u5730\u5740A\u77ac\u95f4\u53d8\u6210\u4e86\u53e6\u4e00\u4e2a\u5730\u5740B\uff09\u2014\u2014\u8fd9\u662f\u5b83\u4eec\u7684\u5171\u540c\u70b9\u3002 \u4ed6\u4eec\u7684\u4e0d\u540c\u5728\u4e8e\uff1a301\u8868\u793a\u65e7\u5730\u5740A\u7684\u8d44\u6e90\u5df2\u7ecf\u88ab\u6c38\u4e45\u5730\u79fb\u9664\u4e86\uff08\u8fd9\u4e2a\u8d44\u6e90\u4e0d\u53ef\u8bbf\u95ee\u4e86\uff09\uff0c\u641c\u7d22\u5f15\u64ce\u5728\u6293\u53d6\u65b0\u5185\u5bb9\u7684\u540c\u65f6\u4e5f\u5c06\u65e7\u7684\u7f51\u5740\u4ea4\u6362\u4e3a\u91cd\u5b9a\u5411\u4e4b\u540e\u7684\u7f51\u5740\uff1b302\u8868\u793a\u65e7\u5730\u5740A\u7684\u8d44\u6e90\u8fd8\u5728\uff08\u4ecd\u7136\u53ef\u4ee5\u8bbf\u95ee\uff09\uff0c\u8fd9\u4e2a\u91cd\u5b9a\u5411\u53ea\u662f\u4e34\u65f6\u5730\u4ece\u65e7\u5730\u5740A\u8df3\u8f6c\u5230\u5730\u5740B\uff0c\u641c\u7d22\u5f15\u64ce\u4f1a\u6293\u53d6\u65b0\u7684\u5185\u5bb9\u800c\u4fdd\u5b58\u65e7\u7684\u7f51\u5740\u3002 \u5e38\u89c1\u91cd\u5b9a\u5411\u7684\u539f\u56e0\uff1a \uff081\uff09\u7f51\u7ad9\u8c03\u6574\uff08\u5982\u6539\u53d8\u7f51\u9875\u76ee\u5f55\u7ed3\u6784\uff09\u3002 \uff082\uff09\u7f51\u9875\u88ab\u79fb\u5230\u4e00\u4e2a\u65b0\u5730\u5740\u3002 \uff083\uff09\u7f51\u9875\u6269\u5c55\u540d\u6539\u53d8(\u5982\u5e94\u7528\u9700\u8981\u628a.php\u6539\u6210.Html\u6216.shtml)\u3002 \u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u4e0d\u505a\u91cd\u5b9a\u5411\uff0c\u5219\u7528\u6237\u6536\u85cf\u5939\u6216\u641c\u7d22\u5f15\u64ce\u6570\u636e\u5e93\u4e2d\u65e7\u5730\u5740\u53ea\u80fd\u8ba9\u8bbf\u95ee\u5ba2\u6237\u5f97\u5230\u4e00\u4e2a404\u9875\u9762\u9519\u8bef\u4fe1\u606f\uff0c\u8bbf\u95ee\u6d41\u91cf\u767d\u767d\u4e27\u5931\uff1b\u518d\u8005\u67d0\u4e9b\u6ce8\u518c\u4e86\u591a\u4e2a\u57df\u540d\u7684\u7f51\u7ad9\uff0c\u4e5f\u9700\u8981\u901a\u8fc7\u91cd\u5b9a\u5411\u8ba9\u8bbf\u95ee\u8fd9\u4e9b\u57df\u540d\u7684\u7528\u6237\u81ea\u52a8\u8df3\u8f6c\u5230\u4e3b\u7ad9\u70b9\u7b49\u3002 FBV\u4e0eCBV FBV\uff08function base views\uff09 \u5c31\u662f\u5728\u89c6\u56fe\u91cc\u4f7f\u7528\u51fd\u6570\u5904\u7406\u8bf7\u6c42\u3002 \u4e4b\u524d\u7684\u4f8b\u5b50\u90fd\u662f\u57fa\u4e8eFBV\u6a21\u5f0f\u5199\u7684\u4ee3\u7801\u3002 CBV\uff08class base views\uff09\u5c31\u662f\u5728\u89c6\u56fe\u91cc\u4f7f\u7528\u7c7b\u5904\u7406\u8bf7\u6c42\u3002Python\u662f\u4e00\u4e2a\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u5982\u679c\u53ea\u7528\u51fd\u6570\u6765\u5f00\u53d1\uff0c\u6709\u5f88\u591a\u9762\u5411\u5bf9\u8c61\u7684\u4f18\u70b9\u5c31\u9519\u5931\u4e86\uff08\u7ee7\u627f\u3001\u5c01\u88c5\u3001\u591a\u6001\uff09\u3002 \u6240\u4ee5Django\u5728\u540e\u6765\u52a0\u5165\u4e86Class-Based-View\u3002\u53ef\u4ee5\u8ba9\u6211\u4eec\u7528\u7c7b\u5199View\u3002 \u8fd9\u6837\u505a\u7684\u4f18\u70b9\u4e3b\u8981\u4e0b\u9762\u4e24\u4e2a\u65b9\u9762\uff1a \u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u590d\u7528\u6027\uff0c\u53ef\u4ee5\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u7684\u6280\u672f\uff0c\u6bd4\u5982Mixin\uff08\u591a\u7ee7\u627f\uff09\u3002 \u53ef\u4ee5\u7528\u4e0d\u540c\u7684\u51fd\u6570\u9488\u5bf9\u4e0d\u540c\u7684HTTP\u65b9\u6cd5\u5904\u7406\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u5f88\u591aif\u5224\u65ad\uff0c\u63d0\u9ad8\u4ee3\u7801\u53ef\u8bfb\u6027\u3002 \u4e0b\u9762\u4e3b\u8981\u4ecb\u7ecd\u4e00\u4e0bFBV\u4e0eCBV\u7684\u533a\u522b\u3002 \u5982\u679c\u6211\u4eec\u8981\u5199\u4e00\u4e2a\u5904\u7406GET\u65b9\u6cd5\u7684view\uff1a \u7528\u51fd\u6570\u5199\u7684\u8bdd\u662f\u4e0b\u9762\u8fd9\u6837: #\u8def\u7531\u4e2d\uff1a url('^now$',views.count_now) #\u89c6\u56fe\u51fd\u6570\u4e2d\uff1a def count_now(request): now_time = time.localtime() now_str = time.strftime('%Y-%m-%d %H:%M:%S',now_time) if request.method == 'GET': return render(request,'now.html',{'now_str':now_str}) \u5982\u679c\u7528\u7c7b\u5904\u7406\u7684\u8bdd\u662f\u8fd9\u6837: #\u8def\u7531\u4e2d\uff1a url('^now$',views.MyNow.as_view()) #\u89c6\u56fe\u51fd\u6570\u4e2d from django.views import View class MyNow(View): # get\u65b9\u6cd5\u5904\u7406get\u8bf7\u6c42 def get(self,request): now_time = time.localtime() now_str = time.strftime('%Y-%m-%d %H:%M:%S',now_time) return render(request,'now.html',{'now_str':now_str}) CBV\u4e2d\u6dfb\u52a0\u7c7b\u7684\u5c5e\u6027 \u65b9\u6cd5\u4e00\uff1a\u4f7f\u7528Python\u65b9\u6cd5\uff0c\u53ef\u4ee5\u88ab\u5b50\u7c7b\u8986\u76d6\uff1a class MyNow(View): name = 'wanghw' def get(self,request): now_time = time.localtime() now_str = time.strftime('%Y-%m-%d %H:%M:%S',now_time) return render(request,'now.html',{'now_str':now_str,'name':self.name}) \u65b9\u6cd5\u4e8c\uff1a\u53ef\u4ee5\u5728url\u4e2d\u6307\u5b9a\u7c7b\u7684\u5c5e\u6027 urlpatterns = [ path('admin/', admin.site.urls), re_path('^now/$',views.MyNow.as_view(name='whw')) # \u7c7b\u91cc\u9762\u5fc5\u987b\u6709name\u5c5e\u6027\uff0c\u5e76\u4e14\u4f1a\u88ab\u4f20\u8fdb\u6765\u7684\u8fd9\u4e2a\u5c5e\u6027\u503c\u7ed9\u8986\u76d6\u6389 ] \u6ce8\u610f\uff1a\u6700\u7ec8name\u5c5e\u6027\u7684\u503c\u662furl\u91cc\u9762\u4f20\u8fdb\u53bb\u7684\u503c whw CBV\u8def\u7531\u7684\u5199\u6cd5 \u5982\u679c\u5728\u89c6\u56fe\u4e2d\u5b9a\u4e49\u4e86Index\u7c7b\u5904\u7406/index/\u8fd9\u6761\u8def\u7531\uff0c\u90a3\u4e48\u5bf9\u5e94\u7684\u8def\u7531\u5e94\u8be5\u8fd9\u6837\u5199\uff1a re_path('^index/$',views.Index.as_view()) CBV\u4e2d\u7684dispatch\u65b9\u6cd5 \u5728\u6267\u884cHttp\u65b9\u6cd5\uff08get\u3001post\u7b49\uff09\u4e4b\u524d\u4f1a\u5148\u6267\u884cdispatch\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u7ed3\u8bba\u4e00\u5b9a\u8981\u8bb0\u4f4f\uff01 \u6211\u4eec\u53ef\u4ee5\u5728Http\u65b9\u6cd5\u6267\u884c\u4e4b\u524d\u5728dispatch\u65b9\u6cd5\u4e2d\u5b9a\u5236\u4e00\u4e9b\u529f\u80fd\u3002 #\u89c6\u56fe\u51fd\u6570\u7684\u5199\u6cd5 from django.views import View class LoginView(View): #\u7ee7\u627fView # \u5148\u6267\u884cdispatch\u65b9\u6cd5\u518d\u6267\u884cget\u6216\u8005post\u65b9\u6cd5 def dispatch(self,request,*args,**kwargs) #\u6267\u884c\u7236\u7c7b\u7684dispatch\u65b9\u6cd5 ret = super().dispatch(request,*args,**kwargs) return ret #\u522b\u5fd8\u4e86return\u503c def get(self,request): #\u6839\u636e\u7528\u6237\u7684\u8bf7\u6c42\u65b9\u6cd5,\u627e\u5230\u5bf9\u5e94\u7684\u65b9\u6cd5 return render(request,'login.html') def post(self,request): print(request.POST) uname = request.POST.get('username') pwd = request.POST.get('password') if uname == 'chao' and pwd == '123': return render(request, 'home.html') return HttpResponse('\u7528\u6237\u540d\u6216\u8005\u5bc6\u7801\u9519\u8bef') \u7ed9FBV\u89c6\u56fe\u52a0\u88c5\u9970\u5668 FBV\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u6240\u4ee5\u548c\u7ed9\u666e\u901a\u7684\u51fd\u6570\u52a0\u88c5\u9970\u5668\u65e0\u5dee \u4e00\u5b9a\u8981\u8bb0\u5f97\uff0c\u88c5\u9970\u5668return func\u8fd4\u6267\u884c\u7684\u7ed3\u679c def wrapper(func): def inner(*args,**kwargs): print(123) ret = func(*args,**kwargs) print(456) #\u6ce8\u610f\u5fc5\u987breturn func\u6267\u884c\u7684\u7ed3\u679c\uff01 return ret return inner @wrapper def count_now(request): now_time = time.localtime() now_str = time.strftime('%Y-%m-%d %H:%M:%S',now_time) if request.method == 'GET': return render(request,'now.html',{'now_str':now_str}) \u7ed9CBV\u89c6\u56fe\u52a0\u88c5\u9970\u5668 \u7c7b\u4e2d\u7684\u65b9\u6cd5\u4e0e\u72ec\u7acb\u51fd\u6570\u4e0d\u5b8c\u5168\u76f8\u540c\uff0c\u56e0\u6b64\u4e0d\u80fd\u76f4\u63a5\u5c06\u51fd\u6570\u88c5\u9970\u5668\u5e94\u7528\u4e8e\u7c7b\u4e2d\u7684\u65b9\u6cd5 \uff0c\u6211\u4eec\u9700\u8981\u5148\u5c06\u5176\u8f6c\u6362\u4e3a\u65b9\u6cd5\u88c5\u9970\u5668\u3002 Django\u4e2d\u63d0\u4f9b\u4e86 method_decorator \u88c5\u9970\u5668\u7528\u4e8e\u5c06\u51fd\u6570\u88c5\u9970\u5668\u8f6c\u6362\u4e3a\u65b9\u6cd5\u88c5\u9970\u5668\u3002 \u6211\u4eec\u8fd8\u7528\u4e0a\u9762\u7684\u88c5\u9970\u5668\uff1a def wrapper(func): def inner(*args,**kwargs): print(123) ret = func(*args,**kwargs) print(456) #\u6ce8\u610f\u5fc5\u987breturn func\u6267\u884c\u7684\u7ed3\u679c\uff01 return ret return inner \u6ce8\u610f\uff0c\u5148\u5f15\u5165method_decorator\uff1a from django.utils.decorators import method_decorator \u65b9\u6cd5\u4e00 \u7ed9get\u6d3bpost\u65b9\u6cd5\u5355\u72ec\u52a0\uff1a class MyNow(View): name = 'wanghw' # \u5355\u72ec\u52a0\u88c5\u9970\u5668 @method_decorator(wrapper) def get(self,request): now_time = time.localtime() now_str = time.strftime('%Y-%m-%d %H:%M:%S',now_time) return render(request,'now.html',{'now_str':now_str,'name':self.name}) \u65b9\u6cd5\u4e8c \u7ed9dispatch\u65b9\u6cd5(\u5206\u53d1\u65b9\u6cd5)\u52a0\u3002 \u8fd9\u6837\u7684\u8bdd\u76f8\u5f53\u4e8e\u7ed9get\u6216post\u65b9\u6cd5\u90fd\u52a0\u4e0a\u4e86\u88c5\u9970\u5668 \u3002 class MyNow(View): name = 'wanghw' # \u8fd9\u6837\u76f8\u5f53\u4e8e\u7ed9\u4e0b\u9762\u7684http\u65b9\u6cd5\u90fd\u52a0\u4e86\u88c5\u9970\u5668 @method_decorator(wrapper) def dispatch(self, request, *args, **kwargs): print('before') obj = super().dispatch(request,*args,**kwargs) print('after') #\u6ce8\u610f\u8981return obj return obj def get(self,request): now_time = time.localtime() now_str = time.strftime('%Y-%m-%d %H:%M:%S',now_time) return render(request,'now.html',{'now_str':now_str,'name':self.name}) \u65b9\u6cd5\u4e09 \u4f7f\u7528\u201c\u88c5\u9970\u5668\u5d4c\u5957\u201d\u7ed9\u7c7b\u52a0\u2014\u2014name\u540e\u9762\u7684\u503c\u5fc5\u987b\u662f\u4e2a\u5b57\u7b26\u4e32\u3002 \u88c5\u9970\u5668\u53e0\u52a0\uff1a\u5185\u5c42\u88c5\u9970\u5668\u7684\u8fd4\u56de\u503c\u7ed9\u4e86\u5916\u5c42 @method_decorator(wrapper,name='get') @method_decorator(wrapper,name='post') class MyNow(View): name = 'wanghw' def get(self,request): now_time = time.localtime() now_str = time.strftime('%Y-%m-%d %H:%M:%S',now_time) return render(request,'now.html',{'now_str':now_str,'name':self.name}) def post(self,request): pass \u5173\u4e8ecsrf\u6821\u9a8c\u7684\u88c5\u9970\u5668\u5728CBV\u6a21\u5f0f\u4e0b\u7684\u4f7f\u7528 \u6ce8\u610f\uff1a CSRF Token\u76f8\u5173\u88c5\u9970\u5668\u5728CBV\u4e2d\u53ea\u80fd\u52a0\u5230dispatch\u65b9\u6cd5\u4e0a\uff0c\u6216\u8005\u52a0\u5728\u89c6\u56fe\u7c7b\u4e0a\u7136\u540ename\u53c2\u6570\u6307\u5b9a\u4e3adispatch\u65b9\u6cd5\uff01 csrf\u6821\u9a8c\u7684\u4e24\u4e2a\u88c5\u9970\u5668\u4e3a\uff1a csrf_protect\uff0c\u4e3a\u5f53\u524d\u51fd\u6570\u5f3a\u5236\u8bbe\u7f6e\u9632\u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020\u529f\u80fd\uff0c\u5373\u4fbfsettings\u4e2d\u6ca1\u6709\u8bbe\u7f6e\u5168\u5c40\u4e2d\u95f4\u4ef6\u3002 csrf_exempt\uff0c\u53d6\u6d88\u5f53\u524d\u51fd\u6570\u9632\u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020\u529f\u80fd\uff0c\u5373\u4fbfsettings\u4e2d\u8bbe\u7f6e\u4e86\u5168\u5c40\u4e2d\u95f4\u4ef6\u3002 \u5199\u6cd5\u4e00 from django.views.decorators.csrf import csrf_exempt, csrf_protect from django.utils.decorators import method_decorator class HomeView(View): # \u52a0\u5728dispatch\u65b9\u6cd5\u4e0a @method_decorator(csrf_exempt) def dispatch(self, request, *args, **kwargs): return super(HomeView, self).dispatch(request, *args, **kwargs) def get(self, request): return render(request, \"home.html\") def post(self, request): print(\"Home View POST method...\") return redirect(\"/index/\") \u5199\u6cd5\u4e8c from django.views.decorators.csrf import csrf_exempt, csrf_protect from django.utils.decorators import method_decorator # \u52a0\u5728\u7c7b\u4e0a\uff0c\u4f46\u662fname\u5fc5\u987b\u6307\u5b9a'dispatch' @method_decorator(csrf_exempt, name='dispatch') class HomeView(View): def dispatch(self, request, *args, **kwargs): return super(HomeView, self).dispatch(request, *args, **kwargs) def get(self, request): return render(request, \"home.html\") def post(self, request): print(\"Home View POST method...\") return redirect(\"/index/\")","title":"02 \u89c6\u56fe\u7cfb\u7edf"},{"location":"Django\u6838\u5fc3/\u89c6\u56fe\u7cfb\u7edf/#_1","text":"\u8bf7\u6c42\u5bf9\u8c61\u9700\u8981\u5927\u5bb6\u8bb0\u4f4f\u5e38\u7528\u7684\u65b9\u6cd5\u4e0e\u5c5e\u6027\u5c31\u53ef\u4ee5\u4e86\uff1a request.body # \u5f97\u5230\u7528\u6237\u63d0\u4ea4\u6570\u636e\u7684\u539f\u59cb\u6570\u636e\u7c7b\u578b\uff08bytes\u7c7b\u578b\u7684\u6570\u636e\uff09 b'username=chao&passowrd=123' request.method # \u8bf7\u6c42\u65b9\u5f0f\uff1aPOST\u3001GET\u7b49 request.GET # get\u8bf7\u6c42\u5bf9\u8c61\uff1arequest.GET.get(\"name\")\u83b7\u53d6get\u8bf7\u6c42\u7684\u53c2\u6570 request.POST # post\u8bf7\u6c42\u5bf9\u8c61 request.path # \u8bf7\u6c42\u8def\u5f84\uff1a127.0.0.1:8000/blog/index/\u6253\u5370\u51fa\u6765\u7684\u662f/blog/index/ request.path_info # \u4e0epath\u5c5e\u6027\u83b7\u53d6\u5230\u7684\u4fe1\u606f\u4e00\u6837 request.META # \u83b7\u53d6\u8bf7\u6c42\u5934\u7684\u5143\u4fe1\u606f request.META.get('HTTP_USER_AGENT') # \u62ff\u5230\u7684\u662f\u6d4f\u89c8\u5668\u7684\u4fe1\u606f\u2014\u2014\u6709\u4e9b\u7f51\u7ad9\u7684\u7684\u53cd\u722c\u673a\u5236\u5c31\u662f\u505a\u4e86user_agent\u7684\u9a8c\u8bc1 request.META.get('REMOTE_ADDR') # \u62ff\u5230\u7684\u662f\u5ba2\u6237\u7aef\u7684\u5730\u5740 request.get_full_path() # \u83b7\u53d6\u9664\u57df\u540d\u4e4b\u5916\u7684\u5168\u8def\u5f84,\u5305\u62ec\u8bf7\u6c42\u53c2\u6570:/blog/index/?a=1&b=2 request.is_ajax() # \u5224\u65ad\u8bf7\u6c42\u662f\u5426\u662fajax\u8bf7\u6c42\uff0c\u5efa\u8bae\u4e0d\u7528\u5b83\uff0cDjango3\u5df2\u53d6\u6d88\u4e86\u8fd9\u4e2a\u65b9\u6cd5","title":"\u8bf7\u6c42\u5bf9\u8c61"},{"location":"Django\u6838\u5fc3/\u89c6\u56fe\u7cfb\u7edf/#_2","text":"Django\u4e2d\u6709\u4e09\u4e2a\u54cd\u5e94\u5bf9\u8c61\uff1a HttpResponse \u3001 render \u3001 redirect \u3002 1\u3001HttpResponse HttpResponse()\u62ec\u53f7\u5185\u76f4\u63a5\u8ddf\u4e00\u4e2a\u5b57\u7b26\u4e32\u4f5c\u4e3a\u54cd\u5e94\u4f53\uff0c\u6bd4\u8f83\u7b80\u5355\u76f4\u63a5\uff0c\u6240\u4ee5\u8fd9\u91cc\u4e3b\u8981\u4ecb\u7ecd\u540e\u9762\u4e24\u79cd\u5f62\u5f0f 2\u3001render render\u65b9\u6cd5\u5c31\u662f\u5c06\u4e00\u4e2a\u6a21\u677f\u9875\u9762\u4e2d\u7684\u6a21\u677f\u8bed\u6cd5\u8fdb\u884c\u6e32\u67d3\uff0c\u6700\u7ec8\u6e32\u67d3\u6210\u4e00\u4e2ahtml\u9875\u9762\u4f5c\u4e3a\u54cd\u5e94\u4f53\u3002 \u8bed\u6cd5\uff1a return render(request, template_name[, context]) \u7ed3\u5408\u4e00\u4e2a\u7ed9\u5b9a\u7684\u6a21\u677f\u548c\u4e00\u4e2a\u7ed9\u5b9a\u7684\u4e0a\u4e0b\u6587\u5b57\u5178\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u6e32\u67d3\u540e\u7684 HttpResponse \u5bf9\u8c61\u3002 def index(request): import datetime n = datetime.datetime.now() now = n.strftime('%Y-%m-%d:%X') return render(request,'index.html',{'datetime':now}) \u53c2\u6570\uff1a (1)request\uff1a \u7528\u4e8e\u751f\u6210\u54cd\u5e94\u7684\u8bf7\u6c42\u5bf9\u8c61\u3002 (2)template_name\uff1a\u8981\u4f7f\u7528\u7684\u6a21\u677f\u7684\u5b8c\u6574\u540d\u79f0\uff0c\u53ef\u9009\u7684\u53c2\u6570 \u3002 (3)context\uff1a\u6dfb\u52a0\u5230\u6a21\u677f\u4e0a\u4e0b\u6587\u7684\u4e00\u4e2a\u5b57\u5178\u3002\u9ed8\u8ba4\u662f\u4e00\u4e2a\u7a7a\u5b57\u5178\u3002\u5982\u679c\u5b57\u5178\u4e2d\u7684\u67d0\u4e2a\u503c\u662f\u53ef\u8c03\u7528\u7684\uff0c\u89c6\u56fe\u5c06\u5728\u6e32\u67d3\u6a21\u677f\u4e4b\u524d\u8c03\u7528\u5b83\u3002 \u6ce8\u610f\uff1a \uff081\uff09\u6d4f\u89c8\u5668\u5e76\u4e0d\u8ba4\u8bc6\u6a21\u677f\u8bed\u6cd5\uff0crender\u65b9\u6cd5\u627e\u5230index.html\u6587\u4ef6\u4e4b\u540e\uff0c\u5b83\u5148\u68c0\u67e5\u91cc\u9762\u6709\u6ca1\u6709\u6a21\u677f\u8bed\u6cd5\uff0c\u5982\u679c\u6709\u6a21\u677f\u8bed\u6cd5\u5148\u5c06\u4f20\u5165\u7684\u503c\u505a\u66ff\u6362\uff0c\u5c06\u5b57\u5178\u7684key\u5bf9\u5e94\u7684value\u503cnow\u4f5c\u4e3a\u53c2\u6570\u4f20\u7ed9\u6d4f\u89c8\u5668\uff0c\u4f20\u5b8c\u53c2\u6570\u4e4b\u540eindex.html\u624d\u662f\u4e00\u4e2ahtml\u6587\u4ef6\u4e86\uff0c\u7136\u540erender\u518d\u5c06html\u6587\u4ef6\u90a3\u4e00\u5806\u4e1c\u897f\u4f20\u7ed9\u6d4f\u89c8\u5668\uff0c\u6240\u4ee5\u6d4f\u89c8\u6700\u540e\u663e\u793a\u7684\u662fnow\u7684\u503c\u3002 \uff082\uff09render\u5c06\u6a21\u677f\u8bed\u6cd5\u66ff\u6362\u6210\u5bf9\u5e94\u7684\u503c\u2014\u2014\u8fd9\u4e2a\u8fc7\u7a0b\u5341\u5206\u91cd\u8981\uff0c\u5982\u679cindex.html\u6587\u4ef6\u4e2d\u6709\u9700\u8981\u201c\u5d4c\u5165\u201d\u7684\u53c2\u6570\uff0c\u90a3render\u7684\u7b2c\u4e09\u4e2a\u53c2\u6570\u5f97\u52a0\uff0c\u5982\u679c\u53ea\u662f\u4e00\u4e2a\u201c\u9759\u6001\u9875\u9762\u201d\uff0c\u4e0d\u9700\u8981\u52a0render\u7684\u7b2c\u4e09\u4e2a\u53c2\u6570\u3002\u5bf9\u5e94\u7684templates\u6587\u4ef6\u4e2d\u7684index.html\u6587\u4ef6\u7684p\u6807\u7b7e\u8fd9\u6837\u5199\uff1a {{datetime}} \u6ce8\u610f\u6b64\u65f6\u5d4c\u5957\u4e86\u6a21\u677f\u8bed\u6cd5\u7684index.html\u6587\u4ef6\uff0c\u5728django\u4e2d\u79f0\u4e3a\u201c\u6a21\u677f\u6587\u4ef6\u201d\u3002 3\u3001redirect \u91cd\u5b9a\u5411\u8fd9\u4e2a\u7b80\u5355\uff0c\u53ef\u4ee5\u4f20\u9012\u4e00\u4e2a\u9700\u8981\u91cd\u5b9a\u5411\u7684\u786c\u7f16\u7801\u7684URL\uff1a def my_view(request): ... return redirect('/some/url/') \u5f53\u7136\u4e5f\u53ef\u4ee5\u4f20\u9012\u4e00\u4e2a\u5b8c\u6574\u7684URL\uff1a def my_view(request): ... return redirect('http://example.com/') \u91cd\u5b9a\u5411\u5e38\u89c1\u7684\u72b6\u6001\u7801\uff1a # 301\u548c302\u7684\u533a\u522b 301\u548c302\u72b6\u6001\u7801\u90fd\u8868\u793a\u91cd\u5b9a\u5411\uff0c\u5c31\u662f\u8bf4\u6d4f\u89c8\u5668\u5728\u62ff\u5230\u670d\u52a1\u5668\u8fd4\u56de\u7684\u8fd9\u4e2a\u72b6\u6001\u7801\u540e\u4f1a\u81ea\u52a8\u8df3\u8f6c\u5230\u4e00\u4e2a\u65b0\u7684URL\u5730\u5740\uff0c\u8fd9\u4e2a\u5730\u5740\u53ef\u4ee5\u4ece\u54cd\u5e94\u7684Location\u9996\u90e8\u4e2d\u83b7\u53d6\uff08\u7528\u6237\u770b\u5230\u7684\u6548\u679c\u5c31\u662f\u4ed6\u8f93\u5165\u7684\u5730\u5740A\u77ac\u95f4\u53d8\u6210\u4e86\u53e6\u4e00\u4e2a\u5730\u5740B\uff09\u2014\u2014\u8fd9\u662f\u5b83\u4eec\u7684\u5171\u540c\u70b9\u3002 \u4ed6\u4eec\u7684\u4e0d\u540c\u5728\u4e8e\uff1a301\u8868\u793a\u65e7\u5730\u5740A\u7684\u8d44\u6e90\u5df2\u7ecf\u88ab\u6c38\u4e45\u5730\u79fb\u9664\u4e86\uff08\u8fd9\u4e2a\u8d44\u6e90\u4e0d\u53ef\u8bbf\u95ee\u4e86\uff09\uff0c\u641c\u7d22\u5f15\u64ce\u5728\u6293\u53d6\u65b0\u5185\u5bb9\u7684\u540c\u65f6\u4e5f\u5c06\u65e7\u7684\u7f51\u5740\u4ea4\u6362\u4e3a\u91cd\u5b9a\u5411\u4e4b\u540e\u7684\u7f51\u5740\uff1b302\u8868\u793a\u65e7\u5730\u5740A\u7684\u8d44\u6e90\u8fd8\u5728\uff08\u4ecd\u7136\u53ef\u4ee5\u8bbf\u95ee\uff09\uff0c\u8fd9\u4e2a\u91cd\u5b9a\u5411\u53ea\u662f\u4e34\u65f6\u5730\u4ece\u65e7\u5730\u5740A\u8df3\u8f6c\u5230\u5730\u5740B\uff0c\u641c\u7d22\u5f15\u64ce\u4f1a\u6293\u53d6\u65b0\u7684\u5185\u5bb9\u800c\u4fdd\u5b58\u65e7\u7684\u7f51\u5740\u3002 \u5e38\u89c1\u91cd\u5b9a\u5411\u7684\u539f\u56e0\uff1a \uff081\uff09\u7f51\u7ad9\u8c03\u6574\uff08\u5982\u6539\u53d8\u7f51\u9875\u76ee\u5f55\u7ed3\u6784\uff09\u3002 \uff082\uff09\u7f51\u9875\u88ab\u79fb\u5230\u4e00\u4e2a\u65b0\u5730\u5740\u3002 \uff083\uff09\u7f51\u9875\u6269\u5c55\u540d\u6539\u53d8(\u5982\u5e94\u7528\u9700\u8981\u628a.php\u6539\u6210.Html\u6216.shtml)\u3002 \u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u4e0d\u505a\u91cd\u5b9a\u5411\uff0c\u5219\u7528\u6237\u6536\u85cf\u5939\u6216\u641c\u7d22\u5f15\u64ce\u6570\u636e\u5e93\u4e2d\u65e7\u5730\u5740\u53ea\u80fd\u8ba9\u8bbf\u95ee\u5ba2\u6237\u5f97\u5230\u4e00\u4e2a404\u9875\u9762\u9519\u8bef\u4fe1\u606f\uff0c\u8bbf\u95ee\u6d41\u91cf\u767d\u767d\u4e27\u5931\uff1b\u518d\u8005\u67d0\u4e9b\u6ce8\u518c\u4e86\u591a\u4e2a\u57df\u540d\u7684\u7f51\u7ad9\uff0c\u4e5f\u9700\u8981\u901a\u8fc7\u91cd\u5b9a\u5411\u8ba9\u8bbf\u95ee\u8fd9\u4e9b\u57df\u540d\u7684\u7528\u6237\u81ea\u52a8\u8df3\u8f6c\u5230\u4e3b\u7ad9\u70b9\u7b49\u3002","title":"\u54cd\u5e94\u5bf9\u8c61"},{"location":"Django\u6838\u5fc3/\u89c6\u56fe\u7cfb\u7edf/#fbvcbv","text":"FBV\uff08function base views\uff09 \u5c31\u662f\u5728\u89c6\u56fe\u91cc\u4f7f\u7528\u51fd\u6570\u5904\u7406\u8bf7\u6c42\u3002 \u4e4b\u524d\u7684\u4f8b\u5b50\u90fd\u662f\u57fa\u4e8eFBV\u6a21\u5f0f\u5199\u7684\u4ee3\u7801\u3002 CBV\uff08class base views\uff09\u5c31\u662f\u5728\u89c6\u56fe\u91cc\u4f7f\u7528\u7c7b\u5904\u7406\u8bf7\u6c42\u3002Python\u662f\u4e00\u4e2a\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u5982\u679c\u53ea\u7528\u51fd\u6570\u6765\u5f00\u53d1\uff0c\u6709\u5f88\u591a\u9762\u5411\u5bf9\u8c61\u7684\u4f18\u70b9\u5c31\u9519\u5931\u4e86\uff08\u7ee7\u627f\u3001\u5c01\u88c5\u3001\u591a\u6001\uff09\u3002 \u6240\u4ee5Django\u5728\u540e\u6765\u52a0\u5165\u4e86Class-Based-View\u3002\u53ef\u4ee5\u8ba9\u6211\u4eec\u7528\u7c7b\u5199View\u3002 \u8fd9\u6837\u505a\u7684\u4f18\u70b9\u4e3b\u8981\u4e0b\u9762\u4e24\u4e2a\u65b9\u9762\uff1a \u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u590d\u7528\u6027\uff0c\u53ef\u4ee5\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u7684\u6280\u672f\uff0c\u6bd4\u5982Mixin\uff08\u591a\u7ee7\u627f\uff09\u3002 \u53ef\u4ee5\u7528\u4e0d\u540c\u7684\u51fd\u6570\u9488\u5bf9\u4e0d\u540c\u7684HTTP\u65b9\u6cd5\u5904\u7406\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u5f88\u591aif\u5224\u65ad\uff0c\u63d0\u9ad8\u4ee3\u7801\u53ef\u8bfb\u6027\u3002 \u4e0b\u9762\u4e3b\u8981\u4ecb\u7ecd\u4e00\u4e0bFBV\u4e0eCBV\u7684\u533a\u522b\u3002 \u5982\u679c\u6211\u4eec\u8981\u5199\u4e00\u4e2a\u5904\u7406GET\u65b9\u6cd5\u7684view\uff1a \u7528\u51fd\u6570\u5199\u7684\u8bdd\u662f\u4e0b\u9762\u8fd9\u6837: #\u8def\u7531\u4e2d\uff1a url('^now$',views.count_now) #\u89c6\u56fe\u51fd\u6570\u4e2d\uff1a def count_now(request): now_time = time.localtime() now_str = time.strftime('%Y-%m-%d %H:%M:%S',now_time) if request.method == 'GET': return render(request,'now.html',{'now_str':now_str}) \u5982\u679c\u7528\u7c7b\u5904\u7406\u7684\u8bdd\u662f\u8fd9\u6837: #\u8def\u7531\u4e2d\uff1a url('^now$',views.MyNow.as_view()) #\u89c6\u56fe\u51fd\u6570\u4e2d from django.views import View class MyNow(View): # get\u65b9\u6cd5\u5904\u7406get\u8bf7\u6c42 def get(self,request): now_time = time.localtime() now_str = time.strftime('%Y-%m-%d %H:%M:%S',now_time) return render(request,'now.html',{'now_str':now_str}) CBV\u4e2d\u6dfb\u52a0\u7c7b\u7684\u5c5e\u6027 \u65b9\u6cd5\u4e00\uff1a\u4f7f\u7528Python\u65b9\u6cd5\uff0c\u53ef\u4ee5\u88ab\u5b50\u7c7b\u8986\u76d6\uff1a class MyNow(View): name = 'wanghw' def get(self,request): now_time = time.localtime() now_str = time.strftime('%Y-%m-%d %H:%M:%S',now_time) return render(request,'now.html',{'now_str':now_str,'name':self.name}) \u65b9\u6cd5\u4e8c\uff1a\u53ef\u4ee5\u5728url\u4e2d\u6307\u5b9a\u7c7b\u7684\u5c5e\u6027 urlpatterns = [ path('admin/', admin.site.urls), re_path('^now/$',views.MyNow.as_view(name='whw')) # \u7c7b\u91cc\u9762\u5fc5\u987b\u6709name\u5c5e\u6027\uff0c\u5e76\u4e14\u4f1a\u88ab\u4f20\u8fdb\u6765\u7684\u8fd9\u4e2a\u5c5e\u6027\u503c\u7ed9\u8986\u76d6\u6389 ] \u6ce8\u610f\uff1a\u6700\u7ec8name\u5c5e\u6027\u7684\u503c\u662furl\u91cc\u9762\u4f20\u8fdb\u53bb\u7684\u503c whw","title":"FBV\u4e0eCBV"},{"location":"Django\u6838\u5fc3/\u89c6\u56fe\u7cfb\u7edf/#cbv","text":"\u5982\u679c\u5728\u89c6\u56fe\u4e2d\u5b9a\u4e49\u4e86Index\u7c7b\u5904\u7406/index/\u8fd9\u6761\u8def\u7531\uff0c\u90a3\u4e48\u5bf9\u5e94\u7684\u8def\u7531\u5e94\u8be5\u8fd9\u6837\u5199\uff1a re_path('^index/$',views.Index.as_view())","title":"CBV\u8def\u7531\u7684\u5199\u6cd5"},{"location":"Django\u6838\u5fc3/\u89c6\u56fe\u7cfb\u7edf/#cbvdispatch","text":"\u5728\u6267\u884cHttp\u65b9\u6cd5\uff08get\u3001post\u7b49\uff09\u4e4b\u524d\u4f1a\u5148\u6267\u884cdispatch\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u7ed3\u8bba\u4e00\u5b9a\u8981\u8bb0\u4f4f\uff01 \u6211\u4eec\u53ef\u4ee5\u5728Http\u65b9\u6cd5\u6267\u884c\u4e4b\u524d\u5728dispatch\u65b9\u6cd5\u4e2d\u5b9a\u5236\u4e00\u4e9b\u529f\u80fd\u3002 #\u89c6\u56fe\u51fd\u6570\u7684\u5199\u6cd5 from django.views import View class LoginView(View): #\u7ee7\u627fView # \u5148\u6267\u884cdispatch\u65b9\u6cd5\u518d\u6267\u884cget\u6216\u8005post\u65b9\u6cd5 def dispatch(self,request,*args,**kwargs) #\u6267\u884c\u7236\u7c7b\u7684dispatch\u65b9\u6cd5 ret = super().dispatch(request,*args,**kwargs) return ret #\u522b\u5fd8\u4e86return\u503c def get(self,request): #\u6839\u636e\u7528\u6237\u7684\u8bf7\u6c42\u65b9\u6cd5,\u627e\u5230\u5bf9\u5e94\u7684\u65b9\u6cd5 return render(request,'login.html') def post(self,request): print(request.POST) uname = request.POST.get('username') pwd = request.POST.get('password') if uname == 'chao' and pwd == '123': return render(request, 'home.html') return HttpResponse('\u7528\u6237\u540d\u6216\u8005\u5bc6\u7801\u9519\u8bef')","title":"CBV\u4e2d\u7684dispatch\u65b9\u6cd5"},{"location":"Django\u6838\u5fc3/\u89c6\u56fe\u7cfb\u7edf/#fbv","text":"FBV\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u6240\u4ee5\u548c\u7ed9\u666e\u901a\u7684\u51fd\u6570\u52a0\u88c5\u9970\u5668\u65e0\u5dee \u4e00\u5b9a\u8981\u8bb0\u5f97\uff0c\u88c5\u9970\u5668return func\u8fd4\u6267\u884c\u7684\u7ed3\u679c def wrapper(func): def inner(*args,**kwargs): print(123) ret = func(*args,**kwargs) print(456) #\u6ce8\u610f\u5fc5\u987breturn func\u6267\u884c\u7684\u7ed3\u679c\uff01 return ret return inner @wrapper def count_now(request): now_time = time.localtime() now_str = time.strftime('%Y-%m-%d %H:%M:%S',now_time) if request.method == 'GET': return render(request,'now.html',{'now_str':now_str})","title":"\u7ed9FBV\u89c6\u56fe\u52a0\u88c5\u9970\u5668"},{"location":"Django\u6838\u5fc3/\u89c6\u56fe\u7cfb\u7edf/#cbv_1","text":"\u7c7b\u4e2d\u7684\u65b9\u6cd5\u4e0e\u72ec\u7acb\u51fd\u6570\u4e0d\u5b8c\u5168\u76f8\u540c\uff0c\u56e0\u6b64\u4e0d\u80fd\u76f4\u63a5\u5c06\u51fd\u6570\u88c5\u9970\u5668\u5e94\u7528\u4e8e\u7c7b\u4e2d\u7684\u65b9\u6cd5 \uff0c\u6211\u4eec\u9700\u8981\u5148\u5c06\u5176\u8f6c\u6362\u4e3a\u65b9\u6cd5\u88c5\u9970\u5668\u3002 Django\u4e2d\u63d0\u4f9b\u4e86 method_decorator \u88c5\u9970\u5668\u7528\u4e8e\u5c06\u51fd\u6570\u88c5\u9970\u5668\u8f6c\u6362\u4e3a\u65b9\u6cd5\u88c5\u9970\u5668\u3002 \u6211\u4eec\u8fd8\u7528\u4e0a\u9762\u7684\u88c5\u9970\u5668\uff1a def wrapper(func): def inner(*args,**kwargs): print(123) ret = func(*args,**kwargs) print(456) #\u6ce8\u610f\u5fc5\u987breturn func\u6267\u884c\u7684\u7ed3\u679c\uff01 return ret return inner \u6ce8\u610f\uff0c\u5148\u5f15\u5165method_decorator\uff1a from django.utils.decorators import method_decorator \u65b9\u6cd5\u4e00 \u7ed9get\u6d3bpost\u65b9\u6cd5\u5355\u72ec\u52a0\uff1a class MyNow(View): name = 'wanghw' # \u5355\u72ec\u52a0\u88c5\u9970\u5668 @method_decorator(wrapper) def get(self,request): now_time = time.localtime() now_str = time.strftime('%Y-%m-%d %H:%M:%S',now_time) return render(request,'now.html',{'now_str':now_str,'name':self.name}) \u65b9\u6cd5\u4e8c \u7ed9dispatch\u65b9\u6cd5(\u5206\u53d1\u65b9\u6cd5)\u52a0\u3002 \u8fd9\u6837\u7684\u8bdd\u76f8\u5f53\u4e8e\u7ed9get\u6216post\u65b9\u6cd5\u90fd\u52a0\u4e0a\u4e86\u88c5\u9970\u5668 \u3002 class MyNow(View): name = 'wanghw' # \u8fd9\u6837\u76f8\u5f53\u4e8e\u7ed9\u4e0b\u9762\u7684http\u65b9\u6cd5\u90fd\u52a0\u4e86\u88c5\u9970\u5668 @method_decorator(wrapper) def dispatch(self, request, *args, **kwargs): print('before') obj = super().dispatch(request,*args,**kwargs) print('after') #\u6ce8\u610f\u8981return obj return obj def get(self,request): now_time = time.localtime() now_str = time.strftime('%Y-%m-%d %H:%M:%S',now_time) return render(request,'now.html',{'now_str':now_str,'name':self.name}) \u65b9\u6cd5\u4e09 \u4f7f\u7528\u201c\u88c5\u9970\u5668\u5d4c\u5957\u201d\u7ed9\u7c7b\u52a0\u2014\u2014name\u540e\u9762\u7684\u503c\u5fc5\u987b\u662f\u4e2a\u5b57\u7b26\u4e32\u3002 \u88c5\u9970\u5668\u53e0\u52a0\uff1a\u5185\u5c42\u88c5\u9970\u5668\u7684\u8fd4\u56de\u503c\u7ed9\u4e86\u5916\u5c42 @method_decorator(wrapper,name='get') @method_decorator(wrapper,name='post') class MyNow(View): name = 'wanghw' def get(self,request): now_time = time.localtime() now_str = time.strftime('%Y-%m-%d %H:%M:%S',now_time) return render(request,'now.html',{'now_str':now_str,'name':self.name}) def post(self,request): pass","title":"\u7ed9CBV\u89c6\u56fe\u52a0\u88c5\u9970\u5668"},{"location":"Django\u6838\u5fc3/\u89c6\u56fe\u7cfb\u7edf/#csrfcbv","text":"\u6ce8\u610f\uff1a CSRF Token\u76f8\u5173\u88c5\u9970\u5668\u5728CBV\u4e2d\u53ea\u80fd\u52a0\u5230dispatch\u65b9\u6cd5\u4e0a\uff0c\u6216\u8005\u52a0\u5728\u89c6\u56fe\u7c7b\u4e0a\u7136\u540ename\u53c2\u6570\u6307\u5b9a\u4e3adispatch\u65b9\u6cd5\uff01 csrf\u6821\u9a8c\u7684\u4e24\u4e2a\u88c5\u9970\u5668\u4e3a\uff1a csrf_protect\uff0c\u4e3a\u5f53\u524d\u51fd\u6570\u5f3a\u5236\u8bbe\u7f6e\u9632\u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020\u529f\u80fd\uff0c\u5373\u4fbfsettings\u4e2d\u6ca1\u6709\u8bbe\u7f6e\u5168\u5c40\u4e2d\u95f4\u4ef6\u3002 csrf_exempt\uff0c\u53d6\u6d88\u5f53\u524d\u51fd\u6570\u9632\u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020\u529f\u80fd\uff0c\u5373\u4fbfsettings\u4e2d\u8bbe\u7f6e\u4e86\u5168\u5c40\u4e2d\u95f4\u4ef6\u3002 \u5199\u6cd5\u4e00 from django.views.decorators.csrf import csrf_exempt, csrf_protect from django.utils.decorators import method_decorator class HomeView(View): # \u52a0\u5728dispatch\u65b9\u6cd5\u4e0a @method_decorator(csrf_exempt) def dispatch(self, request, *args, **kwargs): return super(HomeView, self).dispatch(request, *args, **kwargs) def get(self, request): return render(request, \"home.html\") def post(self, request): print(\"Home View POST method...\") return redirect(\"/index/\") \u5199\u6cd5\u4e8c from django.views.decorators.csrf import csrf_exempt, csrf_protect from django.utils.decorators import method_decorator # \u52a0\u5728\u7c7b\u4e0a\uff0c\u4f46\u662fname\u5fc5\u987b\u6307\u5b9a'dispatch' @method_decorator(csrf_exempt, name='dispatch') class HomeView(View): def dispatch(self, request, *args, **kwargs): return super(HomeView, self).dispatch(request, *args, **kwargs) def get(self, request): return render(request, \"home.html\") def post(self, request): print(\"Home View POST method...\") return redirect(\"/index/\")","title":"\u5173\u4e8ecsrf\u6821\u9a8c\u7684\u88c5\u9970\u5668\u5728CBV\u6a21\u5f0f\u4e0b\u7684\u4f7f\u7528"},{"location":"Django\u6838\u5fc3/\u8def\u7531/","text":"\u5f53\u524d\u7aef\u8bf7\u6c42\u7ecf\u8fc7WSGI\u4e0e\u4e2d\u95f4\u4ef6\u7684\u5904\u7406\u540e\uff0c\u5230\u8fbeDjango\u7684url\u63a7\u5236\u5668\u8fdb\u884c\u8def\u5f84\u5339\u914d\u3002\u5982\u679c\u8def\u5f84\u5339\u914d\u6210\u529furl\u63a7\u5236\u5668\u4f1a\u6307\u5b9a\u5bf9\u5e94\u7684\u89c6\u56fe\u51fd\u6570\u8fdb\u884c\u903b\u8f91\u5904\u7406\uff0c\u5982\u679c\u8def\u5f84\u5339\u914d\u4e0d\u6210\u529f\u4f1a\u8fd4\u56de 404\u9519\u8bef \u7ed9\u524d\u7aef\u3002 \u5206\u7ec4\u7684\u6982\u5ff5 \u8def\u7531\u63a7\u5236\u5668\u4e2d\u901a\u8fc7 \u5206\u7ec4 \u5c06url\u5339\u914d\u5230\u7684\u6570\u636e\u4f20\u7ed9\u89c6\u56fe\u51fd\u6570\u5904\u7406\u3002 Django\u8def\u7531\u63a7\u5236\u5668\u4e2d\u7684\u5206\u7ec4\u5305\u62ec \u65e0\u540d\u5206\u7ec4 \u4e0e \u6709\u540d\u5206\u7ec4 \u3002 \u65e0\u540d\u5206\u7ec4 \u50cf\u8fd9\u79cd\u5f62\u5f0f\u7684\u8def\u7531\u5339\u914d\u7684\u683c\u5f0f\u5c31\u662f\u65e0\u540d\u5206\u7ec4\uff1a re_path(r'^articles/([0-9]{4})/([0-9]{2})/$',views.month_archive) \u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff1a\u5982\u679c\u4f7f\u7528\u65e0\u540d\u5206\u7ec4\u53bb\u83b7\u53d6url\u4e2d\u7684\u6570\u636e\uff0c\u89c6\u56fe\u51fd\u6570\u4e2d\u7684\u53c2\u6570\u662f\u6709\u987a\u5e8f\u7684\uff0c\u89c6\u56fe\u51fd\u6570\u4e2d\u53c2\u6570\u7684\u987a\u5e8f\u5c31\u662f\u4f20\u5165\u53c2\u6570\u7684\u987a\u5e8f\uff1a # \u7b2c\u4e00\u4e2a\u53c2\u6570\u6c38\u8fdc\u662frequest # year\u63a5\u6536\u7684\u662f[0-9]{4}\u8fd9\u4e2a\u89c4\u5219\u5339\u914d\u5230\u7684\u6570\u636e\uff0cmonth\u63a5\u6536\u7684\u662f[0-9]{2}\u8fd9\u4e2a\u89c4\u5219\u5339\u914d\u5230\u7684\u6570\u636e def month_archive(request,year,month): print(year) print(month) xxx \u6709\u540d\u5206\u7ec4 \u4f7f\u7528\u6709\u540d\u5206\u7ec4\u7684\u65b9\u5f0f\u5982\u4e0b\uff1a re_path(r'^articles/(?P<year>[0-9]{4})/(?P<month>[0-9]{2})/$',views.month_archive) \u4f7f\u7528\u6709\u540d\u5206\u7ec4\u7684\u8bdd\u89c6\u56fe\u51fd\u6570\u63a5\u6536\u53c2\u6570\u7684\u65f6\u5019\u53ea\u9700\u8981\u6307\u5b9a\u5bf9\u5e94\u53d8\u91cf\u7684\u540d\u5b57\u5c31\u597d\u4e86\uff1a # \u4e0d\u7ba1year\u4e0emonth\u7684\u4f4d\u7f6e\u600e\u4e48\u53d8\uff0cmonth\u6c38\u8fdc\u62ff\u5230\u7684\u662f([0-9]{2})\u5339\u914d\u5230\u7684\u6570\u636e\uff0c # year\u6c38\u8fdc\u62ff\u5230\u7684\u662f([0-9]{4})\u5339\u914d\u5230\u7684\u6570\u636e def month_archive(request,month,year): print(year) print(month) xxx \u8def\u7531\u7ed9\u89c6\u56fe\u4f20\u53c2\u7684\u53e6\u5916\u4e00\u79cd\u65b9\u5f0f \u4e4b\u524d\u505a\u9879\u76ee\u7684\u65f6\u5019\u53d1\u73b0\u8def\u7531\u8fd8\u53ef\u4ee5\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u7ed9\u89c6\u56fe\u4f20\u53c2\uff1a re_path('^index/(?P<year>[0-9]{4})/(?P<month>[0-9]{2})/$',views.index,{\"name\":\"whw\",\"age\":18}), \u8bbf\u95ee: http://127.0.0.1:8001/index/2000/12 \u89c6\u56fe\u51fd\u6570\u4e2d\u7684\u60c5\u51b5\u5982\u4e0b\uff1a def index(request,name,age,month,year): print(month) # 12 print(year) # 2000 print(name) # whw print(age) # 18 xxx \u8def\u7531\u5206\u53d1 \u8def\u7531\u7684\u5206\u53d1\u5176\u5b9e\u76f8\u5f53\u4e8e\u7a0b\u5e8f\u7684 \u89e3\u8026 \uff0c\u5c06\u4e0d\u540c\u5e94\u7528\u7684\u8def\u7531\u5199\u5728\u81ea\u5df1\u7684app\u91cc\u9762\u5c31\u597d\u4e86\uff0c\u9879\u76ee\u7684 \u603b\u8def\u7531 \u53ea\u8d1f\u8d23\u5c06\u4e0d\u540c\u5e94\u7528\u7684url \u5206\u53d1 \u5230\u76f8\u5e94\u7684\u5e94\u7528\u4e2d\u5373\u53ef\u3002 \u5047\u8bbe\u6211\u4eec\u5728\u9879\u76ee\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3a blog \u7684\u5e94\u7528\uff0c\u5728\u8fd9\u4e2aapp\u4e2d\u521b\u5efa\u4e00\u4e2a urls.py \u6587\u4ef6\u4f5c\u4e3a\u5e94\u7528\u5206\u53d1\u7684\u8def\u7531\u3002 \u6211\u4eec\u9700\u8981\u5728\u4e0e\u9879\u76ee\u540c\u540d\u7684\u90a3\u4e2a\u76ee\u5f55\u7684urls.py\u6587\u4ef6\u4e2d\u505a\u4e00\u4e0b\u5206\u53d1\uff1a #\u5f15\u5165include from django.urls import path,re_path,include #\u5728urlpatterns\u5217\u8868\u4e2d\u52a0\u4e0b\u9762\u8fd9\u6bb5\u201c\u5206\u53d1\u201d\u7684\u4ee3\u7801\uff1a #\u5199\u6cd5\u4e00\uff1a #\u5982\u679c\u8fd9\u6837\u5199\u7684\u8bdd\uff0c\u6211\u4eec\u5728\u8bbf\u95ee\u7684\u65f6\u5019\u662f\u8fd9\u6837\u7684:http://127.0.0.1:8000/blog/login/ #\u4e5f\u5c31\u662f\u8bf4\uff0c\u60f3\u8981\u8bbf\u95eeblog\u7684\u5185\u5bb9 http://127.0.0.1:8000/blog/ \u662f\u5fc5\u4e0d\u53ef\u5c11\u7684 #\u6ce8\u610f\u8fd9\u91ccblog\u540e\u9762\u7684'/'\u5fc5\u987b\u5f97\u52a0 re_path(r'blog/',include('blog.url') #\u5199\u6cd5\u4e8c\uff1a #\u4f46\u662f\u5982\u679c\u6211\u4eec\u8fd9\u6837\u5199\uff0c\u8bbf\u95eeblog\u91cc\u7684\u4ee3\u7801\u5c31\u4e0d\u7528\u52a0blog\u4e86\uff1ahttp://127.0.0.1:8000/login/ #\u6ce8\u610f\u8fd9\u91cc^\u540e\u9762\u4e0d\u52a0\u2018/\u2019 re_path(r'^',include('blog.urls')) \u5728blog\u5e94\u7528\u4e2d\u7684urls.py\u4e2d\u52a0\u5165\u81ea\u5df1\u7684\u8def\u7531\u5339\u914d\uff1a #\u5c06\u4e4b\u524d\u5168\u5c40\u7684\u6709\u5173blog\u91cc\u9762\u7684views.py\u6587\u4ef6\u7684\u51fd\u6570\u7684\u64cd\u4f5c\u90fd\u653e\u5230blog\u91cc\u7684urls.py\u6587\u4ef6\u4e2d\uff1a from django.urls import path,re_path from blog import views urlpatterns = [ path('login/',views.login), #\u8def\u7531\u914d\u7f6e\u2014\u2014\u2014\u2014\u54ea\u4e00\u4e2a\u8def\u5f84\u7531\u54ea\u4e00\u4e2a\u89c6\u56fe\u51fd\u6570\u53bb\u5904\u7406 #\u8c03\u7528\u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u4f20\u4e00\u4e2arequest\u53c2\u6570\uff0c\u5982special_case_2003(request) re_path(r'^articles/2003/$',views.special_care_2003), #\u4e0b\u9762\u7684\u6548\u679c\u8ddf\u4e0a\u9762\u4e00\u6837\uff0c\u53ea\u4e0d\u8fc7\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5339\u914d\u65b9\u5f0f\u4e0d\u540c\uff0c\u9700\u8981\u7684\u51fd\u6570\u8fd8\u662f\u5199\u5728blog\u7684views.py\u6587\u4ef6\u4e2d # \u6ce8\u610f\u8fd9\u4e00\u4e2a\uff0c\u6709\u5206\u7ec4\u7684\u8bdd\u9700\u8981\u5728views.py\u6587\u4ef6\u7684\u76f8\u5e94\u7684\u51fd\u6570\u4e2d\u591a\u52a0\u4e00\u4e2a\u53c2\u6570\uff1a re_path(r'^articles/([0-9]{4})/$',views.year_archive), #\u6709\u4e24\u4e2a\u5206\u7ec4\u9700\u8981\u5728views.py\u7684\u76f8\u5e94\u7684\u51fd\u6570\u4e2d\u591a\u52a0\u4e24\u4e2a\u53c2\u6570\uff1a re_path(r'^articles/([0-9]{4})/([0-9]{2})$',views.month_archive), #\u6709\u540d\u5206\u7ec4 re_path(r'^articles/(?P<str_2>[a-z]{2})/(?P<str_1>[a-z]{1})/$',views.str_name1) ] \u53cd\u5411\u89e3\u6790 \u5f53\u524d\u7aef\u6a21\u677f\uff08\u63d0\u4ea4\u8bf7\u6c42\uff09\u4e0e\u89c6\u56fe\u903b\u8f91\uff08\u505a\u91cd\u5b9a\u5411\uff09\u9700\u8981\u7528\u5230\u4f20\u6765\u7684url\u65f6\uff0c\u5c06\u6574\u4e2aurl\u5f53\u4f5c\u53c2\u6570\u5e76\u4e0d\u662f\u5f88\u65b9\u4fbf\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u8def\u7531\u4e2d\u4e3a\u6bcf\u6761url\u8bbe\u7f6e \u522b\u540d \uff0c\u5176\u4ed6\u5730\u65b9\u9700\u8981\u4f7f\u7528\u8fd9\u6761url\u65f6\u53ea\u9700\u8981\u4f7f\u7528\u8fd9\u4e2a\u522b\u540d\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u5c31\u662f\u53cd\u5411\u89e3\u6790\u7684\u4f5c\u7528\u3002 \u8def\u7531\u4e2d \u8bbe\u7f6e\u522b\u540d \u7684\u65b9\u6cd5 \u2014\u2014 \u53ea\u9700\u8981\u5728\u89c6\u56fe\u7684\u540e\u9762\u52a0\u4e0a name=\u522b\u540d \u5373\u53ef re_path('^login/$',views.login,name=\"login\"), re_path('^index/$',views.index,name=\"index\"), \u53cd\u5411\u89e3\u6790\u5728\u89c6\u56fe\u4e2d\u7684\u4f7f\u7528 \u57fa\u672c\u90fd\u662f\u505a\u91cd\u5b9a\u5411\u7528\u7684\uff1a from django.shortcuts import render,redirect def index(request): xxx # \u903b\u8f91\u5904\u7406\u5931\u8d25\u540e\u91cd\u5b9a\u5411\u5230\u767b\u5f55\u9875\u9762 return redirect(\"login\") \u89c6\u56fe\u4e2d\u5904\u7406\u4e0d\u5e26\u5206\u7ec4\u7684\u8def\u7531\u522b\u540d \u5f53\u7136\u89c6\u56fe\u4e2d\u4e5f\u53ef\u4ee5 \u901a\u8fc7\u522b\u540d\u627e\u5230\u4f20\u8fc7\u6765\u7684url : \u8def\u7531\u4e3a\uff1a re_path(r'^articles/2003/$',views.special_care_2003,name='s_c_2003'), \u5bf9\u5e94\u7684\u89c6\u56fe\uff1a # \u5f15\u5165reverse from django.urls import reverse def special_care_2003(request): url = reverse('s_c_2003') print(url)#\u524d\u9762\u8bbe\u7f6e\u7684\u8def\u7531 /articles/2003/ return HttpResponse('\u54c8\u54c8! 2003') \u89c6\u56fe\u4e2d\u5904\u7406\u5e26\u5206\u7ec4\u7684\u8def\u7531\u522b\u540d \u5206\u7ec4\u7684\u8def\u7531\u4e3a\uff1a re_path('^index/(?P<year>[0-9]{4})/(?P<month>[0-9]{2})/$',views.index,name=\"index\"), \u89c6\u56fe\u5904\u7406\u903b\u8f91\uff1a from django.urls import reverse def index(request,month,year): print(month) # 12 print(year) # 2000 # \u6709\u5206\u7ec4\u7684reverse\u7684\u7528\u6cd5\uff01 url = reverse(\"index\", args=(year,month)) print(url) # /index/2000/12/ xxx \u53cd\u5411\u89e3\u6790\u5728\u6a21\u677f\u4e2d\u7684\u4f7f\u7528 \u6211\u4eec\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u767b\u9646\u903b\u8f91\uff0c\u8def\u7531\u5982\u4e0b re_path('^login/$',views.login,name=\"LOG\"), \u6a21\u677f\u6587\u4ef6\u5982\u4e0b <form action=\"{% url 'LOG' %}\" method=\"post\"> {# csrf\u6821\u9a8c #} {% csrf_token %} \u7528\u6237\u540d: <input type=\"text\" name=\"user\" > \u5bc6\u7801: <input type=\"password\" name=\"pwd\"> <input type=\"submit\"> </form> \u5176\u5b9e\u8fd9\u91cc\u7684action\u6307\u5411\u7684\u662f http://127.0.0.1:8000/login/ \u8fd9\u6761\u8def\u7531\u3002 {% url '\u522b\u540d' %} \u662f\u53cd\u5411\u89e3\u6790\u7684\u8bed\u6cd5 \u53cd\u5411\u89e3\u6790\u7684\u767b\u9646\u8ba4\u8bc1\u5b9e\u4f8b \u62ff\u4e0a\u9762\u7684\u767b\u9646\u8def\u7531\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u5b9e\u4f8b\u3002 \u8fd8\u662f\u90a3\u6761\u8def\u7531\uff1a re_path('^login/$',views.login,name=\"LOG\"), \u6a21\u677f\u4e2d\u7684\u5185\u5bb9\u5982\u4e0b\uff1a <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <link rel=\"stylesheet\" href=\"/static/whw1.css\"> </head> <body> <form action=\"{% url 'LOG' %} method=\"post\"> \u7528\u6237\u540d: <input type=\"text\" name=\"user\" > \u5bc6\u7801: <input type=\"password\" name=\"pwd\"> <input type=\"submit\"> </form> </body> </html> \u89c6\u56fe\u51fd\u6570\u7684\u5185\u5bb9\u5982\u4e0b\uff1a from django.shortcuts import render, HttpResponse # \u6ce8\u610f\u8fd9\u4e2a\u51fd\u6570\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u5f62\u53c2 request def login(request): # \u5982\u679c\u662fGET\u8bf7\u6c42\u5219\u8fd4\u56de\u5f53\u524d\u9875\u9762 if request.method == 'GET': print('GET\u8bf7\u6c42\u7684\u6570\u636e:', request.GET) # \u8fd9\u4e2a\u51fd\u6570\u5fc5\u987b\u5f97\u6709return\uff0c\u800c\u4e14\u662f\u5229\u7528render\u6e32\u67d3... return render(request, 'login.html') # \u5982\u679c\u662fPOST\u8bf7\u6c42\u65b9\u5f0f\u5219\u505a\u6821\u9a8c elif request.method == 'POST': print('POST\u8bf7\u6c42\u7684\u6570\u636e:', request.POST) # \u6ce8\u610f\uff1a # request.POST\u5b58\u7684\u662fform\u8868\u5355\u4e2dname\u503c\u4f5c\u4e3akey\u81ea\u5df1\u8f93\u5165\u7684\u503c\u4f5c\u4e3avalue\u7684\u5b57\u5178\uff01 user = request.POST.get('user') # \u8fd9\u91cc\u7684user\u4e0eform\u8868\u5355\u4e2d\u7684name\u503c\u5bf9\u5e94 pwd = request.POST.get('pwd') # \u8fd9\u91cc\u7684pwd\u4e0eform\u8868\u5355\u4e2d\u7684name\u503c\u5bf9\u5e94 # \u8fd9\u91cc\u53ef\u4ee5\u7528\u6570\u636e\u5e93\u64cd\u4f5c\u4ee3\u66ff\uff1a\uff1a\uff1a if user == 'whw' and pwd == '123': return HttpResponse('OK!') else: return HttpResponse('ERROR!') \u5904\u7406\u5e26\u53c2\u6570\u7684\u53cd\u5411\u89e3\u6790 \u5b9e\u9645\u4e2d\uff0c\u6211\u4eec\u5728\u5229\u7528ajax\u7ed9\u540e\u53f0\u4f20\u5165\u4e00\u4e2aurl\u65f6\u4f1a\u5e26\u7740\u53c2\u6570\u3002\u6709\u4e9b\u5c0f\u4f19\u4f34\u559c\u6b22\u7528\u8def\u7531\u89e3\u6790\u53bb\u7ed9\u540e\u53f0\u4f20url\uff0c\u6240\u4ee5\u5728a\u6807\u7b7e\u4e2d\u5229\u7528\u53cd\u5411\u89e3\u6790\u65f6\u4f1a\u8fd9\u6837\u505a\uff1a <a href=\"{% url \"del_book 1\" %}\">\u5220\u9664</a> \u8fd9\u6837\u505a\u5b8c\u5168\u6ca1\u95ee\u9898\u3002 ajax\u5904\u7406\u7684\u95ee\u9898 \u4f46\u662f\uff0c\u5b9e\u9645\u9879\u76ee\u4e2d\u5e38\u4f1a\u7528\u5230 ajax\u5f02\u6b65\u64cd\u4f5c \uff0c\u5982\u679c\u4f60\u5728ajax\u4e2d\u8fd9\u6837\u5199url\u7684\u8bdd\uff1a var del_id = $('#del_id').text(); xxx xxx url:'{% url \"del_book\" del_id %}', \u6d4f\u89c8\u5668\u4f1a\u7ed9\u4f60\u8fd4\u56de\u4e00\u4e2a\u8fd9\u6837\u7684\u9519\u8bef\uff1a\u8def\u7531\u4e2d\u62ff\u4e0d\u5230\u4f60\u4f20\u7684\u8fd9\u4e2a\u53c2\u6570~ \u8fd9\u5c31\u8bf4\u660e\uff1a \u5728ajax\u7684\u53cd\u5411\u89e3\u6790\u4e2d\uff0c\u4e0d\u53ef\u4ee5\u4f20\u4e00\u4e2a\u201c\u53d8\u91cf\u201d \u89e3\u51b3\u65b9\u68481 \u53ef\u4ee5\u53e6\u8f9f\u8e4a\u5f84\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u9700\u8981\u7684\u8def\u7531\u653e\u5728\u4e00\u4e2a\u6807\u7b7e\u4e2d\uff0c\u8fd9\u4e2a\u6807\u7b7e\u7528\u6a21\u7248\u7684\u53cd\u5411\u89e3\u6790\u7684\u8bed\u6cd5\u83b7\u53d6\u5230\u8fd9\u4e2a\u8def\u7531\uff0c\u7136\u540e\u518d\u4f20\u7ed9ajax\u7684url\uff1a //\u6784\u5efa\u4e00\u4e2a\u83b7\u53d6url\u7684\u6807\u7b7e <span id=\"del_url\" class='hidden'>{% url 'del_book' 1 %}}</span> \u3002\u3002\u3002 //\u7528\u4e00\u4e2a\u53d8\u91cf\u63a5\u6536\u8fd9\u4e2a\u8def\u7531\uff1a/del_book/1/ var u1 = $('#del_url').text(); $.ajax({ //url\u7528\u8fd9\u4e2a\u53d8\u91cfu1 url:u1, type:'post', \u3002\u3002\u3002 }) \u4f46\u662f\u5462\uff5e\u806a\u660e\u7684\u4f60\u53ef\u80fd\u4e00\u773c\u5c31\u770b\u51fa\u95ee\u9898\u6765\u4e86\uff1a\u4f60\u8fd9\u4e2a 1 \u662f\u4e00\u4e2a\u5e38\u91cf\u4e0d\u662f\u53d8\u91cf\u5440\uff01\u6211\u60f3\u52a0\u4e00\u4e2a\u53d8\u91cf\u600e\u4e48\u529e\u5462\uff1f\u8bf7\u770b\u65b9\u6cd52: \u89e3\u51b3\u65b9\u68482 \u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u4f1a\u901a\u8fc7\u6a21\u677f\u8bed\u6cd5\u53bb\u6e32\u67d3\u9875\u9762~\u65b9\u6cd51\u4e2d\u63d0\u5230\u7684\u201c\u5e38\u91cf\u201d\u5176\u5b9e\u53ef\u4ee5\u5728\u6a21\u677f\u6e32\u67d3\u7684\u65f6\u5019\u62ff\u5230\uff0c \u65e2\u7136\u6211\u4eec\u80fd\u901a\u8fc7{{ obj.pk }}\u503c\u53ef\u4ee5\u83b7\u53d6\u5230\u8fd9\u4e2a\u6761\u76ee\u7684id\u503c~\u90a3\u53ef\u4ee5\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u6784\u5efa\u4e00\u4e2a\u9690\u85cf\u7684\u6807\u7b7e\uff1a <span class='hidden'>{% url \"index\" {{ obj.pk }} %}</span> \u5927\u5bb6\u53ef\u4ee5\u770b\u5230~\u8fd9\u4e2aspan\u6807\u7b7e\u91cc\u5b58\u653e\u7740\u4e0d\u5c31\u662f\u6211\u4eec\u9700\u8981\u7684\u90a3\u4e2a\u5e26\u52a8\u6001\u53c2\u6570\u7684\u8def\u5f84\u5417\uff1f\u63a5\u7740\u5229\u7528jQuery\u7684\u9009\u62e9\u5668\u62ff\u5230\u8fd9\u4e2a\u8def\u5f84\u53c2\u6570\u3002 //\u5047\u8bbe\u8fd9\u4e2aspan\u6807\u7b7e\u5728\u6211\u4eec\u70b9\u51fb\u7684\u6309\u94ae\u7684\u540e\u9762 var id_url = $(this).next().text(); \u7136\u540e\uff0c\u5728url\u7684data\u4e2d\u5c31\u53ef\u4ee5\u7528\u8fd9\u4e2a\u8def\u5f84\u4e86\uff1a ... $.ajax({ \u3000\u3000url:id_url, \u3000\u3000... }) ... \u89e3\u51b3\u65b9\u68483 \u7b2c\u4e09\u79cd\u89e3\u51b3\u65b9\u6848\u662f\u201c\u8def\u5f84\u62fc\u63a5\u201d\uff5e\u7279\u522b\u6ce8\u610f\uff1a\u8fd9\u91cc\u7684\u8def\u5f84\u5fc5\u987b\u662f\u4e00\u4e2a\u5168\u8def\u5f84\uff01 {# \u83b7\u53d6\u8981\u88ab\u5220\u9664\u7684\u4e66\u7c4d\u7684id #} var del_id = $('#del_id').text(); $.ajax({ {# \u62fc\u63a5\u8def\u5f84 #} url:'/book/del_book/' + del_id +'/', {#url:'{% url \"del_book\" del_id %}', //\u4e0d\u53ef\u4ee5\u8fd9\u6837\u5199#} type:'post', \u3002\u3002\u3002 }) \u540d\u79f0\u7a7a\u95f4 \u4e0a\u9762\u4ecb\u7ecd\u4e86\u53cd\u5411\u89e3\u6790\u4e0e\u8def\u7531\u522b\u540d\u7684\u6982\u5ff5\uff0c\u4e5f\u8bb8\u806a\u660e\u7684\u4f60\u4f1a\u63d0\u51fa\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u679c\u5b9e\u9645\u4e2d\u4e0d\u540c\u7684app\u7684url\u51fa\u73b0\u4e86\u76f8\u540c\u7684\u522b\u540d\u600e\u4e48\u529e\u5462\uff1f Django\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86 \u540d\u79f0\u7a7a\u95f4 \u89e3\u51b3\u4e0a\u9762\u7684\u95ee\u9898\u3002 \u8fd9\u91cc\u6211\u505a\u4e86\u4e00\u4e2ademo\u4e3a\u5927\u5bb6\u8be6\u7ec6\u8bb2\u89e3 \u540d\u79f0\u7a7a\u95f4\u7684\u4f7f\u7528 \u3002 \u9996\u5148\uff0c\u6211\u4eec\u65b0\u5efa\u4e00\u4e2a\u540d\u4e3aNameSpace\u7684Django\u9879\u76ee\uff0c\u7136\u540e\u5728\u91cc\u9762\u521b\u5efa\u4e24\u4e2a\u5e94\u7528\uff0c\u5206\u522b\u53ebcustomer\u4e0epayment\uff0c\u8bb0\u5f97\u5728settings\u4e2d\u7684INSTALLED_APPS\u4e2d\u6ce8\u518c\u8fd9\u4e24\u4e2a\u5e94\u7528\uff5e \u63a5\u7740\uff0c\u5728template\u76ee\u5f55\u4e2d\u5206\u522b\u521b\u5efa\u4e24\u4e2a\u9879\u76ee\u7684\u6a21\u677f\u6587\u4ef6\u5939\uff5e\u800c\u4e14\u8ba9\u5176\u4e2d\u7684\u4e24\u4e2a\u7f51\u9875\u540d\u5b57\u4e00\u6837\uff0c\u9879\u76ee\u7684\u5177\u4f53\u7ed3\u6784\u5982\u4e0b\uff1a . \u251c\u2500\u2500 NameSpace # \u4e0e\u9879\u76ee\u540c\u540d\u7684\u76ee\u5f55 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 settings.py \u2502 \u251c\u2500\u2500 urls.py # \u9879\u76ee\u7684\u603b\u8def\u7531 \u2502 \u2514\u2500\u2500 wsgi.py \u251c\u2500\u2500 customer # customer\u5e94\u7528 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 admin.py \u2502 \u251c\u2500\u2500 apps.py \u2502 \u251c\u2500\u2500 migrations \u2502 \u2502 \u2514\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 models.py \u2502 \u251c\u2500\u2500 tests.py \u2502 \u251c\u2500\u2500 urls.py # customer\u5206\u8def\u7531 \u2502 \u2514\u2500\u2500 views.py # customer\u7684\u89c6\u56fe \u251c\u2500\u2500 manage.py \u251c\u2500\u2500 payment # payment\u5e94\u7528 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 admin.py \u2502 \u251c\u2500\u2500 apps.py \u2502 \u251c\u2500\u2500 migrations \u2502 \u2502 \u2514\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 models.py \u2502 \u251c\u2500\u2500 tests.py \u2502 \u251c\u2500\u2500 urls.py # payment\u5206\u8def\u7531 \u2502 \u2514\u2500\u2500 views.py # payment\u7684\u89c6\u56fe \u2514\u2500\u2500 templates # \u6a21\u677f\u76ee\u5f55 \u251c\u2500\u2500 customer \u2502 \u2514\u2500\u2500 index.html # customer\u7684index\u9875\u9762 \u2514\u2500\u2500 payment \u2514\u2500\u2500 index.html # payment\u7684index\u9875\u9762 \u8def\u7531\u5206\u53d1 \u5168\u5c40\u7684urls\u6587\u4ef6\u4e2d\uff08\u8ddf\u9879\u76ee\u540d\u540c\u540d\u7684\u76ee\u5f55\u91cc\u7684\u6587\u4ef6\u6211\u4e60\u60ef\u53eb\u5168\u5c40\u6587\u4ef6\uff09\u505a\u8def\u7531\u5206\u53d1\uff1a urlpatterns = [ path('admin/', admin.site.urls), re_path('^customer/',include('customer.urls')), re_path('^payment/',include('payment.urls')), ] customer\u76ee\u5f55\u4e2d\u65b0\u5efa\u7684urls\u6587\u4ef6 from django.urls import path,re_path from customer import views urlpatterns = [ re_path(r'^index/$',views.index,name='index'), ] payment\u76ee\u5f55\u4e2d\u65b0\u5efa\u7684urls\u6587\u4ef6 from django.urls import path,re_path from payment import views urlpatterns = [ re_path(r'^index/$',views.index,name='index'), ] \u89c6\u56fe\u51fd\u6570 customer\u76ee\u5f55\u4e2d\u7684\u89c6\u56fe\u51fd\u6570 from django.shortcuts import render,HttpResponse from django.urls import reverse def index(request): if request.method == 'GET': url = reverse('index') print('customer_url:',url) return HttpResponse(url) payment\u76ee\u5f55\u4e2d\u7684\u89c6\u56fe\u51fd\u6570 from django.shortcuts import render,HttpResponse from django.urls import reverse def index(request): if request.method == 'GET': url = reverse('index') print('payment:',url) return HttpResponse(url) \u5b58\u5728\u95ee\u9898 \u5927\u5bb6\u53ef\u4ee5\u770b\u5230\uff1a\u6211\u5728\u4e24\u4e2a\u5e94\u7528\u7684\u5206\u53d1\u8def\u7531\u4e2d\u7ed9\u4e24\u4e2a\u4e0d\u540c\u7684index\u8def\u5f84\uff08\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u8bbf\u95eecustomer\u7684indexs\u7684\u8def\u5f84\u5176\u5b9e\u662f/customer/index/\uff0c\u540c\u7406payment\u7684index\u7684\u8def\u5f84\u662f/payment/index/\uff09\u53d6\u4e86\u76f8\u540c\u7684\u522b\u540dindex\uff1b\u800c\u4e14\u5728\u4e0d\u540c\u7684\u89c6\u56fe\u51fd\u6570\u4e2d\u901a\u8fc7\u53cd\u5411\u89e3\u6790\u62ff\u5230\u4e86\u522b\u540dindex\u5bf9\u5e94\u7684\u8def\u5f84\u6253\u5370\u4e86\u51fa\u6765\u5e76\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668\u3002 \u73b0\u5728\u6211\u4eec\u8bd5\u8bd5\u5b9e\u9645\u7684\u8fd0\u884c\u6548\u679c\uff1a \u5f53\u6211\u8bbf\u95eepayment\u7684index\u7684\u65f6\u5019\u786e\u5b9e\u6253\u5370\u51fa\u4e86\u6b63\u786e\u7684\u8def\u5f84\uff1a \u4f46\u662f\uff0c\u5f53\u6211\u8bbf\u95eecustomer\u7684\u8def\u5f84\u7684\u65f6\u5019\u51fa\u9519\u4e86\uff1a\u8fd9\u4e2aurl\u7adf\u7136\u88ab\u53cd\u5411\u89e3\u6790\u6210\u4e86payment\u7684index\u8def\u5f84\uff01 \u8ba9\u6211\u4eec\u518d\u6765\u770b\u770b\u540e\u53f0\u6253\u5370\u7684\u6548\u679c\uff1a\u4ece\u7b2c\u4e8c\u6761\u6570\u636e\u53ef\u4ee5\u770b\u51fa\u6765\uff5e\u6d4f\u89c8\u5668\u660e\u660e\u6536\u5230\u7684\u662fcustomer\u7684get\u8bf7\u6c42\uff0c\u53ef\u662f\u53cd\u5411\u89e3\u6790\u51fa\u6765\u7684index\u7684\u8def\u5f84\u5374\u662f\u53e6\u5916\u4e00\u6761\u8def\u7531\uff01 \u5b9e\u9645\u4e2d\u8fd9\u6837\u51fa\u73b0\u8fd9\u6837\u7684\u95ee\u9898\u662f\u5341\u5206\u5371\u9669\u7684\uff01\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\uff0c\u53ef\u4ee5\u5229\u7528 \u540d\u79f0\u7a7a\u95f4 \u89e3\u51b3\u3002 \u540d\u79f0\u7a7a\u95f4\u89e3\u51b3 \u5229\u7528\u540d\u79f0\u7a7a\u95f4\u53ef\u4ee5\u89e3\u51b3\u4e0a\u9762\u7684\u95ee\u9898\uff5e \u9996\u5148\u6211\u4eec\u5728\u8def\u7531\u5206\u53d1\u7684\u65f6\u5019\u4e3a\u6bcf\u6761\u5206\u53d1\u7684\u8def\u7531\u52a0\u4e0a\u540d\u79f0\u7a7a\u95f4\uff1a urlpatterns = [ path('admin/', admin.site.urls), # \u5206\u53d1\u7684\u65f6\u5019\u52a0\u4e0a\u540d\u79f0\u7a7a\u95f4 re_path('^customer/',include(('customer.urls','customer'))), re_path('^payment/',include(('payment.urls','payment'))), ] \u4e24\u4e2a\u5e94\u7528\u7684\u5206\u53d1\u7684\u8def\u7531\u4e2d\u7684\u5199\u6cd5\u8fd8\u8ddf\u4e0a\u9762\u7684\u4e00\u6837\u3002 \u5728\u89c6\u56fe\u51fd\u6570\u4e2d\u8fdb\u884c\u53cd\u5411\u89e3\u6790\u7684\u65f6\u5019\u4e3a\u6bcf\u4e2a\u522b\u540d\u52a0\u4e0a\u81ea\u5df1\u7684\u540d\u79f0\u7a7a\u95f4\u3002 customer\u7684\u89c6\u56fe\u51fd\u6570\uff1a from django.shortcuts import render,HttpResponse from django.urls import reverse def index(request): if request.method == 'GET': # \u53cd\u5411\u89e3\u6790\u7684\u65f6\u5019\u52a0\u4e0a\u540d\u79f0\u7a7a\u95f4 url = reverse('customer:index') print('customer_url:',url) return HttpResponse(url) payment\u7684\u89c6\u56fe\u51fd\u6570\uff1a from django.shortcuts import render,HttpResponse from django.urls import reverse def index(request): if request.method == 'GET': url = reverse('payment:index') print('payment:',url) return HttpResponse(url) \u6700\u540e\u8ba9\u6211\u4eec\u770b\u770b\u7ed3\u679c\uff1a \uff081\uff09\u8bbf\u95eepayment\u7684\u7ed3\u679c\uff1a \uff082\uff09\u8bbf\u95eecustomer\u7684\u7ed3\u679c\uff1a \uff083\uff09\u6700\u540e\u770b\u770b\u6253\u5370\u7ed3\u679c\uff1a \u5b9e\u9645\u5f00\u53d1\u4e2d\u540d\u79f0\u7a7a\u95f4\u4e0d\u80fd\u91cd\u540d \u5207\u8bb0\uff01\u5b9e\u9645\u5f00\u53d1\u4e2d\u540d\u79f0\u7a7a\u95f4\u4e0d\u80fd\u91cd\u540d\uff01 path\u65b9\u6cd5 Django2\u7248\u672c\u8def\u7531\u5339\u914d\u65b0\u589e\u4e86 path\u65b9\u6cd5 \uff0c\u53e6\u5916re_path\u65b9\u6cd5\u4e0eDjango1\u7248\u672c\u7684url\u65b9\u6cd5\u7528\u6cd5\u5b8c\u5168\u4e00\u81f4\uff0c\u5176\u5b9e\u5c31\u662f\u6b63\u5219\u5339\u914d\u3002 \u8fd9\u91cc\u7740\u91cd\u4ecb\u7ecd\u4e00\u4e0bpath\u65b9\u6cd5\u3002 path\u65b9\u6cd5\u89e3\u51b3\u7684\u95ee\u9898 \uff081\uff09\u5bf9\u4e8e\u8fd9\u6837\u7684\u8def\u7531\u5339\u914d\uff1a re_path('^index/(?P<year>[0-9]{4})/(?P<month>[0-9]{2})/$',views.index} \u8fd9\u91cc\u7684year\u53c2\u6570\u662fstr\u7c7b\u578b\u7684\u3002\u4f46\u662f\u5b9e\u9645\u4e2d\u5982\u679c\u6211\u4eec\u60f3\u62ff\u5230\u4e00\u4e2aint\u7c7b\u578b\u7684\u503c\u7684\u8bdd\uff0c\u8fd8\u9700\u8981\u8fdb\u884c int(year) \u7684\u8f6c\u6362\u3002 \u505a\u8fd9\u79cd\u8f6c\u6362\u662f\u6709\u98ce\u9669\u7684\uff0c\u5b9e\u9645\u4e2d\u53ef\u80fd\u4f1a\u51fa\u73b0 TypeError \u6216\u8005 ValueError \u5f02\u5e38\uff0c\u4f7f\u7528path\u65b9\u6cd5\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u79cd\u8f6c\u5316\u5728Django\u5185\u90e8\u81ea\u52a8\u5b8c\u6210\u3002 \uff082\uff09\u8fd8\u662f\u62ff\u4e0a\u9762\u7684\u8def\u7531\u5339\u914d\u4e3a\u4f8b\uff0c\u5bf9\u4e8eyear\u8fd9\u4e2a\u53d8\u91cf\uff0c\u5982\u679c\u4e09\u4e2a\u8def\u7531\u4e2d\u90fd\u6709\u5b83\u7684\u8bdd\u6211\u4eec\u5f97\u5199\u4e09\u904d\uff1a re_path('^index/(?P<year>[0-9]{4})/$',views.index1}, re_path('^index/(?P<year>[0-9]{4})/(?P<month>[0-9]{2})/$',views.index2}, re_path('^index/(?P<year>[0-9]{4})/(?P<month>[0-9]{2})/666/$',views.index3} \u800c\u4f7f\u7528path\u65b9\u6cd5\u53ea\u9700\u8981\u505a\u4e00\u5904\u4fee\u6539\u5373\u53ef\u3002 \u4f7f\u7528path\u65b9\u6cd5\u89e3\u51b3\u4e0a\u9762\u95ee\u9898 rom django.urls import path,re_path from blog import views urlpatterns = [ re_path('^login$/',views.login,name='LOGIN'), # \u6709\u540d\u5206\u7ec4 re_path('^articles/(?P<y>[0-9]{4})/(?P<m>[a-zA-Z0-9]+$)',views.get_y_m), ### path\u65b9\u6cd5 #\u8fd9\u91cc\u7684int\u662f\u5185\u7f6e\u7684\u8f6c\u6362\u5668 path('articles/<int:year>/<int:month>/',views.get_year_month), ] \u5bf9\u5e94\u7684\u89c6\u56fe\u51fd\u6570\u5982\u4e0b\uff1a from django.shortcuts import render,HttpResponse # Create your views here. def login(request): if request.method == 'GET': return render(request,'login.html') elif request.method == 'POST': user = request.POST.get('user') pwd = request.POST.get('pwd') if user == 'whw' and pwd == '123': return HttpResponse('OK!') else: return HttpResponse('ERROR!') def get_y_m(request,m,y): print(y) print(type(y))#\u8fd9\u91cc\u9ed8\u8ba4\u7684\u662fstr\u7c7b\u578b return HttpResponse('y:%s;m:%s'%(y,m)) def get_year_month(request,year,month): print(year,minth) print(type(year),type(month)) return HttpResponse(year,month) path\u7684\u57fa\u672c\u89c4\u5219\u5982\u4e0b\uff1a \u4f7f\u7528\u5c16\u62ec\u53f7(<>)\u4eceurl\u4e2d\u6355\u83b7\u503c\u3002 \u6355\u83b7\u503c\u4e2d\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u8f6c\u5316\u5668\u7c7b\u578b\uff08converter type\uff09\uff0c\u6bd4\u5982\u4f7f\u7528 \u6355\u83b7\u4e00\u4e2a\u6574\u6570\u53d8\u91cf\u3002 \u82e5\u679c\u6ca1\u6709\u8f6c\u5316\u5668\uff0c\u5c06\u5339\u914d\u4efb\u4f55\u5b57\u7b26\u4e32\uff0c\u5f53\u7136\u4e5f\u5305\u62ec\u4e86 / \u5b57\u7b26\u3002 \u65e0\u9700\u6dfb\u52a0\u524d\u5bfc\u659c\u6760\u3002 path converters \u8fd9\u91cc\u5c31\u628a\u5b83\u7ffb\u8bd1\u6210 path\u8f6c\u6362\u5668 \u5427\u3002 5\u79cd\u9ed8\u8ba4\u8f6c\u6362\u5668 1\u3001str,\u5339\u914d\u9664\u4e86\u8def\u5f84\u5206\u9694\u7b26\uff08/\uff09\u4e4b\u5916\u7684\u975e\u7a7a\u5b57\u7b26\u4e32\uff0c\u8fd9\u662f\u9ed8\u8ba4\u7684\u5f62\u5f0f 2\u3001int,\u5339\u914d\u6b63\u6574\u6570\uff0c\u5305\u542b0\u3002 #slug\u7528\u7684\u6bd4\u8f83\u591a\u2014\u2014\u76f8\u5f53\u4e8e\u5339\u914d\u4e0b\u9762\u7684\u5b57\u7b26\u4e32\u2014\u2014\u7701\u53bb\u4e86\u6b63\u5219\u8868\u8fbe\u5f0f 3\u3001slug,\u5339\u914d\u5b57\u6bcd\u3001\u6570\u5b57\u4ee5\u53ca\u6a2a\u6760\u3001\u4e0b\u5212\u7ebf\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u3002 4\u3001uuid,\u5339\u914d\u683c\u5f0f\u5316\u7684uuid\uff0c\u5982 075194d3-6885-417e-a8a8-6c931e272f00\uff09\u2014\u2014 \u6ce8\u610f\u4e0d\u80fd\u7528 ? \uff0c\u5b83\u662fGET\u8bf7\u6c42\u6570\u636e\u5de6\u53f3\u90e8\u5206\u7684\u5206\u9694\u7b26\uff01 5\u3001path,\u5339\u914d\u4efb\u4f55\u975e\u7a7a\u5b57\u7b26\u4e32\uff0c\u5305\u542b\u4e86\u8def\u5f84\u5206\u9694\u7b26 \u81ea\u5b9a\u4e49\u8f6c\u6362\u5668\u7684\u4f7f\u7528 \u5bf9\u4e8e\u4e00\u4e9b\u590d\u6742\u6216\u8005\u590d\u7528\u7684\u9700\u8981\uff0c\u53ef\u4ee5\u5b9a\u4e49\u81ea\u5df1\u7684\u8f6c\u5316\u5668\u3002\u8f6c\u5316\u5668\u662f\u4e00\u4e2a\u7c7b\u6216\u63a5\u53e3\uff0c\u5b83\u7684\u8981\u6c42\u6709\u4e09\u70b9\uff1a 1\u3001regex \u7c7b\u5c5e\u6027\uff0c\u5b57\u7b26\u4e32\u7c7b\u578b 2\u3001to_python(self, value) \u65b9\u6cd5\uff0cvalue\u662f\u7531\u7c7b\u5c5e\u6027 regex \u6240\u5339\u914d\u5230\u7684\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u5177\u4f53\u7684Python\u53d8\u91cf\u503c\uff0c\u4ee5\u4f9bDjango\u4f20\u9012\u5230\u5bf9\u5e94\u7684\u89c6\u56fe\u51fd\u6570\u4e2d\u3002 3\u3001to_url(self, value) \u65b9\u6cd5\uff0c\u548c to_python \u76f8\u53cd\uff0cvalue\u662f\u4e00\u4e2a\u5177\u4f53\u7684Python\u53d8\u91cf\u503c\uff0c\u8fd4\u56de\u5176\u5b57\u7b26\u4e32\uff0c\u901a\u5e38\u7528\u4e8eurl\u53cd\u5411\u5f15\u7528\u3002 \u4e00\u4e2a\u81ea\u5b9a\u4e49\u8f6c\u6362\u5668\u7684\u4f8b\u5b50 (1)\u5728blog\u5e94\u7528\u4e2d\uff0c\u65b0\u5efa\u4e00\u4e2aurl_convert.py\u6587\u4ef6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u65b0\u5efa\u4e00\u4e2a\u7c7b \u6ce8\u610f\u8fd9\u4e2a\u7c7b\u7684\u540d\u5b57\u53ef\u4ee5\u968f\u4fbf\u53d6\uff0c\u4f46\u662f\u7c7b\u4e2d\u7684\u5c5e\u6027\u4e0e\u65b9\u6cd5\u540d\u662f\u56fa\u5b9a\u7684\uff01 class FourDigitYearConverter: #\u89c4\u5219\u5b57\u7b26\u4e32 regex = '[0-9]{4}' #to_python\u65b9\u6cd5 def to_python(self, value): return int(value) #to_url\u65b9\u6cd5\u2014\u2014\u7528\u4e8e\u53cd\u5411\u89e3\u6790 def to_url(self, value): return '%04d' % value (2)\u4f7f\u7528register_converter \u5c06\u5176\u6ce8\u518c\u5230URL\u914d\u7f6e\u4e2d #\u5728blog\u7684url.py\u6587\u4ef6\u4e2d\u6ce8\u518c\uff1a from django.urls import register_converter, path #\u5c06\u5199\u597d\u7684url_convert\u5f15\u5165\uff1a from blog import url_convert, views #\u7528yyyy\u505a\u66ff\u6362\uff1a register_converter(url_convert.FourDigitYearConverter, 'yyyy') from django.urls import path,re_path,register_converter from blog import views,url_convert register_converter(url_convert.four_year_to_int,'yyyy') urlpatterns = [ re_path('^login/$',views.login,name='LOGIN'), #\u6709\u540d\u5206\u7ec4+\u53cd\u5411\u89e3\u6790 re_path('^articles/(?P<y>[0-9]{4})/(?P<m>[a-zA-Z]+)/$',views.get_y_m), path('articles/<yyyy:year>/<yyyy:month>',views.get_year_month), ] #\u6ce8\u610f\u6d4f\u89c8\u5668\u4e2d\u8981\u8fd9\u6837\u5199\uff1ahttp://127.0.0.1:8000/blog/articles/1000/1234 #year\u8ddfmonth\u90fd\u662f4\u4f4d\uff0c\u56e0\u4e3a\u89c4\u5219\u662f\uff1aregex = '[0-9]{4}'","title":"01 \u8def\u7531\u63a7\u5236"},{"location":"Django\u6838\u5fc3/\u8def\u7531/#_1","text":"\u8def\u7531\u63a7\u5236\u5668\u4e2d\u901a\u8fc7 \u5206\u7ec4 \u5c06url\u5339\u914d\u5230\u7684\u6570\u636e\u4f20\u7ed9\u89c6\u56fe\u51fd\u6570\u5904\u7406\u3002 Django\u8def\u7531\u63a7\u5236\u5668\u4e2d\u7684\u5206\u7ec4\u5305\u62ec \u65e0\u540d\u5206\u7ec4 \u4e0e \u6709\u540d\u5206\u7ec4 \u3002 \u65e0\u540d\u5206\u7ec4 \u50cf\u8fd9\u79cd\u5f62\u5f0f\u7684\u8def\u7531\u5339\u914d\u7684\u683c\u5f0f\u5c31\u662f\u65e0\u540d\u5206\u7ec4\uff1a re_path(r'^articles/([0-9]{4})/([0-9]{2})/$',views.month_archive) \u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff1a\u5982\u679c\u4f7f\u7528\u65e0\u540d\u5206\u7ec4\u53bb\u83b7\u53d6url\u4e2d\u7684\u6570\u636e\uff0c\u89c6\u56fe\u51fd\u6570\u4e2d\u7684\u53c2\u6570\u662f\u6709\u987a\u5e8f\u7684\uff0c\u89c6\u56fe\u51fd\u6570\u4e2d\u53c2\u6570\u7684\u987a\u5e8f\u5c31\u662f\u4f20\u5165\u53c2\u6570\u7684\u987a\u5e8f\uff1a # \u7b2c\u4e00\u4e2a\u53c2\u6570\u6c38\u8fdc\u662frequest # year\u63a5\u6536\u7684\u662f[0-9]{4}\u8fd9\u4e2a\u89c4\u5219\u5339\u914d\u5230\u7684\u6570\u636e\uff0cmonth\u63a5\u6536\u7684\u662f[0-9]{2}\u8fd9\u4e2a\u89c4\u5219\u5339\u914d\u5230\u7684\u6570\u636e def month_archive(request,year,month): print(year) print(month) xxx \u6709\u540d\u5206\u7ec4 \u4f7f\u7528\u6709\u540d\u5206\u7ec4\u7684\u65b9\u5f0f\u5982\u4e0b\uff1a re_path(r'^articles/(?P<year>[0-9]{4})/(?P<month>[0-9]{2})/$',views.month_archive) \u4f7f\u7528\u6709\u540d\u5206\u7ec4\u7684\u8bdd\u89c6\u56fe\u51fd\u6570\u63a5\u6536\u53c2\u6570\u7684\u65f6\u5019\u53ea\u9700\u8981\u6307\u5b9a\u5bf9\u5e94\u53d8\u91cf\u7684\u540d\u5b57\u5c31\u597d\u4e86\uff1a # \u4e0d\u7ba1year\u4e0emonth\u7684\u4f4d\u7f6e\u600e\u4e48\u53d8\uff0cmonth\u6c38\u8fdc\u62ff\u5230\u7684\u662f([0-9]{2})\u5339\u914d\u5230\u7684\u6570\u636e\uff0c # year\u6c38\u8fdc\u62ff\u5230\u7684\u662f([0-9]{4})\u5339\u914d\u5230\u7684\u6570\u636e def month_archive(request,month,year): print(year) print(month) xxx","title":"\u5206\u7ec4\u7684\u6982\u5ff5"},{"location":"Django\u6838\u5fc3/\u8def\u7531/#_2","text":"\u4e4b\u524d\u505a\u9879\u76ee\u7684\u65f6\u5019\u53d1\u73b0\u8def\u7531\u8fd8\u53ef\u4ee5\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u7ed9\u89c6\u56fe\u4f20\u53c2\uff1a re_path('^index/(?P<year>[0-9]{4})/(?P<month>[0-9]{2})/$',views.index,{\"name\":\"whw\",\"age\":18}), \u8bbf\u95ee: http://127.0.0.1:8001/index/2000/12 \u89c6\u56fe\u51fd\u6570\u4e2d\u7684\u60c5\u51b5\u5982\u4e0b\uff1a def index(request,name,age,month,year): print(month) # 12 print(year) # 2000 print(name) # whw print(age) # 18 xxx","title":"\u8def\u7531\u7ed9\u89c6\u56fe\u4f20\u53c2\u7684\u53e6\u5916\u4e00\u79cd\u65b9\u5f0f"},{"location":"Django\u6838\u5fc3/\u8def\u7531/#_3","text":"\u8def\u7531\u7684\u5206\u53d1\u5176\u5b9e\u76f8\u5f53\u4e8e\u7a0b\u5e8f\u7684 \u89e3\u8026 \uff0c\u5c06\u4e0d\u540c\u5e94\u7528\u7684\u8def\u7531\u5199\u5728\u81ea\u5df1\u7684app\u91cc\u9762\u5c31\u597d\u4e86\uff0c\u9879\u76ee\u7684 \u603b\u8def\u7531 \u53ea\u8d1f\u8d23\u5c06\u4e0d\u540c\u5e94\u7528\u7684url \u5206\u53d1 \u5230\u76f8\u5e94\u7684\u5e94\u7528\u4e2d\u5373\u53ef\u3002 \u5047\u8bbe\u6211\u4eec\u5728\u9879\u76ee\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3a blog \u7684\u5e94\u7528\uff0c\u5728\u8fd9\u4e2aapp\u4e2d\u521b\u5efa\u4e00\u4e2a urls.py \u6587\u4ef6\u4f5c\u4e3a\u5e94\u7528\u5206\u53d1\u7684\u8def\u7531\u3002 \u6211\u4eec\u9700\u8981\u5728\u4e0e\u9879\u76ee\u540c\u540d\u7684\u90a3\u4e2a\u76ee\u5f55\u7684urls.py\u6587\u4ef6\u4e2d\u505a\u4e00\u4e0b\u5206\u53d1\uff1a #\u5f15\u5165include from django.urls import path,re_path,include #\u5728urlpatterns\u5217\u8868\u4e2d\u52a0\u4e0b\u9762\u8fd9\u6bb5\u201c\u5206\u53d1\u201d\u7684\u4ee3\u7801\uff1a #\u5199\u6cd5\u4e00\uff1a #\u5982\u679c\u8fd9\u6837\u5199\u7684\u8bdd\uff0c\u6211\u4eec\u5728\u8bbf\u95ee\u7684\u65f6\u5019\u662f\u8fd9\u6837\u7684:http://127.0.0.1:8000/blog/login/ #\u4e5f\u5c31\u662f\u8bf4\uff0c\u60f3\u8981\u8bbf\u95eeblog\u7684\u5185\u5bb9 http://127.0.0.1:8000/blog/ \u662f\u5fc5\u4e0d\u53ef\u5c11\u7684 #\u6ce8\u610f\u8fd9\u91ccblog\u540e\u9762\u7684'/'\u5fc5\u987b\u5f97\u52a0 re_path(r'blog/',include('blog.url') #\u5199\u6cd5\u4e8c\uff1a #\u4f46\u662f\u5982\u679c\u6211\u4eec\u8fd9\u6837\u5199\uff0c\u8bbf\u95eeblog\u91cc\u7684\u4ee3\u7801\u5c31\u4e0d\u7528\u52a0blog\u4e86\uff1ahttp://127.0.0.1:8000/login/ #\u6ce8\u610f\u8fd9\u91cc^\u540e\u9762\u4e0d\u52a0\u2018/\u2019 re_path(r'^',include('blog.urls')) \u5728blog\u5e94\u7528\u4e2d\u7684urls.py\u4e2d\u52a0\u5165\u81ea\u5df1\u7684\u8def\u7531\u5339\u914d\uff1a #\u5c06\u4e4b\u524d\u5168\u5c40\u7684\u6709\u5173blog\u91cc\u9762\u7684views.py\u6587\u4ef6\u7684\u51fd\u6570\u7684\u64cd\u4f5c\u90fd\u653e\u5230blog\u91cc\u7684urls.py\u6587\u4ef6\u4e2d\uff1a from django.urls import path,re_path from blog import views urlpatterns = [ path('login/',views.login), #\u8def\u7531\u914d\u7f6e\u2014\u2014\u2014\u2014\u54ea\u4e00\u4e2a\u8def\u5f84\u7531\u54ea\u4e00\u4e2a\u89c6\u56fe\u51fd\u6570\u53bb\u5904\u7406 #\u8c03\u7528\u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u4f20\u4e00\u4e2arequest\u53c2\u6570\uff0c\u5982special_case_2003(request) re_path(r'^articles/2003/$',views.special_care_2003), #\u4e0b\u9762\u7684\u6548\u679c\u8ddf\u4e0a\u9762\u4e00\u6837\uff0c\u53ea\u4e0d\u8fc7\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5339\u914d\u65b9\u5f0f\u4e0d\u540c\uff0c\u9700\u8981\u7684\u51fd\u6570\u8fd8\u662f\u5199\u5728blog\u7684views.py\u6587\u4ef6\u4e2d # \u6ce8\u610f\u8fd9\u4e00\u4e2a\uff0c\u6709\u5206\u7ec4\u7684\u8bdd\u9700\u8981\u5728views.py\u6587\u4ef6\u7684\u76f8\u5e94\u7684\u51fd\u6570\u4e2d\u591a\u52a0\u4e00\u4e2a\u53c2\u6570\uff1a re_path(r'^articles/([0-9]{4})/$',views.year_archive), #\u6709\u4e24\u4e2a\u5206\u7ec4\u9700\u8981\u5728views.py\u7684\u76f8\u5e94\u7684\u51fd\u6570\u4e2d\u591a\u52a0\u4e24\u4e2a\u53c2\u6570\uff1a re_path(r'^articles/([0-9]{4})/([0-9]{2})$',views.month_archive), #\u6709\u540d\u5206\u7ec4 re_path(r'^articles/(?P<str_2>[a-z]{2})/(?P<str_1>[a-z]{1})/$',views.str_name1) ]","title":"\u8def\u7531\u5206\u53d1"},{"location":"Django\u6838\u5fc3/\u8def\u7531/#_4","text":"\u5f53\u524d\u7aef\u6a21\u677f\uff08\u63d0\u4ea4\u8bf7\u6c42\uff09\u4e0e\u89c6\u56fe\u903b\u8f91\uff08\u505a\u91cd\u5b9a\u5411\uff09\u9700\u8981\u7528\u5230\u4f20\u6765\u7684url\u65f6\uff0c\u5c06\u6574\u4e2aurl\u5f53\u4f5c\u53c2\u6570\u5e76\u4e0d\u662f\u5f88\u65b9\u4fbf\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u8def\u7531\u4e2d\u4e3a\u6bcf\u6761url\u8bbe\u7f6e \u522b\u540d \uff0c\u5176\u4ed6\u5730\u65b9\u9700\u8981\u4f7f\u7528\u8fd9\u6761url\u65f6\u53ea\u9700\u8981\u4f7f\u7528\u8fd9\u4e2a\u522b\u540d\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u5c31\u662f\u53cd\u5411\u89e3\u6790\u7684\u4f5c\u7528\u3002 \u8def\u7531\u4e2d \u8bbe\u7f6e\u522b\u540d \u7684\u65b9\u6cd5 \u2014\u2014 \u53ea\u9700\u8981\u5728\u89c6\u56fe\u7684\u540e\u9762\u52a0\u4e0a name=\u522b\u540d \u5373\u53ef re_path('^login/$',views.login,name=\"login\"), re_path('^index/$',views.index,name=\"index\"), \u53cd\u5411\u89e3\u6790\u5728\u89c6\u56fe\u4e2d\u7684\u4f7f\u7528 \u57fa\u672c\u90fd\u662f\u505a\u91cd\u5b9a\u5411\u7528\u7684\uff1a from django.shortcuts import render,redirect def index(request): xxx # \u903b\u8f91\u5904\u7406\u5931\u8d25\u540e\u91cd\u5b9a\u5411\u5230\u767b\u5f55\u9875\u9762 return redirect(\"login\") \u89c6\u56fe\u4e2d\u5904\u7406\u4e0d\u5e26\u5206\u7ec4\u7684\u8def\u7531\u522b\u540d \u5f53\u7136\u89c6\u56fe\u4e2d\u4e5f\u53ef\u4ee5 \u901a\u8fc7\u522b\u540d\u627e\u5230\u4f20\u8fc7\u6765\u7684url : \u8def\u7531\u4e3a\uff1a re_path(r'^articles/2003/$',views.special_care_2003,name='s_c_2003'), \u5bf9\u5e94\u7684\u89c6\u56fe\uff1a # \u5f15\u5165reverse from django.urls import reverse def special_care_2003(request): url = reverse('s_c_2003') print(url)#\u524d\u9762\u8bbe\u7f6e\u7684\u8def\u7531 /articles/2003/ return HttpResponse('\u54c8\u54c8! 2003') \u89c6\u56fe\u4e2d\u5904\u7406\u5e26\u5206\u7ec4\u7684\u8def\u7531\u522b\u540d \u5206\u7ec4\u7684\u8def\u7531\u4e3a\uff1a re_path('^index/(?P<year>[0-9]{4})/(?P<month>[0-9]{2})/$',views.index,name=\"index\"), \u89c6\u56fe\u5904\u7406\u903b\u8f91\uff1a from django.urls import reverse def index(request,month,year): print(month) # 12 print(year) # 2000 # \u6709\u5206\u7ec4\u7684reverse\u7684\u7528\u6cd5\uff01 url = reverse(\"index\", args=(year,month)) print(url) # /index/2000/12/ xxx \u53cd\u5411\u89e3\u6790\u5728\u6a21\u677f\u4e2d\u7684\u4f7f\u7528 \u6211\u4eec\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u767b\u9646\u903b\u8f91\uff0c\u8def\u7531\u5982\u4e0b re_path('^login/$',views.login,name=\"LOG\"), \u6a21\u677f\u6587\u4ef6\u5982\u4e0b <form action=\"{% url 'LOG' %}\" method=\"post\"> {# csrf\u6821\u9a8c #} {% csrf_token %} \u7528\u6237\u540d: <input type=\"text\" name=\"user\" > \u5bc6\u7801: <input type=\"password\" name=\"pwd\"> <input type=\"submit\"> </form> \u5176\u5b9e\u8fd9\u91cc\u7684action\u6307\u5411\u7684\u662f http://127.0.0.1:8000/login/ \u8fd9\u6761\u8def\u7531\u3002 {% url '\u522b\u540d' %} \u662f\u53cd\u5411\u89e3\u6790\u7684\u8bed\u6cd5 \u53cd\u5411\u89e3\u6790\u7684\u767b\u9646\u8ba4\u8bc1\u5b9e\u4f8b \u62ff\u4e0a\u9762\u7684\u767b\u9646\u8def\u7531\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u5b9e\u4f8b\u3002 \u8fd8\u662f\u90a3\u6761\u8def\u7531\uff1a re_path('^login/$',views.login,name=\"LOG\"), \u6a21\u677f\u4e2d\u7684\u5185\u5bb9\u5982\u4e0b\uff1a <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <link rel=\"stylesheet\" href=\"/static/whw1.css\"> </head> <body> <form action=\"{% url 'LOG' %} method=\"post\"> \u7528\u6237\u540d: <input type=\"text\" name=\"user\" > \u5bc6\u7801: <input type=\"password\" name=\"pwd\"> <input type=\"submit\"> </form> </body> </html> \u89c6\u56fe\u51fd\u6570\u7684\u5185\u5bb9\u5982\u4e0b\uff1a from django.shortcuts import render, HttpResponse # \u6ce8\u610f\u8fd9\u4e2a\u51fd\u6570\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u5f62\u53c2 request def login(request): # \u5982\u679c\u662fGET\u8bf7\u6c42\u5219\u8fd4\u56de\u5f53\u524d\u9875\u9762 if request.method == 'GET': print('GET\u8bf7\u6c42\u7684\u6570\u636e:', request.GET) # \u8fd9\u4e2a\u51fd\u6570\u5fc5\u987b\u5f97\u6709return\uff0c\u800c\u4e14\u662f\u5229\u7528render\u6e32\u67d3... return render(request, 'login.html') # \u5982\u679c\u662fPOST\u8bf7\u6c42\u65b9\u5f0f\u5219\u505a\u6821\u9a8c elif request.method == 'POST': print('POST\u8bf7\u6c42\u7684\u6570\u636e:', request.POST) # \u6ce8\u610f\uff1a # request.POST\u5b58\u7684\u662fform\u8868\u5355\u4e2dname\u503c\u4f5c\u4e3akey\u81ea\u5df1\u8f93\u5165\u7684\u503c\u4f5c\u4e3avalue\u7684\u5b57\u5178\uff01 user = request.POST.get('user') # \u8fd9\u91cc\u7684user\u4e0eform\u8868\u5355\u4e2d\u7684name\u503c\u5bf9\u5e94 pwd = request.POST.get('pwd') # \u8fd9\u91cc\u7684pwd\u4e0eform\u8868\u5355\u4e2d\u7684name\u503c\u5bf9\u5e94 # \u8fd9\u91cc\u53ef\u4ee5\u7528\u6570\u636e\u5e93\u64cd\u4f5c\u4ee3\u66ff\uff1a\uff1a\uff1a if user == 'whw' and pwd == '123': return HttpResponse('OK!') else: return HttpResponse('ERROR!')","title":"\u53cd\u5411\u89e3\u6790"},{"location":"Django\u6838\u5fc3/\u8def\u7531/#_5","text":"\u5b9e\u9645\u4e2d\uff0c\u6211\u4eec\u5728\u5229\u7528ajax\u7ed9\u540e\u53f0\u4f20\u5165\u4e00\u4e2aurl\u65f6\u4f1a\u5e26\u7740\u53c2\u6570\u3002\u6709\u4e9b\u5c0f\u4f19\u4f34\u559c\u6b22\u7528\u8def\u7531\u89e3\u6790\u53bb\u7ed9\u540e\u53f0\u4f20url\uff0c\u6240\u4ee5\u5728a\u6807\u7b7e\u4e2d\u5229\u7528\u53cd\u5411\u89e3\u6790\u65f6\u4f1a\u8fd9\u6837\u505a\uff1a <a href=\"{% url \"del_book 1\" %}\">\u5220\u9664</a> \u8fd9\u6837\u505a\u5b8c\u5168\u6ca1\u95ee\u9898\u3002 ajax\u5904\u7406\u7684\u95ee\u9898 \u4f46\u662f\uff0c\u5b9e\u9645\u9879\u76ee\u4e2d\u5e38\u4f1a\u7528\u5230 ajax\u5f02\u6b65\u64cd\u4f5c \uff0c\u5982\u679c\u4f60\u5728ajax\u4e2d\u8fd9\u6837\u5199url\u7684\u8bdd\uff1a var del_id = $('#del_id').text(); xxx xxx url:'{% url \"del_book\" del_id %}', \u6d4f\u89c8\u5668\u4f1a\u7ed9\u4f60\u8fd4\u56de\u4e00\u4e2a\u8fd9\u6837\u7684\u9519\u8bef\uff1a\u8def\u7531\u4e2d\u62ff\u4e0d\u5230\u4f60\u4f20\u7684\u8fd9\u4e2a\u53c2\u6570~ \u8fd9\u5c31\u8bf4\u660e\uff1a \u5728ajax\u7684\u53cd\u5411\u89e3\u6790\u4e2d\uff0c\u4e0d\u53ef\u4ee5\u4f20\u4e00\u4e2a\u201c\u53d8\u91cf\u201d \u89e3\u51b3\u65b9\u68481 \u53ef\u4ee5\u53e6\u8f9f\u8e4a\u5f84\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u9700\u8981\u7684\u8def\u7531\u653e\u5728\u4e00\u4e2a\u6807\u7b7e\u4e2d\uff0c\u8fd9\u4e2a\u6807\u7b7e\u7528\u6a21\u7248\u7684\u53cd\u5411\u89e3\u6790\u7684\u8bed\u6cd5\u83b7\u53d6\u5230\u8fd9\u4e2a\u8def\u7531\uff0c\u7136\u540e\u518d\u4f20\u7ed9ajax\u7684url\uff1a //\u6784\u5efa\u4e00\u4e2a\u83b7\u53d6url\u7684\u6807\u7b7e <span id=\"del_url\" class='hidden'>{% url 'del_book' 1 %}}</span> \u3002\u3002\u3002 //\u7528\u4e00\u4e2a\u53d8\u91cf\u63a5\u6536\u8fd9\u4e2a\u8def\u7531\uff1a/del_book/1/ var u1 = $('#del_url').text(); $.ajax({ //url\u7528\u8fd9\u4e2a\u53d8\u91cfu1 url:u1, type:'post', \u3002\u3002\u3002 }) \u4f46\u662f\u5462\uff5e\u806a\u660e\u7684\u4f60\u53ef\u80fd\u4e00\u773c\u5c31\u770b\u51fa\u95ee\u9898\u6765\u4e86\uff1a\u4f60\u8fd9\u4e2a 1 \u662f\u4e00\u4e2a\u5e38\u91cf\u4e0d\u662f\u53d8\u91cf\u5440\uff01\u6211\u60f3\u52a0\u4e00\u4e2a\u53d8\u91cf\u600e\u4e48\u529e\u5462\uff1f\u8bf7\u770b\u65b9\u6cd52: \u89e3\u51b3\u65b9\u68482 \u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u4f1a\u901a\u8fc7\u6a21\u677f\u8bed\u6cd5\u53bb\u6e32\u67d3\u9875\u9762~\u65b9\u6cd51\u4e2d\u63d0\u5230\u7684\u201c\u5e38\u91cf\u201d\u5176\u5b9e\u53ef\u4ee5\u5728\u6a21\u677f\u6e32\u67d3\u7684\u65f6\u5019\u62ff\u5230\uff0c \u65e2\u7136\u6211\u4eec\u80fd\u901a\u8fc7{{ obj.pk }}\u503c\u53ef\u4ee5\u83b7\u53d6\u5230\u8fd9\u4e2a\u6761\u76ee\u7684id\u503c~\u90a3\u53ef\u4ee5\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u6784\u5efa\u4e00\u4e2a\u9690\u85cf\u7684\u6807\u7b7e\uff1a <span class='hidden'>{% url \"index\" {{ obj.pk }} %}</span> \u5927\u5bb6\u53ef\u4ee5\u770b\u5230~\u8fd9\u4e2aspan\u6807\u7b7e\u91cc\u5b58\u653e\u7740\u4e0d\u5c31\u662f\u6211\u4eec\u9700\u8981\u7684\u90a3\u4e2a\u5e26\u52a8\u6001\u53c2\u6570\u7684\u8def\u5f84\u5417\uff1f\u63a5\u7740\u5229\u7528jQuery\u7684\u9009\u62e9\u5668\u62ff\u5230\u8fd9\u4e2a\u8def\u5f84\u53c2\u6570\u3002 //\u5047\u8bbe\u8fd9\u4e2aspan\u6807\u7b7e\u5728\u6211\u4eec\u70b9\u51fb\u7684\u6309\u94ae\u7684\u540e\u9762 var id_url = $(this).next().text(); \u7136\u540e\uff0c\u5728url\u7684data\u4e2d\u5c31\u53ef\u4ee5\u7528\u8fd9\u4e2a\u8def\u5f84\u4e86\uff1a ... $.ajax({ \u3000\u3000url:id_url, \u3000\u3000... }) ... \u89e3\u51b3\u65b9\u68483 \u7b2c\u4e09\u79cd\u89e3\u51b3\u65b9\u6848\u662f\u201c\u8def\u5f84\u62fc\u63a5\u201d\uff5e\u7279\u522b\u6ce8\u610f\uff1a\u8fd9\u91cc\u7684\u8def\u5f84\u5fc5\u987b\u662f\u4e00\u4e2a\u5168\u8def\u5f84\uff01 {# \u83b7\u53d6\u8981\u88ab\u5220\u9664\u7684\u4e66\u7c4d\u7684id #} var del_id = $('#del_id').text(); $.ajax({ {# \u62fc\u63a5\u8def\u5f84 #} url:'/book/del_book/' + del_id +'/', {#url:'{% url \"del_book\" del_id %}', //\u4e0d\u53ef\u4ee5\u8fd9\u6837\u5199#} type:'post', \u3002\u3002\u3002 })","title":"\u5904\u7406\u5e26\u53c2\u6570\u7684\u53cd\u5411\u89e3\u6790"},{"location":"Django\u6838\u5fc3/\u8def\u7531/#_6","text":"\u4e0a\u9762\u4ecb\u7ecd\u4e86\u53cd\u5411\u89e3\u6790\u4e0e\u8def\u7531\u522b\u540d\u7684\u6982\u5ff5\uff0c\u4e5f\u8bb8\u806a\u660e\u7684\u4f60\u4f1a\u63d0\u51fa\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u679c\u5b9e\u9645\u4e2d\u4e0d\u540c\u7684app\u7684url\u51fa\u73b0\u4e86\u76f8\u540c\u7684\u522b\u540d\u600e\u4e48\u529e\u5462\uff1f Django\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86 \u540d\u79f0\u7a7a\u95f4 \u89e3\u51b3\u4e0a\u9762\u7684\u95ee\u9898\u3002 \u8fd9\u91cc\u6211\u505a\u4e86\u4e00\u4e2ademo\u4e3a\u5927\u5bb6\u8be6\u7ec6\u8bb2\u89e3 \u540d\u79f0\u7a7a\u95f4\u7684\u4f7f\u7528 \u3002 \u9996\u5148\uff0c\u6211\u4eec\u65b0\u5efa\u4e00\u4e2a\u540d\u4e3aNameSpace\u7684Django\u9879\u76ee\uff0c\u7136\u540e\u5728\u91cc\u9762\u521b\u5efa\u4e24\u4e2a\u5e94\u7528\uff0c\u5206\u522b\u53ebcustomer\u4e0epayment\uff0c\u8bb0\u5f97\u5728settings\u4e2d\u7684INSTALLED_APPS\u4e2d\u6ce8\u518c\u8fd9\u4e24\u4e2a\u5e94\u7528\uff5e \u63a5\u7740\uff0c\u5728template\u76ee\u5f55\u4e2d\u5206\u522b\u521b\u5efa\u4e24\u4e2a\u9879\u76ee\u7684\u6a21\u677f\u6587\u4ef6\u5939\uff5e\u800c\u4e14\u8ba9\u5176\u4e2d\u7684\u4e24\u4e2a\u7f51\u9875\u540d\u5b57\u4e00\u6837\uff0c\u9879\u76ee\u7684\u5177\u4f53\u7ed3\u6784\u5982\u4e0b\uff1a . \u251c\u2500\u2500 NameSpace # \u4e0e\u9879\u76ee\u540c\u540d\u7684\u76ee\u5f55 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 settings.py \u2502 \u251c\u2500\u2500 urls.py # \u9879\u76ee\u7684\u603b\u8def\u7531 \u2502 \u2514\u2500\u2500 wsgi.py \u251c\u2500\u2500 customer # customer\u5e94\u7528 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 admin.py \u2502 \u251c\u2500\u2500 apps.py \u2502 \u251c\u2500\u2500 migrations \u2502 \u2502 \u2514\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 models.py \u2502 \u251c\u2500\u2500 tests.py \u2502 \u251c\u2500\u2500 urls.py # customer\u5206\u8def\u7531 \u2502 \u2514\u2500\u2500 views.py # customer\u7684\u89c6\u56fe \u251c\u2500\u2500 manage.py \u251c\u2500\u2500 payment # payment\u5e94\u7528 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 admin.py \u2502 \u251c\u2500\u2500 apps.py \u2502 \u251c\u2500\u2500 migrations \u2502 \u2502 \u2514\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 models.py \u2502 \u251c\u2500\u2500 tests.py \u2502 \u251c\u2500\u2500 urls.py # payment\u5206\u8def\u7531 \u2502 \u2514\u2500\u2500 views.py # payment\u7684\u89c6\u56fe \u2514\u2500\u2500 templates # \u6a21\u677f\u76ee\u5f55 \u251c\u2500\u2500 customer \u2502 \u2514\u2500\u2500 index.html # customer\u7684index\u9875\u9762 \u2514\u2500\u2500 payment \u2514\u2500\u2500 index.html # payment\u7684index\u9875\u9762 \u8def\u7531\u5206\u53d1 \u5168\u5c40\u7684urls\u6587\u4ef6\u4e2d\uff08\u8ddf\u9879\u76ee\u540d\u540c\u540d\u7684\u76ee\u5f55\u91cc\u7684\u6587\u4ef6\u6211\u4e60\u60ef\u53eb\u5168\u5c40\u6587\u4ef6\uff09\u505a\u8def\u7531\u5206\u53d1\uff1a urlpatterns = [ path('admin/', admin.site.urls), re_path('^customer/',include('customer.urls')), re_path('^payment/',include('payment.urls')), ] customer\u76ee\u5f55\u4e2d\u65b0\u5efa\u7684urls\u6587\u4ef6 from django.urls import path,re_path from customer import views urlpatterns = [ re_path(r'^index/$',views.index,name='index'), ] payment\u76ee\u5f55\u4e2d\u65b0\u5efa\u7684urls\u6587\u4ef6 from django.urls import path,re_path from payment import views urlpatterns = [ re_path(r'^index/$',views.index,name='index'), ] \u89c6\u56fe\u51fd\u6570 customer\u76ee\u5f55\u4e2d\u7684\u89c6\u56fe\u51fd\u6570 from django.shortcuts import render,HttpResponse from django.urls import reverse def index(request): if request.method == 'GET': url = reverse('index') print('customer_url:',url) return HttpResponse(url) payment\u76ee\u5f55\u4e2d\u7684\u89c6\u56fe\u51fd\u6570 from django.shortcuts import render,HttpResponse from django.urls import reverse def index(request): if request.method == 'GET': url = reverse('index') print('payment:',url) return HttpResponse(url) \u5b58\u5728\u95ee\u9898 \u5927\u5bb6\u53ef\u4ee5\u770b\u5230\uff1a\u6211\u5728\u4e24\u4e2a\u5e94\u7528\u7684\u5206\u53d1\u8def\u7531\u4e2d\u7ed9\u4e24\u4e2a\u4e0d\u540c\u7684index\u8def\u5f84\uff08\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u8bbf\u95eecustomer\u7684indexs\u7684\u8def\u5f84\u5176\u5b9e\u662f/customer/index/\uff0c\u540c\u7406payment\u7684index\u7684\u8def\u5f84\u662f/payment/index/\uff09\u53d6\u4e86\u76f8\u540c\u7684\u522b\u540dindex\uff1b\u800c\u4e14\u5728\u4e0d\u540c\u7684\u89c6\u56fe\u51fd\u6570\u4e2d\u901a\u8fc7\u53cd\u5411\u89e3\u6790\u62ff\u5230\u4e86\u522b\u540dindex\u5bf9\u5e94\u7684\u8def\u5f84\u6253\u5370\u4e86\u51fa\u6765\u5e76\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668\u3002 \u73b0\u5728\u6211\u4eec\u8bd5\u8bd5\u5b9e\u9645\u7684\u8fd0\u884c\u6548\u679c\uff1a \u5f53\u6211\u8bbf\u95eepayment\u7684index\u7684\u65f6\u5019\u786e\u5b9e\u6253\u5370\u51fa\u4e86\u6b63\u786e\u7684\u8def\u5f84\uff1a \u4f46\u662f\uff0c\u5f53\u6211\u8bbf\u95eecustomer\u7684\u8def\u5f84\u7684\u65f6\u5019\u51fa\u9519\u4e86\uff1a\u8fd9\u4e2aurl\u7adf\u7136\u88ab\u53cd\u5411\u89e3\u6790\u6210\u4e86payment\u7684index\u8def\u5f84\uff01 \u8ba9\u6211\u4eec\u518d\u6765\u770b\u770b\u540e\u53f0\u6253\u5370\u7684\u6548\u679c\uff1a\u4ece\u7b2c\u4e8c\u6761\u6570\u636e\u53ef\u4ee5\u770b\u51fa\u6765\uff5e\u6d4f\u89c8\u5668\u660e\u660e\u6536\u5230\u7684\u662fcustomer\u7684get\u8bf7\u6c42\uff0c\u53ef\u662f\u53cd\u5411\u89e3\u6790\u51fa\u6765\u7684index\u7684\u8def\u5f84\u5374\u662f\u53e6\u5916\u4e00\u6761\u8def\u7531\uff01 \u5b9e\u9645\u4e2d\u8fd9\u6837\u51fa\u73b0\u8fd9\u6837\u7684\u95ee\u9898\u662f\u5341\u5206\u5371\u9669\u7684\uff01\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\uff0c\u53ef\u4ee5\u5229\u7528 \u540d\u79f0\u7a7a\u95f4 \u89e3\u51b3\u3002 \u540d\u79f0\u7a7a\u95f4\u89e3\u51b3 \u5229\u7528\u540d\u79f0\u7a7a\u95f4\u53ef\u4ee5\u89e3\u51b3\u4e0a\u9762\u7684\u95ee\u9898\uff5e \u9996\u5148\u6211\u4eec\u5728\u8def\u7531\u5206\u53d1\u7684\u65f6\u5019\u4e3a\u6bcf\u6761\u5206\u53d1\u7684\u8def\u7531\u52a0\u4e0a\u540d\u79f0\u7a7a\u95f4\uff1a urlpatterns = [ path('admin/', admin.site.urls), # \u5206\u53d1\u7684\u65f6\u5019\u52a0\u4e0a\u540d\u79f0\u7a7a\u95f4 re_path('^customer/',include(('customer.urls','customer'))), re_path('^payment/',include(('payment.urls','payment'))), ] \u4e24\u4e2a\u5e94\u7528\u7684\u5206\u53d1\u7684\u8def\u7531\u4e2d\u7684\u5199\u6cd5\u8fd8\u8ddf\u4e0a\u9762\u7684\u4e00\u6837\u3002 \u5728\u89c6\u56fe\u51fd\u6570\u4e2d\u8fdb\u884c\u53cd\u5411\u89e3\u6790\u7684\u65f6\u5019\u4e3a\u6bcf\u4e2a\u522b\u540d\u52a0\u4e0a\u81ea\u5df1\u7684\u540d\u79f0\u7a7a\u95f4\u3002 customer\u7684\u89c6\u56fe\u51fd\u6570\uff1a from django.shortcuts import render,HttpResponse from django.urls import reverse def index(request): if request.method == 'GET': # \u53cd\u5411\u89e3\u6790\u7684\u65f6\u5019\u52a0\u4e0a\u540d\u79f0\u7a7a\u95f4 url = reverse('customer:index') print('customer_url:',url) return HttpResponse(url) payment\u7684\u89c6\u56fe\u51fd\u6570\uff1a from django.shortcuts import render,HttpResponse from django.urls import reverse def index(request): if request.method == 'GET': url = reverse('payment:index') print('payment:',url) return HttpResponse(url) \u6700\u540e\u8ba9\u6211\u4eec\u770b\u770b\u7ed3\u679c\uff1a \uff081\uff09\u8bbf\u95eepayment\u7684\u7ed3\u679c\uff1a \uff082\uff09\u8bbf\u95eecustomer\u7684\u7ed3\u679c\uff1a \uff083\uff09\u6700\u540e\u770b\u770b\u6253\u5370\u7ed3\u679c\uff1a","title":"\u540d\u79f0\u7a7a\u95f4"},{"location":"Django\u6838\u5fc3/\u8def\u7531/#_7","text":"\u5207\u8bb0\uff01\u5b9e\u9645\u5f00\u53d1\u4e2d\u540d\u79f0\u7a7a\u95f4\u4e0d\u80fd\u91cd\u540d\uff01","title":"\u5b9e\u9645\u5f00\u53d1\u4e2d\u540d\u79f0\u7a7a\u95f4\u4e0d\u80fd\u91cd\u540d"},{"location":"Django\u6838\u5fc3/\u8def\u7531/#path","text":"Django2\u7248\u672c\u8def\u7531\u5339\u914d\u65b0\u589e\u4e86 path\u65b9\u6cd5 \uff0c\u53e6\u5916re_path\u65b9\u6cd5\u4e0eDjango1\u7248\u672c\u7684url\u65b9\u6cd5\u7528\u6cd5\u5b8c\u5168\u4e00\u81f4\uff0c\u5176\u5b9e\u5c31\u662f\u6b63\u5219\u5339\u914d\u3002 \u8fd9\u91cc\u7740\u91cd\u4ecb\u7ecd\u4e00\u4e0bpath\u65b9\u6cd5\u3002 path\u65b9\u6cd5\u89e3\u51b3\u7684\u95ee\u9898 \uff081\uff09\u5bf9\u4e8e\u8fd9\u6837\u7684\u8def\u7531\u5339\u914d\uff1a re_path('^index/(?P<year>[0-9]{4})/(?P<month>[0-9]{2})/$',views.index} \u8fd9\u91cc\u7684year\u53c2\u6570\u662fstr\u7c7b\u578b\u7684\u3002\u4f46\u662f\u5b9e\u9645\u4e2d\u5982\u679c\u6211\u4eec\u60f3\u62ff\u5230\u4e00\u4e2aint\u7c7b\u578b\u7684\u503c\u7684\u8bdd\uff0c\u8fd8\u9700\u8981\u8fdb\u884c int(year) \u7684\u8f6c\u6362\u3002 \u505a\u8fd9\u79cd\u8f6c\u6362\u662f\u6709\u98ce\u9669\u7684\uff0c\u5b9e\u9645\u4e2d\u53ef\u80fd\u4f1a\u51fa\u73b0 TypeError \u6216\u8005 ValueError \u5f02\u5e38\uff0c\u4f7f\u7528path\u65b9\u6cd5\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u79cd\u8f6c\u5316\u5728Django\u5185\u90e8\u81ea\u52a8\u5b8c\u6210\u3002 \uff082\uff09\u8fd8\u662f\u62ff\u4e0a\u9762\u7684\u8def\u7531\u5339\u914d\u4e3a\u4f8b\uff0c\u5bf9\u4e8eyear\u8fd9\u4e2a\u53d8\u91cf\uff0c\u5982\u679c\u4e09\u4e2a\u8def\u7531\u4e2d\u90fd\u6709\u5b83\u7684\u8bdd\u6211\u4eec\u5f97\u5199\u4e09\u904d\uff1a re_path('^index/(?P<year>[0-9]{4})/$',views.index1}, re_path('^index/(?P<year>[0-9]{4})/(?P<month>[0-9]{2})/$',views.index2}, re_path('^index/(?P<year>[0-9]{4})/(?P<month>[0-9]{2})/666/$',views.index3} \u800c\u4f7f\u7528path\u65b9\u6cd5\u53ea\u9700\u8981\u505a\u4e00\u5904\u4fee\u6539\u5373\u53ef\u3002 \u4f7f\u7528path\u65b9\u6cd5\u89e3\u51b3\u4e0a\u9762\u95ee\u9898 rom django.urls import path,re_path from blog import views urlpatterns = [ re_path('^login$/',views.login,name='LOGIN'), # \u6709\u540d\u5206\u7ec4 re_path('^articles/(?P<y>[0-9]{4})/(?P<m>[a-zA-Z0-9]+$)',views.get_y_m), ### path\u65b9\u6cd5 #\u8fd9\u91cc\u7684int\u662f\u5185\u7f6e\u7684\u8f6c\u6362\u5668 path('articles/<int:year>/<int:month>/',views.get_year_month), ] \u5bf9\u5e94\u7684\u89c6\u56fe\u51fd\u6570\u5982\u4e0b\uff1a from django.shortcuts import render,HttpResponse # Create your views here. def login(request): if request.method == 'GET': return render(request,'login.html') elif request.method == 'POST': user = request.POST.get('user') pwd = request.POST.get('pwd') if user == 'whw' and pwd == '123': return HttpResponse('OK!') else: return HttpResponse('ERROR!') def get_y_m(request,m,y): print(y) print(type(y))#\u8fd9\u91cc\u9ed8\u8ba4\u7684\u662fstr\u7c7b\u578b return HttpResponse('y:%s;m:%s'%(y,m)) def get_year_month(request,year,month): print(year,minth) print(type(year),type(month)) return HttpResponse(year,month) path\u7684\u57fa\u672c\u89c4\u5219\u5982\u4e0b\uff1a \u4f7f\u7528\u5c16\u62ec\u53f7(<>)\u4eceurl\u4e2d\u6355\u83b7\u503c\u3002 \u6355\u83b7\u503c\u4e2d\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u8f6c\u5316\u5668\u7c7b\u578b\uff08converter type\uff09\uff0c\u6bd4\u5982\u4f7f\u7528 \u6355\u83b7\u4e00\u4e2a\u6574\u6570\u53d8\u91cf\u3002 \u82e5\u679c\u6ca1\u6709\u8f6c\u5316\u5668\uff0c\u5c06\u5339\u914d\u4efb\u4f55\u5b57\u7b26\u4e32\uff0c\u5f53\u7136\u4e5f\u5305\u62ec\u4e86 / \u5b57\u7b26\u3002 \u65e0\u9700\u6dfb\u52a0\u524d\u5bfc\u659c\u6760\u3002","title":"path\u65b9\u6cd5"},{"location":"Django\u6838\u5fc3/\u8def\u7531/#path-converters","text":"\u8fd9\u91cc\u5c31\u628a\u5b83\u7ffb\u8bd1\u6210 path\u8f6c\u6362\u5668 \u5427\u3002 5\u79cd\u9ed8\u8ba4\u8f6c\u6362\u5668 1\u3001str,\u5339\u914d\u9664\u4e86\u8def\u5f84\u5206\u9694\u7b26\uff08/\uff09\u4e4b\u5916\u7684\u975e\u7a7a\u5b57\u7b26\u4e32\uff0c\u8fd9\u662f\u9ed8\u8ba4\u7684\u5f62\u5f0f 2\u3001int,\u5339\u914d\u6b63\u6574\u6570\uff0c\u5305\u542b0\u3002 #slug\u7528\u7684\u6bd4\u8f83\u591a\u2014\u2014\u76f8\u5f53\u4e8e\u5339\u914d\u4e0b\u9762\u7684\u5b57\u7b26\u4e32\u2014\u2014\u7701\u53bb\u4e86\u6b63\u5219\u8868\u8fbe\u5f0f 3\u3001slug,\u5339\u914d\u5b57\u6bcd\u3001\u6570\u5b57\u4ee5\u53ca\u6a2a\u6760\u3001\u4e0b\u5212\u7ebf\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u3002 4\u3001uuid,\u5339\u914d\u683c\u5f0f\u5316\u7684uuid\uff0c\u5982 075194d3-6885-417e-a8a8-6c931e272f00\uff09\u2014\u2014 \u6ce8\u610f\u4e0d\u80fd\u7528 ? \uff0c\u5b83\u662fGET\u8bf7\u6c42\u6570\u636e\u5de6\u53f3\u90e8\u5206\u7684\u5206\u9694\u7b26\uff01 5\u3001path,\u5339\u914d\u4efb\u4f55\u975e\u7a7a\u5b57\u7b26\u4e32\uff0c\u5305\u542b\u4e86\u8def\u5f84\u5206\u9694\u7b26 \u81ea\u5b9a\u4e49\u8f6c\u6362\u5668\u7684\u4f7f\u7528 \u5bf9\u4e8e\u4e00\u4e9b\u590d\u6742\u6216\u8005\u590d\u7528\u7684\u9700\u8981\uff0c\u53ef\u4ee5\u5b9a\u4e49\u81ea\u5df1\u7684\u8f6c\u5316\u5668\u3002\u8f6c\u5316\u5668\u662f\u4e00\u4e2a\u7c7b\u6216\u63a5\u53e3\uff0c\u5b83\u7684\u8981\u6c42\u6709\u4e09\u70b9\uff1a 1\u3001regex \u7c7b\u5c5e\u6027\uff0c\u5b57\u7b26\u4e32\u7c7b\u578b 2\u3001to_python(self, value) \u65b9\u6cd5\uff0cvalue\u662f\u7531\u7c7b\u5c5e\u6027 regex \u6240\u5339\u914d\u5230\u7684\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u5177\u4f53\u7684Python\u53d8\u91cf\u503c\uff0c\u4ee5\u4f9bDjango\u4f20\u9012\u5230\u5bf9\u5e94\u7684\u89c6\u56fe\u51fd\u6570\u4e2d\u3002 3\u3001to_url(self, value) \u65b9\u6cd5\uff0c\u548c to_python \u76f8\u53cd\uff0cvalue\u662f\u4e00\u4e2a\u5177\u4f53\u7684Python\u53d8\u91cf\u503c\uff0c\u8fd4\u56de\u5176\u5b57\u7b26\u4e32\uff0c\u901a\u5e38\u7528\u4e8eurl\u53cd\u5411\u5f15\u7528\u3002 \u4e00\u4e2a\u81ea\u5b9a\u4e49\u8f6c\u6362\u5668\u7684\u4f8b\u5b50 (1)\u5728blog\u5e94\u7528\u4e2d\uff0c\u65b0\u5efa\u4e00\u4e2aurl_convert.py\u6587\u4ef6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u65b0\u5efa\u4e00\u4e2a\u7c7b \u6ce8\u610f\u8fd9\u4e2a\u7c7b\u7684\u540d\u5b57\u53ef\u4ee5\u968f\u4fbf\u53d6\uff0c\u4f46\u662f\u7c7b\u4e2d\u7684\u5c5e\u6027\u4e0e\u65b9\u6cd5\u540d\u662f\u56fa\u5b9a\u7684\uff01 class FourDigitYearConverter: #\u89c4\u5219\u5b57\u7b26\u4e32 regex = '[0-9]{4}' #to_python\u65b9\u6cd5 def to_python(self, value): return int(value) #to_url\u65b9\u6cd5\u2014\u2014\u7528\u4e8e\u53cd\u5411\u89e3\u6790 def to_url(self, value): return '%04d' % value (2)\u4f7f\u7528register_converter \u5c06\u5176\u6ce8\u518c\u5230URL\u914d\u7f6e\u4e2d #\u5728blog\u7684url.py\u6587\u4ef6\u4e2d\u6ce8\u518c\uff1a from django.urls import register_converter, path #\u5c06\u5199\u597d\u7684url_convert\u5f15\u5165\uff1a from blog import url_convert, views #\u7528yyyy\u505a\u66ff\u6362\uff1a register_converter(url_convert.FourDigitYearConverter, 'yyyy') from django.urls import path,re_path,register_converter from blog import views,url_convert register_converter(url_convert.four_year_to_int,'yyyy') urlpatterns = [ re_path('^login/$',views.login,name='LOGIN'), #\u6709\u540d\u5206\u7ec4+\u53cd\u5411\u89e3\u6790 re_path('^articles/(?P<y>[0-9]{4})/(?P<m>[a-zA-Z]+)/$',views.get_y_m), path('articles/<yyyy:year>/<yyyy:month>',views.get_year_month), ] #\u6ce8\u610f\u6d4f\u89c8\u5668\u4e2d\u8981\u8fd9\u6837\u5199\uff1ahttp://127.0.0.1:8000/blog/articles/1000/1234 #year\u8ddfmonth\u90fd\u662f4\u4f4d\uff0c\u56e0\u4e3a\u89c4\u5219\u662f\uff1aregex = '[0-9]{4}'","title":"path converters"},{"location":"Django\u7ec4\u4ef6/Django\u4e2dcontenttypes\u7ec4\u4ef6\u7684\u4f7f\u7528/","text":"contenttypes\u662fDjango\u5185\u7f6e\u7684\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u7ec4\u4ef6\uff0c\u5b83\u5bf9\u5f53\u524d\u9879\u76ee\u4e2d\u6240\u6709\u57fa\u4e8eDjango\u9a71\u52a8\u7684model\u63d0\u4f9b\u4e86\u66f4\u9ad8\u5c42\u6b21\u7684\u63a5\u53e3\uff0c\u7b80\u5355\u70b9\u8bf4\uff0c\u5b83\u53ef\u4ee5\u8ffd\u8e2a\u9879\u76ee\u4e2d\u6240\u6709\u7684\u5e94\u7528\u4e0emodel\u7684\u5bf9\u5e94\u5173\u7cfb\u5e76\u5c06\u8fd9\u4e9b\u5173\u7cfb\u8bb0\u5f55\u5728ContentType\u8868\u4e2d\uff0c\u6bcf\u5f53\u6211\u4eec\u521b\u5efa\u4e86\u65b0\u7684model\u5e76\u6267\u884c\u6570\u636e\u5e93\u8fc1\u79fb\u6307\u4ee4\u540e\uff0cContentType\u8868\u4e2d\u5c31\u4f1a\u81ea\u52a8\u65b0\u589e\u4e00\u6761\u4e0d\u540c\u5e94\u7528\u548c\u8fd9\u4e2a\u5e94\u7528\u4e2d\u7684model\u4e4b\u95f4\u5bf9\u5e94\u5173\u7cfb\u7684\u8bb0\u5f55\uff1b\u66f4\u91cd\u8981\u7684\u662f\uff0c\u6211\u4eec\u4e0d\u4ec5\u53ef\u4ee5\u4f7f\u7528contenttypes\u63d0\u4f9b\u7684 GenericForeignKey\u7c7b \u4e0e GenericReleation\u7c7b \u53bb\u907f\u514d\u56e0\u5927\u91cf\u590d\u6742\u7684ORM\u67e5\u8be2\u5bfc\u81f4\u7684\u7a0b\u5e8f\u6548\u7387\u964d\u4f4e\uff0c\u800c\u4e14\u5728\u5b9e\u9645\u9879\u76ee\u4e2d\u4f7f\u7528contenttypes\u8fd8\u4f1a\u4f18\u5316\u9879\u76ee\u6570\u636e\u5e93\u8868\u7ed3\u6784\u7684\u8bbe\u8ba1\uff0c\u907f\u514d\u6570\u636e\u5e93\u4e2d\u4ea7\u751f\u8bb8\u591a\u65e0\u7528\u7684\u6570\u636e\u3002 \u672c\u6587\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u4e1a\u52a1\u4e3a\u4f8b\u8be6\u7ec6\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u4e00\u4e0b\u4f7f\u7528contenttypes\u7ec4\u4ef6\u6709\u4f55\u4f18\u70b9\u3001\u7ec4\u4ef6\u7684\u5177\u4f53\u7528\u6cd5\u53ca\u5176\u4f7f\u7528\u573a\u666f\u7b49\u7b49\u3002 Django\u4e2d\u7684contenttypes\u7ec4\u4ef6 \u5047\u5982\u8bf4\uff0c\u516c\u53f8A\u7684\u4e3b\u8981\u4e1a\u52a1\u662f\u57f9\u8bad\u9752\u5c11\u5e74\u4eba\u5de5\u667a\u80fd\u4e0e\u673a\u5668\u4eba\u6280\u672f\uff0c\u4e3b\u8981\u5206\u7c7b\u662f \u57fa\u7840\u8bfe\u7a0b \u4e0e \u9ad8\u7ea7\u8bfe\u7a0b \uff0c\u800c\u8fd9\u4e24\u4e2a\u5927\u7684\u5206\u7c7b\u4e2d\u53c8\u6709\u5176\u4ed6\u5177\u4f53\u7684\u8bfe\u7a0b\u3002\u6bcf\u4e2a\u8bfe\u7a0b\u6839\u636e\u57f9\u8bad\u5468\u671f\u7684\u4e0d\u540c\u57f9\u8bad\u8d39\u7528\u7684\u8ba1\u7b97\u65b9\u5f0f\u4e5f\u4e0d\u4e00\u6837\u3002\u4e5f\u8bb8\u6ca1\u6709\u505a\u8fc7\u76f8\u5173\u4e1a\u52a1\u7684\u540c\u5b66\u8fd8\u6ca1\u6709get\u5230\u76f8\u5173\u7684\u70b9\uff0c\u8fd9\u91cc\u6211\u5148\u7c97\u7565\u7684\u753b\u4e00\u4e0b\u8868\u7ed3\u6784\uff0c\u540e\u9762\u518d\u8be6\u7ec6\u9610\u8ff0\u3002 \u521d\u7248\u8868\u7ed3\u6784\u8bbe\u8ba1 \u5982\u679c\u4e0d\u7528contenttypes\uff0c\u5927\u81f4\u7684\u8868\u7ed3\u6784\u4f1a\u8fd9\u4e48\u8bbe\u8ba1\uff1a \u7531\u4e0a\u56fe\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u57fa\u7840\u8bfe\u7a0b\u4e0e\u9ad8\u7ea7\u8bfe\u7a0b\u4e0b\u6709\u591a\u4e2a\u4e0d\u540c\u7684\u5b50\u8bfe\u7a0b\u3002 \u63a5\u4e0b\u6765\u770b\u4e00\u4e0b \u4ef7\u683c\u7b56\u7565 \u8fd9\u5f20\u8868\uff0c\u6bcf\u4e2a\u5c0f\u8bfe\u7a0b\uff08\u6bd4\u5982Python\u521d\u7ea7\u4e0ePython\u9ad8\u7ea7\uff09\u7531\u4e8e\u57f9\u8bad\u5468\u671f\u7684\u4e0d\u540c\u4ef7\u683c\u662f\u4e0d\u4e00\u6837\u7684 \uff08\u8fd9\u91cc\u53ea\u662f\u6a21\u62df\uff0c\u8bf7\u52ff\u5bf9\u53f7\u5165\u5ea7\uff09 \uff0c\u5e76\u4e14PricePolicy\u8868\u4e2d journeycourse_id \u4e0e seniorcourse_id \u662f\u4e0e\u4e24\u4e2a\u8bfe\u7a0b\u8868\u5efa\u7acb\u5916\u952e\u7684\u5b57\u6bb5\u2014\u2014\u6b64\u65f6\u806a\u660e\u7684\u4f60\u7acb\u523b\u5c31\u53d1\u73b0\u95ee\u9898\u4e86\uff1a\u521d\u7ea7\u8bfe\u7a0b\u7684\u5468\u671f\u6700\u591a\u5468\u671f\u53ea\u670921\u5929\uff0c\u800c\u9ad8\u7ea7\u8bfe\u7a0b\u7684\u57f9\u8bad\u5468\u671f\u662f\u6309\u6708\u6765\u8ba1\u7b97\u7684\uff01\u5982\u679c\u8fd9\u6837\u4f1a\u5bfc\u81f4\u6570\u636e\u5e93\u4e2d\u4ea7\u751f\u8bb8\u591a\u65e0\u7528\u7684\u7a7a\u6570\u636e\uff01 \u4e0a\u9762\u8fd9\u4e2a\u95ee\u9898\u8fd9\u662f\u4e00\u4e2a\u5f88\u5178\u578b\u7684 \u4e00\u5f20\u8868\u4e0e\u591a\u5f20\u8868\u52a8\u6001\u7684\u521b\u5efaForeignKey\u5173\u7cfb \u7684\u95ee\u9898\uff0c\u800c\u8981\u89e3\u51b3\u4e0a\u9762\u4ea7\u751f\u65e0\u7528\u6570\u636e\u7684\u95ee\u9898 \u53ef\u4ee5\u9009\u62e9\u4f7f\u7528Django\u4e2d\u7684contenttypes \u3002 \u4f7f\u7528contenttypes\u7684\u8868\u7ed3\u6784 \u8be6\u7ec6\u8bf4\u660e\u5982\u4e0b\uff1a \u65b0\u589e\u4e86\u4e00\u4e2aContentType\u8868\uff08settings\u4e2d\u9ed8\u8ba4\u6ce8\u518c\u4e86contenttypes\u7ec4\u4ef6\uff0cDjango\u542f\u52a8\u65f6\u4f1a\u81ea\u52a8\u751f\u6210\uff09\uff0c\u8fd9\u4e2a\u8868\u4e2d\u5b58\u653e\u4e86model\u7684\u540d\u79f0\uff1b \u4ef7\u683c\u7b56\u7565\u8868\u4e2d\u7684content_type_id\u5b57\u6bb5\u662f PricePolicy \u8868\u4e0e ContentType \u8868\u4e4b\u95f4\u5916\u952e\u5173\u8054\u7684\u5b57\u6bb5\uff1b \u4ef7\u683c\u7b56\u7565\u8868\u4e2d\u7684object_id\u5b57\u6bb5\u5bf9\u5e94\u7684\u662f \u57fa\u7840\u8bfe\u7a0b \u6216\u8005 \u9ad8\u7ea7\u8bfe\u7a0b \u4e2d\u5177\u4f53\u7684\u5b50\u7c7b\u8bfe\u7a0b\u7684id\uff1b \u5728\u4ef7\u683c\u7b56\u7565\u8868\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u5927\u8bfe\u7a0b\u7684\u5206\u7c7b content_type_id \u3001\u5b50\u8bfe\u7a0b\u7684id object_id \u4ee5\u53ca\u57f9\u8bad\u7684\u5468\u671f period \u786e\u5b9a\u4e00\u6761\u552f\u4e00\u7684\u8bb0\u5f55\uff01 \u7279\u522b\u6ce8\u610f object_id \u53ea\u662f\u4e00\u4e2a\u666e\u901a\u7684\u5b57\u6bb5\uff0c\u5b83\u5e76\u6ca1\u6709\u4e0e\u4efb\u4f55\u8868\u5efa\u7acb\u5916\u952e\u5173\u8054\uff01 \u8fd9\u6837\u8bbe\u8ba1\u7684\u8bdd\u5c31\u4e0d\u4f1a\u51fa\u73b0\u4e0a\u9762\u90a3\u79cd\u7a7a\u7684\u65e0\u6548\u6570\u636e\u4e86\uff01 contenttypes\u7684\u5177\u4f53\u5b9e\u73b0 \u8001\u89c4\u77e9\uff0c\u5148\u4e0a\u4ee3\u7801\uff0c\u540e\u9762\u7ed9\u51fa\u5177\u4f53\u7684\u8bf4\u660e\uff01 \u9879\u76ee\u5e94\u7528\u4e2d\u7684models.py\u6587\u4ef6\u5982\u4e0b\uff1a from django.db import models from django.contrib.contenttypes.models import ContentType from django.contrib.contenttypes.fields import GenericForeignKey,GenericRelation class JuniorCourse(models.Model): \"\"\"\u521d\u7ea7\u8bfe\u7a0b\"\"\" name = models.CharField(max_length=64,verbose_name='\u521d\u7ea7\u8bfe\u7a0b\u540d\u79f0') course_img = models.CharField(max_length=255, verbose_name=\"\u8bfe\u7a0b\u7f29\u7565\u56fe\") brief = models.TextField(verbose_name=\"\u521d\u7ea7\u8bfe\u7a0b\u7b80\u4ecb\", ) # \u4e0d\u4f1a\u5728\u6570\u636e\u5e93\u4e2d\u751f\u6210\u5217\uff0c\u53ea\u662f\u5e2e\u6211\u4eec\u6dfb\u52a0\u4e0e\u67e5\u8be2\u6570\u636e\u7528\u7684 # \u5efa\u7acbGenericRelation\u7684\u5b57\u6bb5\u5982\u679c\u88ab\u5220\u9664\u7684\u8bdd\uff0cPricePolicy\u4e2d\u5bf9\u5e94\u7684\u8bb0\u5f55\u4e5f\u4f1a\u88ab\u5220\u6389\uff01 policy_lst = GenericRelation('PricePolicy') class SeniorCourse(models.Model): \"\"\"\u9ad8\u7ea7\u8bfe\u7a0b\"\"\" name = models.CharField(max_length=64, verbose_name='\u8fdb\u9636\u7ea7\u8bfe\u7a0b\u540d\u79f0') course_img = models.CharField(max_length=255, verbose_name=\"\u8bfe\u7a0b\u7f29\u7565\u56fe\") brief = models.TextField(verbose_name=\"\u8fdb\u9636\u7ea7\u8bfe\u7a0b\u7b80\u4ecb\", ) # \u4e0d\u4f1a\u5728\u6570\u636e\u5e93\u4e2d\u751f\u6210\u5217\uff0c\u53ea\u662f\u5e2e\u6211\u4eec\u6dfb\u52a0\u4e0e\u67e5\u8be2\u6570\u636e\u7528\u7684 # \u5efa\u7acbGenericRelation\u7684\u5b57\u6bb5\u5982\u679c\u88ab\u5220\u9664\u7684\u8bdd\uff0cPricePolicy\u4e2d\u5bf9\u5e94\u7684\u8bb0\u5f55\u4e5f\u4f1a\u88ab\u5220\u6389\uff01 policy_lst = GenericRelation('PricePolicy') class PricePolicy(models.Model): \"\"\"\u4ef7\u683c\u7b56\u7565\u2014\u2014\u8bfe\u7a0b\u6709\u6548\u671f\u4e0e\u4ef7\u683c\u8868\"\"\" # \u4e0eContentType\u8868\u505a\u5173\u8054 \u2014\u2014 \u627e\u5230\u5927\u7684\u5206\u7c7b content_type = models.ForeignKey(to=ContentType,on_delete=models.CASCADE) # \u5bf9\u5e94\"\u5927\u5206\u7c7b\u4e2d\u7684\u8bfe\u7a0b\u7684id\"\uff0c\u7528\u6b63\u6574\u6570\u8868\u793a \u2014\u2014 \u540d\u5b57\u5fc5\u987b\u53ebobject_id object_id = models.PositiveIntegerField() # \u4e0d\u4f1a\u5728\u6570\u636e\u5e93\u4e2d\u751f\u6210\u5217\uff0c\u53ea\u662f\u5e2e\u6211\u4eec\u6dfb\u52a0\u4e0e\u67e5\u8be2\u67e5\u8be2\u6570\u636e\u7528\u7684 content_object = GenericForeignKey('content_type','object_id') valid_period_choices = ( (1,'1\u5929'), (3,'3\u5929'), (7,'1\u5468'), (14,'2\u5468'), (21,'3\u5468'), (30,'1\u4e2a\u6708'), (60,'2\u4e2a\u6708'), (90,'3\u4e2a\u6708'), ) valid_period = models.SmallIntegerField(choices=valid_period_choices,verbose_name='\u8bfe\u7a0b\u5468\u671f') price = models.DecimalField(max_digits=8,decimal_places=1) \u8be6\u7ec6\u8bf4\u660e\u5982\u4e0b\uff1a 1\u3001 \u5927\u5bb6\u9996\u5148\u8981\u6ce8\u610f\u4e00\u70b9\uff1a\u7531\u4e8e\u9879\u76ee\u7684settings.py\u6587\u4ef6\u4e2d\u9ed8\u8ba4\u6ce8\u518c\u4e86 django.contrib.contenttypes \u8fd9\u4e2a\u7ec4\u4ef6\uff0c\u6240\u4ee5\u6211\u4eec\u5728 \u6267\u884c\u6570\u636e\u5e93\u8fc1\u79fb\u6307\u4ee4 \u7684\u65f6\u5019\uff0cDjango\u4f1a\u81ea\u52a8\u4e3a\u6211\u4eec\u521b\u5efa\u4e00\u5f20\u94ed\u6587 django_content_type \u7684\u8868\uff0c\u5b58\u653e\u9879\u76ee\u5e94\u7528\u4e0e\u5e94\u7528\u91cc\u9762model\u5bf9\u5e94\u5173\u7cfb\uff1a \u53ef\u4ee5\u770b\u5230\uff0c\u6700\u4e0b\u9762\u90a3\u4e09\u6761\u8bb0\u5f55\u5c31\u662f\u6211\u4e0a\u9762\u7684\u4ee3\u7801\u6267\u884c \u6570\u636e\u5e93\u8fc1\u79fb\u6307\u4ee4 \u540e\u751f\u6210\u7684\u2014\u2014\u6211\u7684\u5e94\u7528\u540d\u53ebtestapp\u3002 2\u3001 \u5f15\u7528\u8fd9\u5f20 django_content_type \u8868\u7684\u65b9\u5f0f\u662f\uff1a from django.contrib.contenttypes.models import ContentType \u6ce8\u610f\u4e0d\u8981\u6539\u8fd9\u5f20\u8868\uff01\u6211\u4eec\u4ece\u91cc\u9762\u67e5\u6570\u636e\u5c31\u597d\u4e86\u2014\u2014\u57fa\u672c\u4e0a\u90fd\u662f\u67e5model\u3002 3\u3001 \u6211\u4eec\u6765\u770b\u4e00\u4e0b PricePolicy \u8fd9\u4e2a\u7c7b\uff1a\u9996\u5148\u5b83\u4e0eContentType\u8868\u5efa\u7acb\u4e86\u5916\u952e\u5173\u8054\uff0c content_object \u8fd9\u4e2a\u5c5e\u6027\u662f GenericForeignKey \u7c7b\u5b9e\u4f8b\u5316\u7684\u5bf9\u8c61\uff0c\u53c2\u6570\u662f\u4e0a\u9762\u7684 content_type \u4e0e object_id \u5c5e\u6027\u2014\u2014\u8fd9\u6b65\u64cd\u4f5c\u4e0d\u4f1a\u5728\u6570\u636e\u5e93\u4e2d\u521b\u5efa\u65b0\u7684\u5217\uff0c\u662f\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u540e\u7eed\u6dfb\u52a0\u4e0e\u67e5\u8be2\u6570\u636e\u7528\u7684\u3002\u6211\u4eec\u5728\u77e5\u9053\u4e86\u4ef7\u683c\u7b56\u7565\u7684\u6761\u4ef6\u4e0b\u53ef\u4ee5\u6839\u636e GenericForeignKey \u5bf9\u5e94\u7684\u5c5e\u6027\u67e5\u5230\u5177\u4f53\u7684\u8bfe\u7a0b\u3002 4\u3001 GenericRelation \u5199\u5728\u4e86\u5177\u4f53\u8bfe\u7a0b\u7684\u7c7b\u4e0b\u9762\uff0c\u6211\u4eec\u53ef\u4ee5\u5b83\u5b9e\u4f8b\u5316\u7684\u5c5e\u6027\uff0c\u62ff\u8bfe\u7a0b\u5bf9\u8c61\u53bb\u67e5\u8be2\u8fd9\u4e2a\u8bfe\u7a0b\u5bf9\u5e94\u7684\u4ef7\u683c\u7b56\u7565\u90fd\u6709\u54ea\u4e9b\u2014\u2014\u4f46\u662f\u8981\u6ce8\u610f\u4e00\u70b9\uff1aGenericRelation\u5bf9\u5e94\u5b57\u6bb5\u7684\u5bf9\u8c61\u5982\u679c\u88ab\u5220\u9664\u7684\u8bdd\uff0cPricePolicy\u4e2d\u5bf9\u5e94\u7684\u8bb0\u5f55\u4e5f\u4f1a\u88ab\u5220\u6389\uff01\u4e5f\u5c31\u662f\u8bf4\uff0c\u6839\u636e\u4e0a\u9762\u5efa\u7acb\u7684model\u5173\u7cfb\uff0c\u5982\u679c\u6211\u5220\u9664\u4e86\u4e00\u6761seniorcourse\u4e2d\u7684\u8bb0\u5f55\uff0c\u90a3\u4e0e\u8fd9\u6761\u8bb0\u5f55\u5bf9\u5e94\u7684pricepolicy\u4e2d\u7684\u8bb0\u5f55\u4e5f\u4f1a\u88ab\u5220\u9664\uff01 \u89c6\u56fe\u51fd\u6570\u4e2d\u7684\u589e\u5220\u6539\u67e5 \u4e0a\u9762\u4ecb\u7ecd\u4e86\u5728 models.py \u4e2d\u5982\u4f55\u7528contenttypes\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u770b\u770b\u5982\u4f55\u5728\u89c6\u56fe\u51fd\u6570\u4e2d\u4f7f\u7528\u5b83\u3002 \u5411\u4ef7\u683c\u7b56\u7565\u8868\u4e2d\u6dfb\u52a0\u6570\u636e \u7531\u4e8e\u4e0a\u9762\u7684 models.py \u6587\u4ef6\u4e2d\u6211\u4eec\u5728 PricePolicy \u7c7b\u4e2d\u5b9a\u4e49\u4e86 content_object \u8fd9\u4e2a GenericForeignkey \u7c7b\u7684\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u5728\u521b\u5efa\u6570\u636e\u7684\u65f6\u5019\u76f4\u63a5\u6307\u5b9a content_object \u5c31\u53ef\u4ee5\u4e86\uff1a # \u4e0eseniorcourse\u8868\u7684\u5173\u7cfb models.PricePolicy.objects.create( valid_period=7, price=123.45, # \u76f4\u63a5\u6839\u636eSeniorCourse\u5bf9\u8c61\u6dfb\u52a0 content_object = models.SeniorCourse.objects.get(pk=2), ) # \u4e0ejuniorcourse\u8868\u7684\u5173\u7cfb models.PricePolicy.objects.create( valid_period=3, price=35.66, # # \u76f4\u63a5\u6839\u636eJuniorCourse\u5bf9\u8c61\u6dfb\u52a0 content_object = models.JuniorCourse.objects.get(pk=1), \u5176\u4ed6\u4e24\u5f20\u8bfe\u7a0b\u8868\u76f4\u63a5\u6dfb\u52a0\u6570\u636e\u5c31\u597d\u4e86\uff0c\u6ca1\u6709\u4efb\u4f55\u7684\u7ea6\u675f\u3002 \u6839\u636e\u67d0\u4e2a\u4ef7\u683c\u7b56\u7565\u5bf9\u8c61\u53bb\u627e\u4e0e\u5b83\u5bf9\u5e94\u7684\u8868\u7684\u6570\u636e \u8fd9\u91cc\u5176\u5b9e\u8fd8\u662f\u5229\u7528\u4e86 GenericForeignKey \uff0c\u81ea\u52a8 \u8de8\u8868\u67e5\u8be2 \uff1a from django.contrib.contenttypes.models import ContentType # \u5728ContentType\u8868\u4e2d\u627e\u5230\u5177\u4f53\u7684\u8868 contenttype_obj = ContentType.objects.get(model='seniorcourse') # \u627e\u5230\u4ef7\u683c\u7b56\u7565\u5bf9\u8c61 # \u6ce8\u610fget\u662f\u67e5\u8be2\u552f\u4e00\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5\u7ed9\u51fa\u7684\u6761\u4ef6\u5fc5\u987b\u4fdd\u8bc1\u53ea\u67e5\u5230\u4e00\u4e2a\u5bf9\u8c61\uff01 obj=models.PricePolicy.objects.get(content_type=contenttype_obj,object_id=1,valid_period=) ### \u76f4\u63a5\u201c\u8de8\u8868\u67e5\u8be2\u201d\u5c31\u597d\u4e86 print(obj.content_object.name) \u627e\u5230\u67d0\u4e2a\u8bfe\u7a0b\u76f8\u5173\u7684\u6240\u6709\u4ef7\u683c\u7b56\u7565 * \u8fd9\u4e2a\u5728\u5b9e\u9645\u4e2d\u7528\u7684\u8fd8\u662f\u5f88\u591a\u7684\uff01\u8fd9\u91cc\u7528\u5230\u4e86 GenericRelation \uff0c\u4e5f\u5c31\u662f\u4e0a\u9762 models.py \u6587\u4ef6\u4e2d\u5b9a\u4e49\u5728\u9ad8\u7ea7\u8bfe\u7a0b\u4e0e\u521d\u7ea7\u8bfe\u7a0b\u7c7b\u4e2d\u7684\u90a3\u4e24\u4e2a\u5c5e\u6027\u3002 obj = models.SeniorCourse.objects.get(pk=1) # \u6ce8\u610f\u8fd9\u91cc\u5fc5\u987b\u7528all()\u65b9\u6cd5 for i in obj.policy_lst.all(): print(i.pk,i.valid_period,i.price) \u8bfe\u7a0b\u4e2d\u5982\u679c\u7528\u4e86GenericRelation\u7c7b\u5b9e\u4f8b\u5316\u51fa\u6765\u7684\u5bf9\u8c61\u4f5c\u4e3a\u5c5e\u6027\u7684\u8bdd\uff0c\u5220\u9664\u8bfe\u7a0b\u4e2d\u7684\u6570\u636e\u65f6\uff0c\u4ef7\u683c\u7b56\u7565\u4e2d\u4e0e\u4e4b\u76f8\u5173\u7684\u6570\u636e\u4e5f\u4f1a\u4e00\u8d77\u88ab\u5220\u9664\uff01 # \u5220\u9664\u4e86SeniorCourse\u4e2d\u7684\u4e00\u4e2a\u8bfe\u7a0b\u540e\uff0cPricePublic\u4e2d\u4e0e\u4e4b\u76f8\u5173\u7684\u6570\u636e\u90fd\u5220\u9664\u4e86\uff01\uff01\uff01 models.SeniorCourse.objects.get(pk=1).delete() contenttypes\u4f7f\u7528\u5c0f\u7ed3 \u6839\u636e\u4e0a\u9762\u7684\u4ecb\u7ecd\uff0c\u5176\u5b9econtenttypes\u7684\u4f7f\u7528\u5927\u81f4\u5206\u4e3a\u8fd9\u51e0\u6b65\uff1a \u521b\u5efaContentType\u8868\uff08Django\u7684settings\u4e2d\u9ed8\u8ba4\u6ce8\u518c\u4e86contenttypes\u5e94\u7528\uff0c\u542f\u52a8\u65f6\u4f1a\u81ea\u52a8\u751f\u6210\uff09\uff1b \u4ef7\u683c\u7b56\u7565\u8868\u4e0eContentType\u8868\u5efa\u7acb\u5916\u952e\u5173\u8054\u5173\u7cfb\uff1b \u5b9a\u4e49 GenericForeignKey \u5c5e\u6027\uff0c\u6839\u636e\u4ef7\u683c\u7b56\u7565\u8868\u4e2d\u7684\u8bb0\u5f55\u53bb\u67e5\u8be2\u5177\u4f53\u8bfe\u7a0b\u7684\u4fe1\u606f\u6216\u8005\u6839\u636e\u8bfe\u7a0b\u5bf9\u8c61\u521b\u5efa\u4ef7\u683c\u7b56\u7565\u7684\u8bb0\u5f55\uff1b \u5b9a\u4e49 GenericRelation \u7684\u5c5e\u6027\uff0c\u6839\u636e\u5177\u4f53\u7684\u8bfe\u7a0b\u5bf9\u8c61\u5728\u4ef7\u683c\u7b56\u7565\u8868\u4e2d\u67e5\u627e\u4e0e\u8fd9\u4e2a\u8bfe\u7a0b\u76f8\u5173\u7684\u6240\u6709\u7684\u4ef7\u683c\u7b56\u7565\uff1b \u5b9a\u4e49\u4e86 GenericRelation \u7684\u5c5e\u6027\u7684\u8bdd\u9700\u8981\u6ce8\u610f\uff1a\u5220\u9664\u8bfe\u7a0b\u4e2d\u7684\u4e00\u6761\u8bb0\u5f55\u4ef7\u683c\u7b56\u7565\u8868\u4e2d\u4e0e\u8fd9\u4e2a\u8bfe\u7a0b\u76f8\u5173\u7684\u6240\u6709\u8bb0\u5f55\u4e5f\u90fd\u4f1a\u88ab\u5220\u9664\u6389\uff01 contenttypes\u7684\u4f7f\u7528\u573a\u666f \u5728\u5b9e\u9645\u4e2d\uff0ccontenttypes\u7edd\u5927\u591a\u6570\u90fd\u7528\u5728 \u4e00\u5f20\u8868\u4e0eN\u5f20\u8868\u52a8\u6001\u7684\u521b\u5efaForeignKey\u5173\u7cfb \u7684\u573a\u666f\u4e0b\u3002 \u5176\u5b9e\u5b9e\u9645\u4e2dcontenttypes\u7684\u4f7f\u7528\u573a\u666f\u8fd8\u662f\u5f88\u591a\u7684\uff0c\u6bd4\u5982 \u8bc4\u8bba\u529f\u80fd \uff1a\u5982\u679c\u4e00\u4e2a\u7f51\u7ad9\u7684\u6587\u7ae0\u3001\u89c6\u9891\u3001\u56fe\u7247\u7b49\u90fd\u9700\u8981\u52a0\u8bc4\u8bba\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8bc4\u8bba\u8fd9\u5f20\u8868\u4e0e\u6587\u7ae0\u3001\u56fe\u7247\u3001\u89c6\u9891\u90fd\u5efa\u7acb\u5411\u4e0a\u9762\u90a3\u6837\u7684 \u5916\u952e\u5173\u8054 \uff1b\u518d\u62ff\u4e0a\u9762\u7684\u4f8b\u5b50\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u4e3a\u4e0d\u540c\u5206\u7c7b\u4e0b\u7684\u6ca1\u95e8\u8bfe\u7a0b\u52a0\u5165 \u4f18\u60e0\u5238 \uff0c\u4f18\u60e0\u5238\u8fd9\u5f20\u8868\u8ddf \u4ef7\u683c\u7b56\u7565\u8868 \u6027\u8d28\u4e00\u6837\uff0c\u4e5f\u9700\u8981\u4e0e\u90a3\u4e24\u5f20\u8bfe\u7a0b\u8868\u5efa\u7acb\u5916\u952e\u5173\u7cfb\uff0c\u6b64\u65f6\u4f7f\u7528contenttypes\u4f1a\u5341\u5206\u9ad8\u6548\uff01 \u66f4\u591a\u53c2\u8003\u6587\u7ae0 \u5b98\u65b9\u6587\u6863 https://blog.csdn.net/laughing2333/article/details/53014267 https://blog.csdn.net/weixin_42134789/article/details/80690182","title":"contenttypes\u7ec4\u4ef6"},{"location":"Django\u7ec4\u4ef6/Django\u4e2dcontenttypes\u7ec4\u4ef6\u7684\u4f7f\u7528/#djangocontenttypes","text":"\u5047\u5982\u8bf4\uff0c\u516c\u53f8A\u7684\u4e3b\u8981\u4e1a\u52a1\u662f\u57f9\u8bad\u9752\u5c11\u5e74\u4eba\u5de5\u667a\u80fd\u4e0e\u673a\u5668\u4eba\u6280\u672f\uff0c\u4e3b\u8981\u5206\u7c7b\u662f \u57fa\u7840\u8bfe\u7a0b \u4e0e \u9ad8\u7ea7\u8bfe\u7a0b \uff0c\u800c\u8fd9\u4e24\u4e2a\u5927\u7684\u5206\u7c7b\u4e2d\u53c8\u6709\u5176\u4ed6\u5177\u4f53\u7684\u8bfe\u7a0b\u3002\u6bcf\u4e2a\u8bfe\u7a0b\u6839\u636e\u57f9\u8bad\u5468\u671f\u7684\u4e0d\u540c\u57f9\u8bad\u8d39\u7528\u7684\u8ba1\u7b97\u65b9\u5f0f\u4e5f\u4e0d\u4e00\u6837\u3002\u4e5f\u8bb8\u6ca1\u6709\u505a\u8fc7\u76f8\u5173\u4e1a\u52a1\u7684\u540c\u5b66\u8fd8\u6ca1\u6709get\u5230\u76f8\u5173\u7684\u70b9\uff0c\u8fd9\u91cc\u6211\u5148\u7c97\u7565\u7684\u753b\u4e00\u4e0b\u8868\u7ed3\u6784\uff0c\u540e\u9762\u518d\u8be6\u7ec6\u9610\u8ff0\u3002 \u521d\u7248\u8868\u7ed3\u6784\u8bbe\u8ba1 \u5982\u679c\u4e0d\u7528contenttypes\uff0c\u5927\u81f4\u7684\u8868\u7ed3\u6784\u4f1a\u8fd9\u4e48\u8bbe\u8ba1\uff1a \u7531\u4e0a\u56fe\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u57fa\u7840\u8bfe\u7a0b\u4e0e\u9ad8\u7ea7\u8bfe\u7a0b\u4e0b\u6709\u591a\u4e2a\u4e0d\u540c\u7684\u5b50\u8bfe\u7a0b\u3002 \u63a5\u4e0b\u6765\u770b\u4e00\u4e0b \u4ef7\u683c\u7b56\u7565 \u8fd9\u5f20\u8868\uff0c\u6bcf\u4e2a\u5c0f\u8bfe\u7a0b\uff08\u6bd4\u5982Python\u521d\u7ea7\u4e0ePython\u9ad8\u7ea7\uff09\u7531\u4e8e\u57f9\u8bad\u5468\u671f\u7684\u4e0d\u540c\u4ef7\u683c\u662f\u4e0d\u4e00\u6837\u7684 \uff08\u8fd9\u91cc\u53ea\u662f\u6a21\u62df\uff0c\u8bf7\u52ff\u5bf9\u53f7\u5165\u5ea7\uff09 \uff0c\u5e76\u4e14PricePolicy\u8868\u4e2d journeycourse_id \u4e0e seniorcourse_id \u662f\u4e0e\u4e24\u4e2a\u8bfe\u7a0b\u8868\u5efa\u7acb\u5916\u952e\u7684\u5b57\u6bb5\u2014\u2014\u6b64\u65f6\u806a\u660e\u7684\u4f60\u7acb\u523b\u5c31\u53d1\u73b0\u95ee\u9898\u4e86\uff1a\u521d\u7ea7\u8bfe\u7a0b\u7684\u5468\u671f\u6700\u591a\u5468\u671f\u53ea\u670921\u5929\uff0c\u800c\u9ad8\u7ea7\u8bfe\u7a0b\u7684\u57f9\u8bad\u5468\u671f\u662f\u6309\u6708\u6765\u8ba1\u7b97\u7684\uff01\u5982\u679c\u8fd9\u6837\u4f1a\u5bfc\u81f4\u6570\u636e\u5e93\u4e2d\u4ea7\u751f\u8bb8\u591a\u65e0\u7528\u7684\u7a7a\u6570\u636e\uff01 \u4e0a\u9762\u8fd9\u4e2a\u95ee\u9898\u8fd9\u662f\u4e00\u4e2a\u5f88\u5178\u578b\u7684 \u4e00\u5f20\u8868\u4e0e\u591a\u5f20\u8868\u52a8\u6001\u7684\u521b\u5efaForeignKey\u5173\u7cfb \u7684\u95ee\u9898\uff0c\u800c\u8981\u89e3\u51b3\u4e0a\u9762\u4ea7\u751f\u65e0\u7528\u6570\u636e\u7684\u95ee\u9898 \u53ef\u4ee5\u9009\u62e9\u4f7f\u7528Django\u4e2d\u7684contenttypes \u3002 \u4f7f\u7528contenttypes\u7684\u8868\u7ed3\u6784 \u8be6\u7ec6\u8bf4\u660e\u5982\u4e0b\uff1a \u65b0\u589e\u4e86\u4e00\u4e2aContentType\u8868\uff08settings\u4e2d\u9ed8\u8ba4\u6ce8\u518c\u4e86contenttypes\u7ec4\u4ef6\uff0cDjango\u542f\u52a8\u65f6\u4f1a\u81ea\u52a8\u751f\u6210\uff09\uff0c\u8fd9\u4e2a\u8868\u4e2d\u5b58\u653e\u4e86model\u7684\u540d\u79f0\uff1b \u4ef7\u683c\u7b56\u7565\u8868\u4e2d\u7684content_type_id\u5b57\u6bb5\u662f PricePolicy \u8868\u4e0e ContentType \u8868\u4e4b\u95f4\u5916\u952e\u5173\u8054\u7684\u5b57\u6bb5\uff1b \u4ef7\u683c\u7b56\u7565\u8868\u4e2d\u7684object_id\u5b57\u6bb5\u5bf9\u5e94\u7684\u662f \u57fa\u7840\u8bfe\u7a0b \u6216\u8005 \u9ad8\u7ea7\u8bfe\u7a0b \u4e2d\u5177\u4f53\u7684\u5b50\u7c7b\u8bfe\u7a0b\u7684id\uff1b \u5728\u4ef7\u683c\u7b56\u7565\u8868\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u5927\u8bfe\u7a0b\u7684\u5206\u7c7b content_type_id \u3001\u5b50\u8bfe\u7a0b\u7684id object_id \u4ee5\u53ca\u57f9\u8bad\u7684\u5468\u671f period \u786e\u5b9a\u4e00\u6761\u552f\u4e00\u7684\u8bb0\u5f55\uff01 \u7279\u522b\u6ce8\u610f object_id \u53ea\u662f\u4e00\u4e2a\u666e\u901a\u7684\u5b57\u6bb5\uff0c\u5b83\u5e76\u6ca1\u6709\u4e0e\u4efb\u4f55\u8868\u5efa\u7acb\u5916\u952e\u5173\u8054\uff01 \u8fd9\u6837\u8bbe\u8ba1\u7684\u8bdd\u5c31\u4e0d\u4f1a\u51fa\u73b0\u4e0a\u9762\u90a3\u79cd\u7a7a\u7684\u65e0\u6548\u6570\u636e\u4e86\uff01","title":"Django\u4e2d\u7684contenttypes\u7ec4\u4ef6"},{"location":"Django\u7ec4\u4ef6/Django\u4e2dcontenttypes\u7ec4\u4ef6\u7684\u4f7f\u7528/#contenttypes","text":"\u8001\u89c4\u77e9\uff0c\u5148\u4e0a\u4ee3\u7801\uff0c\u540e\u9762\u7ed9\u51fa\u5177\u4f53\u7684\u8bf4\u660e\uff01 \u9879\u76ee\u5e94\u7528\u4e2d\u7684models.py\u6587\u4ef6\u5982\u4e0b\uff1a from django.db import models from django.contrib.contenttypes.models import ContentType from django.contrib.contenttypes.fields import GenericForeignKey,GenericRelation class JuniorCourse(models.Model): \"\"\"\u521d\u7ea7\u8bfe\u7a0b\"\"\" name = models.CharField(max_length=64,verbose_name='\u521d\u7ea7\u8bfe\u7a0b\u540d\u79f0') course_img = models.CharField(max_length=255, verbose_name=\"\u8bfe\u7a0b\u7f29\u7565\u56fe\") brief = models.TextField(verbose_name=\"\u521d\u7ea7\u8bfe\u7a0b\u7b80\u4ecb\", ) # \u4e0d\u4f1a\u5728\u6570\u636e\u5e93\u4e2d\u751f\u6210\u5217\uff0c\u53ea\u662f\u5e2e\u6211\u4eec\u6dfb\u52a0\u4e0e\u67e5\u8be2\u6570\u636e\u7528\u7684 # \u5efa\u7acbGenericRelation\u7684\u5b57\u6bb5\u5982\u679c\u88ab\u5220\u9664\u7684\u8bdd\uff0cPricePolicy\u4e2d\u5bf9\u5e94\u7684\u8bb0\u5f55\u4e5f\u4f1a\u88ab\u5220\u6389\uff01 policy_lst = GenericRelation('PricePolicy') class SeniorCourse(models.Model): \"\"\"\u9ad8\u7ea7\u8bfe\u7a0b\"\"\" name = models.CharField(max_length=64, verbose_name='\u8fdb\u9636\u7ea7\u8bfe\u7a0b\u540d\u79f0') course_img = models.CharField(max_length=255, verbose_name=\"\u8bfe\u7a0b\u7f29\u7565\u56fe\") brief = models.TextField(verbose_name=\"\u8fdb\u9636\u7ea7\u8bfe\u7a0b\u7b80\u4ecb\", ) # \u4e0d\u4f1a\u5728\u6570\u636e\u5e93\u4e2d\u751f\u6210\u5217\uff0c\u53ea\u662f\u5e2e\u6211\u4eec\u6dfb\u52a0\u4e0e\u67e5\u8be2\u6570\u636e\u7528\u7684 # \u5efa\u7acbGenericRelation\u7684\u5b57\u6bb5\u5982\u679c\u88ab\u5220\u9664\u7684\u8bdd\uff0cPricePolicy\u4e2d\u5bf9\u5e94\u7684\u8bb0\u5f55\u4e5f\u4f1a\u88ab\u5220\u6389\uff01 policy_lst = GenericRelation('PricePolicy') class PricePolicy(models.Model): \"\"\"\u4ef7\u683c\u7b56\u7565\u2014\u2014\u8bfe\u7a0b\u6709\u6548\u671f\u4e0e\u4ef7\u683c\u8868\"\"\" # \u4e0eContentType\u8868\u505a\u5173\u8054 \u2014\u2014 \u627e\u5230\u5927\u7684\u5206\u7c7b content_type = models.ForeignKey(to=ContentType,on_delete=models.CASCADE) # \u5bf9\u5e94\"\u5927\u5206\u7c7b\u4e2d\u7684\u8bfe\u7a0b\u7684id\"\uff0c\u7528\u6b63\u6574\u6570\u8868\u793a \u2014\u2014 \u540d\u5b57\u5fc5\u987b\u53ebobject_id object_id = models.PositiveIntegerField() # \u4e0d\u4f1a\u5728\u6570\u636e\u5e93\u4e2d\u751f\u6210\u5217\uff0c\u53ea\u662f\u5e2e\u6211\u4eec\u6dfb\u52a0\u4e0e\u67e5\u8be2\u67e5\u8be2\u6570\u636e\u7528\u7684 content_object = GenericForeignKey('content_type','object_id') valid_period_choices = ( (1,'1\u5929'), (3,'3\u5929'), (7,'1\u5468'), (14,'2\u5468'), (21,'3\u5468'), (30,'1\u4e2a\u6708'), (60,'2\u4e2a\u6708'), (90,'3\u4e2a\u6708'), ) valid_period = models.SmallIntegerField(choices=valid_period_choices,verbose_name='\u8bfe\u7a0b\u5468\u671f') price = models.DecimalField(max_digits=8,decimal_places=1) \u8be6\u7ec6\u8bf4\u660e\u5982\u4e0b\uff1a 1\u3001 \u5927\u5bb6\u9996\u5148\u8981\u6ce8\u610f\u4e00\u70b9\uff1a\u7531\u4e8e\u9879\u76ee\u7684settings.py\u6587\u4ef6\u4e2d\u9ed8\u8ba4\u6ce8\u518c\u4e86 django.contrib.contenttypes \u8fd9\u4e2a\u7ec4\u4ef6\uff0c\u6240\u4ee5\u6211\u4eec\u5728 \u6267\u884c\u6570\u636e\u5e93\u8fc1\u79fb\u6307\u4ee4 \u7684\u65f6\u5019\uff0cDjango\u4f1a\u81ea\u52a8\u4e3a\u6211\u4eec\u521b\u5efa\u4e00\u5f20\u94ed\u6587 django_content_type \u7684\u8868\uff0c\u5b58\u653e\u9879\u76ee\u5e94\u7528\u4e0e\u5e94\u7528\u91cc\u9762model\u5bf9\u5e94\u5173\u7cfb\uff1a \u53ef\u4ee5\u770b\u5230\uff0c\u6700\u4e0b\u9762\u90a3\u4e09\u6761\u8bb0\u5f55\u5c31\u662f\u6211\u4e0a\u9762\u7684\u4ee3\u7801\u6267\u884c \u6570\u636e\u5e93\u8fc1\u79fb\u6307\u4ee4 \u540e\u751f\u6210\u7684\u2014\u2014\u6211\u7684\u5e94\u7528\u540d\u53ebtestapp\u3002 2\u3001 \u5f15\u7528\u8fd9\u5f20 django_content_type \u8868\u7684\u65b9\u5f0f\u662f\uff1a from django.contrib.contenttypes.models import ContentType \u6ce8\u610f\u4e0d\u8981\u6539\u8fd9\u5f20\u8868\uff01\u6211\u4eec\u4ece\u91cc\u9762\u67e5\u6570\u636e\u5c31\u597d\u4e86\u2014\u2014\u57fa\u672c\u4e0a\u90fd\u662f\u67e5model\u3002 3\u3001 \u6211\u4eec\u6765\u770b\u4e00\u4e0b PricePolicy \u8fd9\u4e2a\u7c7b\uff1a\u9996\u5148\u5b83\u4e0eContentType\u8868\u5efa\u7acb\u4e86\u5916\u952e\u5173\u8054\uff0c content_object \u8fd9\u4e2a\u5c5e\u6027\u662f GenericForeignKey \u7c7b\u5b9e\u4f8b\u5316\u7684\u5bf9\u8c61\uff0c\u53c2\u6570\u662f\u4e0a\u9762\u7684 content_type \u4e0e object_id \u5c5e\u6027\u2014\u2014\u8fd9\u6b65\u64cd\u4f5c\u4e0d\u4f1a\u5728\u6570\u636e\u5e93\u4e2d\u521b\u5efa\u65b0\u7684\u5217\uff0c\u662f\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u540e\u7eed\u6dfb\u52a0\u4e0e\u67e5\u8be2\u6570\u636e\u7528\u7684\u3002\u6211\u4eec\u5728\u77e5\u9053\u4e86\u4ef7\u683c\u7b56\u7565\u7684\u6761\u4ef6\u4e0b\u53ef\u4ee5\u6839\u636e GenericForeignKey \u5bf9\u5e94\u7684\u5c5e\u6027\u67e5\u5230\u5177\u4f53\u7684\u8bfe\u7a0b\u3002 4\u3001 GenericRelation \u5199\u5728\u4e86\u5177\u4f53\u8bfe\u7a0b\u7684\u7c7b\u4e0b\u9762\uff0c\u6211\u4eec\u53ef\u4ee5\u5b83\u5b9e\u4f8b\u5316\u7684\u5c5e\u6027\uff0c\u62ff\u8bfe\u7a0b\u5bf9\u8c61\u53bb\u67e5\u8be2\u8fd9\u4e2a\u8bfe\u7a0b\u5bf9\u5e94\u7684\u4ef7\u683c\u7b56\u7565\u90fd\u6709\u54ea\u4e9b\u2014\u2014\u4f46\u662f\u8981\u6ce8\u610f\u4e00\u70b9\uff1aGenericRelation\u5bf9\u5e94\u5b57\u6bb5\u7684\u5bf9\u8c61\u5982\u679c\u88ab\u5220\u9664\u7684\u8bdd\uff0cPricePolicy\u4e2d\u5bf9\u5e94\u7684\u8bb0\u5f55\u4e5f\u4f1a\u88ab\u5220\u6389\uff01\u4e5f\u5c31\u662f\u8bf4\uff0c\u6839\u636e\u4e0a\u9762\u5efa\u7acb\u7684model\u5173\u7cfb\uff0c\u5982\u679c\u6211\u5220\u9664\u4e86\u4e00\u6761seniorcourse\u4e2d\u7684\u8bb0\u5f55\uff0c\u90a3\u4e0e\u8fd9\u6761\u8bb0\u5f55\u5bf9\u5e94\u7684pricepolicy\u4e2d\u7684\u8bb0\u5f55\u4e5f\u4f1a\u88ab\u5220\u9664\uff01","title":"contenttypes\u7684\u5177\u4f53\u5b9e\u73b0"},{"location":"Django\u7ec4\u4ef6/Django\u4e2dcontenttypes\u7ec4\u4ef6\u7684\u4f7f\u7528/#_1","text":"\u4e0a\u9762\u4ecb\u7ecd\u4e86\u5728 models.py \u4e2d\u5982\u4f55\u7528contenttypes\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u770b\u770b\u5982\u4f55\u5728\u89c6\u56fe\u51fd\u6570\u4e2d\u4f7f\u7528\u5b83\u3002 \u5411\u4ef7\u683c\u7b56\u7565\u8868\u4e2d\u6dfb\u52a0\u6570\u636e \u7531\u4e8e\u4e0a\u9762\u7684 models.py \u6587\u4ef6\u4e2d\u6211\u4eec\u5728 PricePolicy \u7c7b\u4e2d\u5b9a\u4e49\u4e86 content_object \u8fd9\u4e2a GenericForeignkey \u7c7b\u7684\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u5728\u521b\u5efa\u6570\u636e\u7684\u65f6\u5019\u76f4\u63a5\u6307\u5b9a content_object \u5c31\u53ef\u4ee5\u4e86\uff1a # \u4e0eseniorcourse\u8868\u7684\u5173\u7cfb models.PricePolicy.objects.create( valid_period=7, price=123.45, # \u76f4\u63a5\u6839\u636eSeniorCourse\u5bf9\u8c61\u6dfb\u52a0 content_object = models.SeniorCourse.objects.get(pk=2), ) # \u4e0ejuniorcourse\u8868\u7684\u5173\u7cfb models.PricePolicy.objects.create( valid_period=3, price=35.66, # # \u76f4\u63a5\u6839\u636eJuniorCourse\u5bf9\u8c61\u6dfb\u52a0 content_object = models.JuniorCourse.objects.get(pk=1), \u5176\u4ed6\u4e24\u5f20\u8bfe\u7a0b\u8868\u76f4\u63a5\u6dfb\u52a0\u6570\u636e\u5c31\u597d\u4e86\uff0c\u6ca1\u6709\u4efb\u4f55\u7684\u7ea6\u675f\u3002 \u6839\u636e\u67d0\u4e2a\u4ef7\u683c\u7b56\u7565\u5bf9\u8c61\u53bb\u627e\u4e0e\u5b83\u5bf9\u5e94\u7684\u8868\u7684\u6570\u636e \u8fd9\u91cc\u5176\u5b9e\u8fd8\u662f\u5229\u7528\u4e86 GenericForeignKey \uff0c\u81ea\u52a8 \u8de8\u8868\u67e5\u8be2 \uff1a from django.contrib.contenttypes.models import ContentType # \u5728ContentType\u8868\u4e2d\u627e\u5230\u5177\u4f53\u7684\u8868 contenttype_obj = ContentType.objects.get(model='seniorcourse') # \u627e\u5230\u4ef7\u683c\u7b56\u7565\u5bf9\u8c61 # \u6ce8\u610fget\u662f\u67e5\u8be2\u552f\u4e00\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5\u7ed9\u51fa\u7684\u6761\u4ef6\u5fc5\u987b\u4fdd\u8bc1\u53ea\u67e5\u5230\u4e00\u4e2a\u5bf9\u8c61\uff01 obj=models.PricePolicy.objects.get(content_type=contenttype_obj,object_id=1,valid_period=) ### \u76f4\u63a5\u201c\u8de8\u8868\u67e5\u8be2\u201d\u5c31\u597d\u4e86 print(obj.content_object.name) \u627e\u5230\u67d0\u4e2a\u8bfe\u7a0b\u76f8\u5173\u7684\u6240\u6709\u4ef7\u683c\u7b56\u7565 * \u8fd9\u4e2a\u5728\u5b9e\u9645\u4e2d\u7528\u7684\u8fd8\u662f\u5f88\u591a\u7684\uff01\u8fd9\u91cc\u7528\u5230\u4e86 GenericRelation \uff0c\u4e5f\u5c31\u662f\u4e0a\u9762 models.py \u6587\u4ef6\u4e2d\u5b9a\u4e49\u5728\u9ad8\u7ea7\u8bfe\u7a0b\u4e0e\u521d\u7ea7\u8bfe\u7a0b\u7c7b\u4e2d\u7684\u90a3\u4e24\u4e2a\u5c5e\u6027\u3002 obj = models.SeniorCourse.objects.get(pk=1) # \u6ce8\u610f\u8fd9\u91cc\u5fc5\u987b\u7528all()\u65b9\u6cd5 for i in obj.policy_lst.all(): print(i.pk,i.valid_period,i.price) \u8bfe\u7a0b\u4e2d\u5982\u679c\u7528\u4e86GenericRelation\u7c7b\u5b9e\u4f8b\u5316\u51fa\u6765\u7684\u5bf9\u8c61\u4f5c\u4e3a\u5c5e\u6027\u7684\u8bdd\uff0c\u5220\u9664\u8bfe\u7a0b\u4e2d\u7684\u6570\u636e\u65f6\uff0c\u4ef7\u683c\u7b56\u7565\u4e2d\u4e0e\u4e4b\u76f8\u5173\u7684\u6570\u636e\u4e5f\u4f1a\u4e00\u8d77\u88ab\u5220\u9664\uff01 # \u5220\u9664\u4e86SeniorCourse\u4e2d\u7684\u4e00\u4e2a\u8bfe\u7a0b\u540e\uff0cPricePublic\u4e2d\u4e0e\u4e4b\u76f8\u5173\u7684\u6570\u636e\u90fd\u5220\u9664\u4e86\uff01\uff01\uff01 models.SeniorCourse.objects.get(pk=1).delete()","title":"\u89c6\u56fe\u51fd\u6570\u4e2d\u7684\u589e\u5220\u6539\u67e5"},{"location":"Django\u7ec4\u4ef6/Django\u4e2dcontenttypes\u7ec4\u4ef6\u7684\u4f7f\u7528/#contenttypes_1","text":"\u6839\u636e\u4e0a\u9762\u7684\u4ecb\u7ecd\uff0c\u5176\u5b9econtenttypes\u7684\u4f7f\u7528\u5927\u81f4\u5206\u4e3a\u8fd9\u51e0\u6b65\uff1a \u521b\u5efaContentType\u8868\uff08Django\u7684settings\u4e2d\u9ed8\u8ba4\u6ce8\u518c\u4e86contenttypes\u5e94\u7528\uff0c\u542f\u52a8\u65f6\u4f1a\u81ea\u52a8\u751f\u6210\uff09\uff1b \u4ef7\u683c\u7b56\u7565\u8868\u4e0eContentType\u8868\u5efa\u7acb\u5916\u952e\u5173\u8054\u5173\u7cfb\uff1b \u5b9a\u4e49 GenericForeignKey \u5c5e\u6027\uff0c\u6839\u636e\u4ef7\u683c\u7b56\u7565\u8868\u4e2d\u7684\u8bb0\u5f55\u53bb\u67e5\u8be2\u5177\u4f53\u8bfe\u7a0b\u7684\u4fe1\u606f\u6216\u8005\u6839\u636e\u8bfe\u7a0b\u5bf9\u8c61\u521b\u5efa\u4ef7\u683c\u7b56\u7565\u7684\u8bb0\u5f55\uff1b \u5b9a\u4e49 GenericRelation \u7684\u5c5e\u6027\uff0c\u6839\u636e\u5177\u4f53\u7684\u8bfe\u7a0b\u5bf9\u8c61\u5728\u4ef7\u683c\u7b56\u7565\u8868\u4e2d\u67e5\u627e\u4e0e\u8fd9\u4e2a\u8bfe\u7a0b\u76f8\u5173\u7684\u6240\u6709\u7684\u4ef7\u683c\u7b56\u7565\uff1b \u5b9a\u4e49\u4e86 GenericRelation \u7684\u5c5e\u6027\u7684\u8bdd\u9700\u8981\u6ce8\u610f\uff1a\u5220\u9664\u8bfe\u7a0b\u4e2d\u7684\u4e00\u6761\u8bb0\u5f55\u4ef7\u683c\u7b56\u7565\u8868\u4e2d\u4e0e\u8fd9\u4e2a\u8bfe\u7a0b\u76f8\u5173\u7684\u6240\u6709\u8bb0\u5f55\u4e5f\u90fd\u4f1a\u88ab\u5220\u9664\u6389\uff01","title":"contenttypes\u4f7f\u7528\u5c0f\u7ed3"},{"location":"Django\u7ec4\u4ef6/Django\u4e2dcontenttypes\u7ec4\u4ef6\u7684\u4f7f\u7528/#contenttypes_2","text":"\u5728\u5b9e\u9645\u4e2d\uff0ccontenttypes\u7edd\u5927\u591a\u6570\u90fd\u7528\u5728 \u4e00\u5f20\u8868\u4e0eN\u5f20\u8868\u52a8\u6001\u7684\u521b\u5efaForeignKey\u5173\u7cfb \u7684\u573a\u666f\u4e0b\u3002 \u5176\u5b9e\u5b9e\u9645\u4e2dcontenttypes\u7684\u4f7f\u7528\u573a\u666f\u8fd8\u662f\u5f88\u591a\u7684\uff0c\u6bd4\u5982 \u8bc4\u8bba\u529f\u80fd \uff1a\u5982\u679c\u4e00\u4e2a\u7f51\u7ad9\u7684\u6587\u7ae0\u3001\u89c6\u9891\u3001\u56fe\u7247\u7b49\u90fd\u9700\u8981\u52a0\u8bc4\u8bba\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8bc4\u8bba\u8fd9\u5f20\u8868\u4e0e\u6587\u7ae0\u3001\u56fe\u7247\u3001\u89c6\u9891\u90fd\u5efa\u7acb\u5411\u4e0a\u9762\u90a3\u6837\u7684 \u5916\u952e\u5173\u8054 \uff1b\u518d\u62ff\u4e0a\u9762\u7684\u4f8b\u5b50\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u4e3a\u4e0d\u540c\u5206\u7c7b\u4e0b\u7684\u6ca1\u95e8\u8bfe\u7a0b\u52a0\u5165 \u4f18\u60e0\u5238 \uff0c\u4f18\u60e0\u5238\u8fd9\u5f20\u8868\u8ddf \u4ef7\u683c\u7b56\u7565\u8868 \u6027\u8d28\u4e00\u6837\uff0c\u4e5f\u9700\u8981\u4e0e\u90a3\u4e24\u5f20\u8bfe\u7a0b\u8868\u5efa\u7acb\u5916\u952e\u5173\u7cfb\uff0c\u6b64\u65f6\u4f7f\u7528contenttypes\u4f1a\u5341\u5206\u9ad8\u6548\uff01","title":"contenttypes\u7684\u4f7f\u7528\u573a\u666f"},{"location":"Django\u7ec4\u4ef6/Django\u4e2dcontenttypes\u7ec4\u4ef6\u7684\u4f7f\u7528/#_2","text":"\u5b98\u65b9\u6587\u6863 https://blog.csdn.net/laughing2333/article/details/53014267 https://blog.csdn.net/weixin_42134789/article/details/80690182","title":"\u66f4\u591a\u53c2\u8003\u6587\u7ae0"},{"location":"Django\u8fdb\u9636/ORM\u8bed\u53e5\u7684\u4f18\u5316/","text":"","title":"ORM\u8bed\u53e5\u7684\u4f18\u5316"}]}